"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_js_1 = require("../utils.js");
const parameter_object_js_1 = __importDefault(require("./parameter-object.js"));
function transformParameterObjectArray(parameterObjectArray, { path, ctx }) {
    const output = [];
    const parameters = Array.isArray(parameterObjectArray) ? parameterObjectArray.map((p) => [p.name, p]) : Object.entries(parameterObjectArray);
    for (const [id, param] of parameters) {
        let key = (0, utils_js_1.escObjKey)(id);
        if (ctx.immutableTypes)
            key = (0, utils_js_1.tsReadonly)(key);
        const node = "$ref" in param ? ctx.parameters[param.$ref] : param;
        if (!node)
            continue;
        if (node.in !== "path" && !node.required)
            key = (0, utils_js_1.tsOptionalProperty)(key);
        output.push((0, utils_js_1.indent)(`${key}: ${(0, parameter_object_js_1.default)(node, {
            path: `${path}/${node.name}`,
            ctx: { ...ctx, indentLv: ctx.indentLv + 1 },
        })};`, ctx.indentLv));
    }
    return output.join("\n");
}
exports.default = transformParameterObjectArray;
//# sourceMappingURL=parameter-object-array.js.map