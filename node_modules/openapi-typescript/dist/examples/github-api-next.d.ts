type Without<T, U> = {
    [P in Exclude<keyof T, keyof U>]?: never;
};
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;
export interface paths {
    "/": {
        get: operations["meta/root"];
    };
    "/advisories": {
        get: operations["security-advisories/list-global-advisories"];
    };
    "/advisories/{ghsa_id}": {
        get: operations["security-advisories/get-global-advisory"];
    };
    "/app": {
        get: operations["apps/get-authenticated"];
    };
    "/app-manifests/{code}/conversions": {
        post: operations["apps/create-from-manifest"];
    };
    "/app/hook/config": {
        get: operations["apps/get-webhook-config-for-app"];
        patch: operations["apps/update-webhook-config-for-app"];
    };
    "/app/hook/deliveries": {
        get: operations["apps/list-webhook-deliveries"];
    };
    "/app/hook/deliveries/{delivery_id}": {
        get: operations["apps/get-webhook-delivery"];
    };
    "/app/hook/deliveries/{delivery_id}/attempts": {
        post: operations["apps/redeliver-webhook-delivery"];
    };
    "/app/installation-requests": {
        get: operations["apps/list-installation-requests-for-authenticated-app"];
    };
    "/app/installations": {
        get: operations["apps/list-installations"];
    };
    "/app/installations/{installation_id}": {
        get: operations["apps/get-installation"];
        delete: operations["apps/delete-installation"];
    };
    "/app/installations/{installation_id}/access_tokens": {
        post: operations["apps/create-installation-access-token"];
    };
    "/app/installations/{installation_id}/suspended": {
        put: operations["apps/suspend-installation"];
        delete: operations["apps/unsuspend-installation"];
    };
    "/applications/{client_id}/grant": {
        delete: operations["apps/delete-authorization"];
    };
    "/applications/{client_id}/token": {
        post: operations["apps/check-token"];
        delete: operations["apps/delete-token"];
        patch: operations["apps/reset-token"];
    };
    "/applications/{client_id}/token/scoped": {
        post: operations["apps/scope-token"];
    };
    "/apps/{app_slug}": {
        get: operations["apps/get-by-slug"];
    };
    "/codes_of_conduct": {
        get: operations["codes-of-conduct/get-all-codes-of-conduct"];
    };
    "/codes_of_conduct/{key}": {
        get: operations["codes-of-conduct/get-conduct-code"];
    };
    "/emojis": {
        get: operations["emojis/get"];
    };
    "/enterprises/{enterprise}/dependabot/alerts": {
        get: operations["dependabot/list-alerts-for-enterprise"];
    };
    "/enterprises/{enterprise}/secret-scanning/alerts": {
        get: operations["secret-scanning/list-alerts-for-enterprise"];
    };
    "/events": {
        get: operations["activity/list-public-events"];
    };
    "/feeds": {
        get: operations["activity/get-feeds"];
    };
    "/gists": {
        get: operations["gists/list"];
        post: operations["gists/create"];
    };
    "/gists/public": {
        get: operations["gists/list-public"];
    };
    "/gists/starred": {
        get: operations["gists/list-starred"];
    };
    "/gists/{gist_id}": {
        get: operations["gists/get"];
        delete: operations["gists/delete"];
        patch: operations["gists/update"];
    };
    "/gists/{gist_id}/comments": {
        get: operations["gists/list-comments"];
        post: operations["gists/create-comment"];
    };
    "/gists/{gist_id}/comments/{comment_id}": {
        get: operations["gists/get-comment"];
        delete: operations["gists/delete-comment"];
        patch: operations["gists/update-comment"];
    };
    "/gists/{gist_id}/commits": {
        get: operations["gists/list-commits"];
    };
    "/gists/{gist_id}/forks": {
        get: operations["gists/list-forks"];
        post: operations["gists/fork"];
    };
    "/gists/{gist_id}/star": {
        get: operations["gists/check-is-starred"];
        put: operations["gists/star"];
        delete: operations["gists/unstar"];
    };
    "/gists/{gist_id}/{sha}": {
        get: operations["gists/get-revision"];
    };
    "/gitignore/templates": {
        get: operations["gitignore/get-all-templates"];
    };
    "/gitignore/templates/{name}": {
        get: operations["gitignore/get-template"];
    };
    "/installation/repositories": {
        get: operations["apps/list-repos-accessible-to-installation"];
    };
    "/installation/token": {
        delete: operations["apps/revoke-installation-access-token"];
    };
    "/issues": {
        get: operations["issues/list"];
    };
    "/licenses": {
        get: operations["licenses/get-all-commonly-used"];
    };
    "/licenses/{license}": {
        get: operations["licenses/get"];
    };
    "/markdown": {
        post: operations["markdown/render"];
    };
    "/markdown/raw": {
        post: operations["markdown/render-raw"];
    };
    "/marketplace_listing/accounts/{account_id}": {
        get: operations["apps/get-subscription-plan-for-account"];
    };
    "/marketplace_listing/plans": {
        get: operations["apps/list-plans"];
    };
    "/marketplace_listing/plans/{plan_id}/accounts": {
        get: operations["apps/list-accounts-for-plan"];
    };
    "/marketplace_listing/stubbed/accounts/{account_id}": {
        get: operations["apps/get-subscription-plan-for-account-stubbed"];
    };
    "/marketplace_listing/stubbed/plans": {
        get: operations["apps/list-plans-stubbed"];
    };
    "/marketplace_listing/stubbed/plans/{plan_id}/accounts": {
        get: operations["apps/list-accounts-for-plan-stubbed"];
    };
    "/meta": {
        get: operations["meta/get"];
    };
    "/networks/{owner}/{repo}/events": {
        get: operations["activity/list-public-events-for-repo-network"];
    };
    "/notifications": {
        get: operations["activity/list-notifications-for-authenticated-user"];
        put: operations["activity/mark-notifications-as-read"];
    };
    "/notifications/threads/{thread_id}": {
        get: operations["activity/get-thread"];
        patch: operations["activity/mark-thread-as-read"];
    };
    "/notifications/threads/{thread_id}/subscription": {
        get: operations["activity/get-thread-subscription-for-authenticated-user"];
        put: operations["activity/set-thread-subscription"];
        delete: operations["activity/delete-thread-subscription"];
    };
    "/octocat": {
        get: operations["meta/get-octocat"];
    };
    "/organizations": {
        get: operations["orgs/list"];
    };
    "/orgs/{org}": {
        get: operations["orgs/get"];
        delete: operations["orgs/delete"];
        patch: operations["orgs/update"];
    };
    "/orgs/{org}/actions/cache/usage": {
        get: operations["actions/get-actions-cache-usage-for-org"];
    };
    "/orgs/{org}/actions/cache/usage-by-repository": {
        get: operations["actions/get-actions-cache-usage-by-repo-for-org"];
    };
    "/orgs/{org}/actions/oidc/customization/sub": {
        get: operations["oidc/get-oidc-custom-sub-template-for-org"];
        put: operations["oidc/update-oidc-custom-sub-template-for-org"];
    };
    "/orgs/{org}/actions/permissions": {
        get: operations["actions/get-github-actions-permissions-organization"];
        put: operations["actions/set-github-actions-permissions-organization"];
    };
    "/orgs/{org}/actions/permissions/repositories": {
        get: operations["actions/list-selected-repositories-enabled-github-actions-organization"];
        put: operations["actions/set-selected-repositories-enabled-github-actions-organization"];
    };
    "/orgs/{org}/actions/permissions/repositories/{repository_id}": {
        put: operations["actions/enable-selected-repository-github-actions-organization"];
        delete: operations["actions/disable-selected-repository-github-actions-organization"];
    };
    "/orgs/{org}/actions/permissions/selected-actions": {
        get: operations["actions/get-allowed-actions-organization"];
        put: operations["actions/set-allowed-actions-organization"];
    };
    "/orgs/{org}/actions/permissions/workflow": {
        get: operations["actions/get-github-actions-default-workflow-permissions-organization"];
        put: operations["actions/set-github-actions-default-workflow-permissions-organization"];
    };
    "/orgs/{org}/actions/runners": {
        get: operations["actions/list-self-hosted-runners-for-org"];
    };
    "/orgs/{org}/actions/runners/downloads": {
        get: operations["actions/list-runner-applications-for-org"];
    };
    "/orgs/{org}/actions/runners/generate-jitconfig": {
        post: operations["actions/generate-runner-jitconfig-for-org"];
    };
    "/orgs/{org}/actions/runners/registration-token": {
        post: operations["actions/create-registration-token-for-org"];
    };
    "/orgs/{org}/actions/runners/remove-token": {
        post: operations["actions/create-remove-token-for-org"];
    };
    "/orgs/{org}/actions/runners/{runner_id}": {
        get: operations["actions/get-self-hosted-runner-for-org"];
        delete: operations["actions/delete-self-hosted-runner-from-org"];
    };
    "/orgs/{org}/actions/runners/{runner_id}/labels": {
        get: operations["actions/list-labels-for-self-hosted-runner-for-org"];
        put: operations["actions/set-custom-labels-for-self-hosted-runner-for-org"];
        post: operations["actions/add-custom-labels-to-self-hosted-runner-for-org"];
        delete: operations["actions/remove-all-custom-labels-from-self-hosted-runner-for-org"];
    };
    "/orgs/{org}/actions/runners/{runner_id}/labels/{name}": {
        delete: operations["actions/remove-custom-label-from-self-hosted-runner-for-org"];
    };
    "/orgs/{org}/actions/secrets": {
        get: operations["actions/list-org-secrets"];
    };
    "/orgs/{org}/actions/secrets/public-key": {
        get: operations["actions/get-org-public-key"];
    };
    "/orgs/{org}/actions/secrets/{secret_name}": {
        get: operations["actions/get-org-secret"];
        put: operations["actions/create-or-update-org-secret"];
        delete: operations["actions/delete-org-secret"];
    };
    "/orgs/{org}/actions/secrets/{secret_name}/repositories": {
        get: operations["actions/list-selected-repos-for-org-secret"];
        put: operations["actions/set-selected-repos-for-org-secret"];
    };
    "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}": {
        put: operations["actions/add-selected-repo-to-org-secret"];
        delete: operations["actions/remove-selected-repo-from-org-secret"];
    };
    "/orgs/{org}/actions/variables": {
        get: operations["actions/list-org-variables"];
        post: operations["actions/create-org-variable"];
    };
    "/orgs/{org}/actions/variables/{name}": {
        get: operations["actions/get-org-variable"];
        delete: operations["actions/delete-org-variable"];
        patch: operations["actions/update-org-variable"];
    };
    "/orgs/{org}/actions/variables/{name}/repositories": {
        get: operations["actions/list-selected-repos-for-org-variable"];
        put: operations["actions/set-selected-repos-for-org-variable"];
    };
    "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}": {
        put: operations["actions/add-selected-repo-to-org-variable"];
        delete: operations["actions/remove-selected-repo-from-org-variable"];
    };
    "/orgs/{org}/blocks": {
        get: operations["orgs/list-blocked-users"];
    };
    "/orgs/{org}/blocks/{username}": {
        get: operations["orgs/check-blocked-user"];
        put: operations["orgs/block-user"];
        delete: operations["orgs/unblock-user"];
    };
    "/orgs/{org}/code-scanning/alerts": {
        get: operations["code-scanning/list-alerts-for-org"];
    };
    "/orgs/{org}/codespaces": {
        get: operations["codespaces/list-in-organization"];
    };
    "/orgs/{org}/codespaces/access": {
        put: operations["codespaces/set-codespaces-access"];
    };
    "/orgs/{org}/codespaces/access/selected_users": {
        post: operations["codespaces/set-codespaces-access-users"];
        delete: operations["codespaces/delete-codespaces-access-users"];
    };
    "/orgs/{org}/codespaces/secrets": {
        get: operations["codespaces/list-org-secrets"];
    };
    "/orgs/{org}/codespaces/secrets/public-key": {
        get: operations["codespaces/get-org-public-key"];
    };
    "/orgs/{org}/codespaces/secrets/{secret_name}": {
        get: operations["codespaces/get-org-secret"];
        put: operations["codespaces/create-or-update-org-secret"];
        delete: operations["codespaces/delete-org-secret"];
    };
    "/orgs/{org}/codespaces/secrets/{secret_name}/repositories": {
        get: operations["codespaces/list-selected-repos-for-org-secret"];
        put: operations["codespaces/set-selected-repos-for-org-secret"];
    };
    "/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}": {
        put: operations["codespaces/add-selected-repo-to-org-secret"];
        delete: operations["codespaces/remove-selected-repo-from-org-secret"];
    };
    "/orgs/{org}/copilot/billing": {
        get: operations["copilot/get-copilot-organization-details"];
    };
    "/orgs/{org}/copilot/billing/seats": {
        get: operations["copilot/list-copilot-seats"];
    };
    "/orgs/{org}/copilot/billing/selected_teams": {
        post: operations["copilot/add-copilot-for-business-seats-for-teams"];
        delete: operations["copilot/cancel-copilot-seat-assignment-for-teams"];
    };
    "/orgs/{org}/copilot/billing/selected_users": {
        post: operations["copilot/add-copilot-for-business-seats-for-users"];
        delete: operations["copilot/cancel-copilot-seat-assignment-for-users"];
    };
    "/orgs/{org}/dependabot/alerts": {
        get: operations["dependabot/list-alerts-for-org"];
    };
    "/orgs/{org}/dependabot/secrets": {
        get: operations["dependabot/list-org-secrets"];
    };
    "/orgs/{org}/dependabot/secrets/public-key": {
        get: operations["dependabot/get-org-public-key"];
    };
    "/orgs/{org}/dependabot/secrets/{secret_name}": {
        get: operations["dependabot/get-org-secret"];
        put: operations["dependabot/create-or-update-org-secret"];
        delete: operations["dependabot/delete-org-secret"];
    };
    "/orgs/{org}/dependabot/secrets/{secret_name}/repositories": {
        get: operations["dependabot/list-selected-repos-for-org-secret"];
        put: operations["dependabot/set-selected-repos-for-org-secret"];
    };
    "/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}": {
        put: operations["dependabot/add-selected-repo-to-org-secret"];
        delete: operations["dependabot/remove-selected-repo-from-org-secret"];
    };
    "/orgs/{org}/docker/conflicts": {
        get: operations["packages/list-docker-migration-conflicting-packages-for-organization"];
    };
    "/orgs/{org}/events": {
        get: operations["activity/list-public-org-events"];
    };
    "/orgs/{org}/failed_invitations": {
        get: operations["orgs/list-failed-invitations"];
    };
    "/orgs/{org}/hooks": {
        get: operations["orgs/list-webhooks"];
        post: operations["orgs/create-webhook"];
    };
    "/orgs/{org}/hooks/{hook_id}": {
        get: operations["orgs/get-webhook"];
        delete: operations["orgs/delete-webhook"];
        patch: operations["orgs/update-webhook"];
    };
    "/orgs/{org}/hooks/{hook_id}/config": {
        get: operations["orgs/get-webhook-config-for-org"];
        patch: operations["orgs/update-webhook-config-for-org"];
    };
    "/orgs/{org}/hooks/{hook_id}/deliveries": {
        get: operations["orgs/list-webhook-deliveries"];
    };
    "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}": {
        get: operations["orgs/get-webhook-delivery"];
    };
    "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts": {
        post: operations["orgs/redeliver-webhook-delivery"];
    };
    "/orgs/{org}/hooks/{hook_id}/pings": {
        post: operations["orgs/ping-webhook"];
    };
    "/orgs/{org}/installation": {
        get: operations["apps/get-org-installation"];
    };
    "/orgs/{org}/installations": {
        get: operations["orgs/list-app-installations"];
    };
    "/orgs/{org}/interaction-limits": {
        get: operations["interactions/get-restrictions-for-org"];
        put: operations["interactions/set-restrictions-for-org"];
        delete: operations["interactions/remove-restrictions-for-org"];
    };
    "/orgs/{org}/invitations": {
        get: operations["orgs/list-pending-invitations"];
        post: operations["orgs/create-invitation"];
    };
    "/orgs/{org}/invitations/{invitation_id}": {
        delete: operations["orgs/cancel-invitation"];
    };
    "/orgs/{org}/invitations/{invitation_id}/teams": {
        get: operations["orgs/list-invitation-teams"];
    };
    "/orgs/{org}/issues": {
        get: operations["issues/list-for-org"];
    };
    "/orgs/{org}/members": {
        get: operations["orgs/list-members"];
    };
    "/orgs/{org}/members/{username}": {
        get: operations["orgs/check-membership-for-user"];
        delete: operations["orgs/remove-member"];
    };
    "/orgs/{org}/members/{username}/codespaces": {
        get: operations["codespaces/get-codespaces-for-user-in-org"];
    };
    "/orgs/{org}/members/{username}/codespaces/{codespace_name}": {
        delete: operations["codespaces/delete-from-organization"];
    };
    "/orgs/{org}/members/{username}/codespaces/{codespace_name}/stop": {
        post: operations["codespaces/stop-in-organization"];
    };
    "/orgs/{org}/members/{username}/copilot": {
        get: operations["copilot/get-copilot-seat-assignment-details-for-user"];
    };
    "/orgs/{org}/memberships/{username}": {
        get: operations["orgs/get-membership-for-user"];
        put: operations["orgs/set-membership-for-user"];
        delete: operations["orgs/remove-membership-for-user"];
    };
    "/orgs/{org}/migrations": {
        get: operations["migrations/list-for-org"];
        post: operations["migrations/start-for-org"];
    };
    "/orgs/{org}/migrations/{migration_id}": {
        get: operations["migrations/get-status-for-org"];
    };
    "/orgs/{org}/migrations/{migration_id}/archive": {
        get: operations["migrations/download-archive-for-org"];
        delete: operations["migrations/delete-archive-for-org"];
    };
    "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock": {
        delete: operations["migrations/unlock-repo-for-org"];
    };
    "/orgs/{org}/migrations/{migration_id}/repositories": {
        get: operations["migrations/list-repos-for-org"];
    };
    "/orgs/{org}/outside_collaborators": {
        get: operations["orgs/list-outside-collaborators"];
    };
    "/orgs/{org}/outside_collaborators/{username}": {
        put: operations["orgs/convert-member-to-outside-collaborator"];
        delete: operations["orgs/remove-outside-collaborator"];
    };
    "/orgs/{org}/packages": {
        get: operations["packages/list-packages-for-organization"];
    };
    "/orgs/{org}/packages/{package_type}/{package_name}": {
        get: operations["packages/get-package-for-organization"];
        delete: operations["packages/delete-package-for-org"];
    };
    "/orgs/{org}/packages/{package_type}/{package_name}/restore": {
        post: operations["packages/restore-package-for-org"];
    };
    "/orgs/{org}/packages/{package_type}/{package_name}/versions": {
        get: operations["packages/get-all-package-versions-for-package-owned-by-org"];
    };
    "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}": {
        get: operations["packages/get-package-version-for-organization"];
        delete: operations["packages/delete-package-version-for-org"];
    };
    "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": {
        post: operations["packages/restore-package-version-for-org"];
    };
    "/orgs/{org}/personal-access-token-requests": {
        get: operations["orgs/list-pat-grant-requests"];
        post: operations["orgs/review-pat-grant-requests-in-bulk"];
    };
    "/orgs/{org}/personal-access-token-requests/{pat_request_id}": {
        post: operations["orgs/review-pat-grant-request"];
    };
    "/orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories": {
        get: operations["orgs/list-pat-grant-request-repositories"];
    };
    "/orgs/{org}/personal-access-tokens": {
        get: operations["orgs/list-pat-grants"];
        post: operations["orgs/update-pat-accesses"];
    };
    "/orgs/{org}/personal-access-tokens/{pat_id}": {
        post: operations["orgs/update-pat-access"];
    };
    "/orgs/{org}/personal-access-tokens/{pat_id}/repositories": {
        get: operations["orgs/list-pat-grant-repositories"];
    };
    "/orgs/{org}/projects": {
        get: operations["projects/list-for-org"];
        post: operations["projects/create-for-org"];
    };
    "/orgs/{org}/public_members": {
        get: operations["orgs/list-public-members"];
    };
    "/orgs/{org}/public_members/{username}": {
        get: operations["orgs/check-public-membership-for-user"];
        put: operations["orgs/set-public-membership-for-authenticated-user"];
        delete: operations["orgs/remove-public-membership-for-authenticated-user"];
    };
    "/orgs/{org}/repos": {
        get: operations["repos/list-for-org"];
        post: operations["repos/create-in-org"];
    };
    "/orgs/{org}/rulesets": {
        get: operations["repos/get-org-rulesets"];
        post: operations["repos/create-org-ruleset"];
    };
    "/orgs/{org}/rulesets/{ruleset_id}": {
        get: operations["repos/get-org-ruleset"];
        put: operations["repos/update-org-ruleset"];
        delete: operations["repos/delete-org-ruleset"];
    };
    "/orgs/{org}/secret-scanning/alerts": {
        get: operations["secret-scanning/list-alerts-for-org"];
    };
    "/orgs/{org}/security-advisories": {
        get: operations["security-advisories/list-org-repository-advisories"];
    };
    "/orgs/{org}/security-managers": {
        get: operations["orgs/list-security-manager-teams"];
    };
    "/orgs/{org}/security-managers/teams/{team_slug}": {
        put: operations["orgs/add-security-manager-team"];
        delete: operations["orgs/remove-security-manager-team"];
    };
    "/orgs/{org}/settings/billing/actions": {
        get: operations["billing/get-github-actions-billing-org"];
    };
    "/orgs/{org}/settings/billing/packages": {
        get: operations["billing/get-github-packages-billing-org"];
    };
    "/orgs/{org}/settings/billing/shared-storage": {
        get: operations["billing/get-shared-storage-billing-org"];
    };
    "/orgs/{org}/teams": {
        get: operations["teams/list"];
        post: operations["teams/create"];
    };
    "/orgs/{org}/teams/{team_slug}": {
        get: operations["teams/get-by-name"];
        delete: operations["teams/delete-in-org"];
        patch: operations["teams/update-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions": {
        get: operations["teams/list-discussions-in-org"];
        post: operations["teams/create-discussion-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}": {
        get: operations["teams/get-discussion-in-org"];
        delete: operations["teams/delete-discussion-in-org"];
        patch: operations["teams/update-discussion-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments": {
        get: operations["teams/list-discussion-comments-in-org"];
        post: operations["teams/create-discussion-comment-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}": {
        get: operations["teams/get-discussion-comment-in-org"];
        delete: operations["teams/delete-discussion-comment-in-org"];
        patch: operations["teams/update-discussion-comment-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions": {
        get: operations["reactions/list-for-team-discussion-comment-in-org"];
        post: operations["reactions/create-for-team-discussion-comment-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}": {
        delete: operations["reactions/delete-for-team-discussion-comment"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions": {
        get: operations["reactions/list-for-team-discussion-in-org"];
        post: operations["reactions/create-for-team-discussion-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}": {
        delete: operations["reactions/delete-for-team-discussion"];
    };
    "/orgs/{org}/teams/{team_slug}/invitations": {
        get: operations["teams/list-pending-invitations-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/members": {
        get: operations["teams/list-members-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/memberships/{username}": {
        get: operations["teams/get-membership-for-user-in-org"];
        put: operations["teams/add-or-update-membership-for-user-in-org"];
        delete: operations["teams/remove-membership-for-user-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/projects": {
        get: operations["teams/list-projects-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/projects/{project_id}": {
        get: operations["teams/check-permissions-for-project-in-org"];
        put: operations["teams/add-or-update-project-permissions-in-org"];
        delete: operations["teams/remove-project-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/repos": {
        get: operations["teams/list-repos-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {
        get: operations["teams/check-permissions-for-repo-in-org"];
        put: operations["teams/add-or-update-repo-permissions-in-org"];
        delete: operations["teams/remove-repo-in-org"];
    };
    "/orgs/{org}/teams/{team_slug}/teams": {
        get: operations["teams/list-child-in-org"];
    };
    "/orgs/{org}/{security_product}/{enablement}": {
        post: operations["orgs/enable-or-disable-security-product-on-all-org-repos"];
    };
    "/projects/columns/cards/{card_id}": {
        get: operations["projects/get-card"];
        delete: operations["projects/delete-card"];
        patch: operations["projects/update-card"];
    };
    "/projects/columns/cards/{card_id}/moves": {
        post: operations["projects/move-card"];
    };
    "/projects/columns/{column_id}": {
        get: operations["projects/get-column"];
        delete: operations["projects/delete-column"];
        patch: operations["projects/update-column"];
    };
    "/projects/columns/{column_id}/cards": {
        get: operations["projects/list-cards"];
        post: operations["projects/create-card"];
    };
    "/projects/columns/{column_id}/moves": {
        post: operations["projects/move-column"];
    };
    "/projects/{project_id}": {
        get: operations["projects/get"];
        delete: operations["projects/delete"];
        patch: operations["projects/update"];
    };
    "/projects/{project_id}/collaborators": {
        get: operations["projects/list-collaborators"];
    };
    "/projects/{project_id}/collaborators/{username}": {
        put: operations["projects/add-collaborator"];
        delete: operations["projects/remove-collaborator"];
    };
    "/projects/{project_id}/collaborators/{username}/permission": {
        get: operations["projects/get-permission-for-user"];
    };
    "/projects/{project_id}/columns": {
        get: operations["projects/list-columns"];
        post: operations["projects/create-column"];
    };
    "/rate_limit": {
        get: operations["rate-limit/get"];
    };
    "/repos/{owner}/{repo}": {
        get: operations["repos/get"];
        delete: operations["repos/delete"];
        patch: operations["repos/update"];
    };
    "/repos/{owner}/{repo}/actions/artifacts": {
        get: operations["actions/list-artifacts-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}": {
        get: operations["actions/get-artifact"];
        delete: operations["actions/delete-artifact"];
    };
    "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}": {
        get: operations["actions/download-artifact"];
    };
    "/repos/{owner}/{repo}/actions/cache/usage": {
        get: operations["actions/get-actions-cache-usage"];
    };
    "/repos/{owner}/{repo}/actions/caches": {
        get: operations["actions/get-actions-cache-list"];
        delete: operations["actions/delete-actions-cache-by-key"];
    };
    "/repos/{owner}/{repo}/actions/caches/{cache_id}": {
        delete: operations["actions/delete-actions-cache-by-id"];
    };
    "/repos/{owner}/{repo}/actions/jobs/{job_id}": {
        get: operations["actions/get-job-for-workflow-run"];
    };
    "/repos/{owner}/{repo}/actions/jobs/{job_id}/logs": {
        get: operations["actions/download-job-logs-for-workflow-run"];
    };
    "/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun": {
        post: operations["actions/re-run-job-for-workflow-run"];
    };
    "/repos/{owner}/{repo}/actions/oidc/customization/sub": {
        get: operations["actions/get-custom-oidc-sub-claim-for-repo"];
        put: operations["actions/set-custom-oidc-sub-claim-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/organization-secrets": {
        get: operations["actions/list-repo-organization-secrets"];
    };
    "/repos/{owner}/{repo}/actions/organization-variables": {
        get: operations["actions/list-repo-organization-variables"];
    };
    "/repos/{owner}/{repo}/actions/permissions": {
        get: operations["actions/get-github-actions-permissions-repository"];
        put: operations["actions/set-github-actions-permissions-repository"];
    };
    "/repos/{owner}/{repo}/actions/permissions/access": {
        get: operations["actions/get-workflow-access-to-repository"];
        put: operations["actions/set-workflow-access-to-repository"];
    };
    "/repos/{owner}/{repo}/actions/permissions/selected-actions": {
        get: operations["actions/get-allowed-actions-repository"];
        put: operations["actions/set-allowed-actions-repository"];
    };
    "/repos/{owner}/{repo}/actions/permissions/workflow": {
        get: operations["actions/get-github-actions-default-workflow-permissions-repository"];
        put: operations["actions/set-github-actions-default-workflow-permissions-repository"];
    };
    "/repos/{owner}/{repo}/actions/runners": {
        get: operations["actions/list-self-hosted-runners-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runners/downloads": {
        get: operations["actions/list-runner-applications-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runners/generate-jitconfig": {
        post: operations["actions/generate-runner-jitconfig-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runners/registration-token": {
        post: operations["actions/create-registration-token-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runners/remove-token": {
        post: operations["actions/create-remove-token-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runners/{runner_id}": {
        get: operations["actions/get-self-hosted-runner-for-repo"];
        delete: operations["actions/delete-self-hosted-runner-from-repo"];
    };
    "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels": {
        get: operations["actions/list-labels-for-self-hosted-runner-for-repo"];
        put: operations["actions/set-custom-labels-for-self-hosted-runner-for-repo"];
        post: operations["actions/add-custom-labels-to-self-hosted-runner-for-repo"];
        delete: operations["actions/remove-all-custom-labels-from-self-hosted-runner-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}": {
        delete: operations["actions/remove-custom-label-from-self-hosted-runner-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runs": {
        get: operations["actions/list-workflow-runs-for-repo"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}": {
        get: operations["actions/get-workflow-run"];
        delete: operations["actions/delete-workflow-run"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/approvals": {
        get: operations["actions/get-reviews-for-run"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/approve": {
        post: operations["actions/approve-workflow-run"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts": {
        get: operations["actions/list-workflow-run-artifacts"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}": {
        get: operations["actions/get-workflow-run-attempt"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs": {
        get: operations["actions/list-jobs-for-workflow-run-attempt"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs": {
        get: operations["actions/download-workflow-run-attempt-logs"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/cancel": {
        post: operations["actions/cancel-workflow-run"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule": {
        post: operations["actions/review-custom-gates-for-run"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs": {
        get: operations["actions/list-jobs-for-workflow-run"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/logs": {
        get: operations["actions/download-workflow-run-logs"];
        delete: operations["actions/delete-workflow-run-logs"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments": {
        get: operations["actions/get-pending-deployments-for-run"];
        post: operations["actions/review-pending-deployments-for-run"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun": {
        post: operations["actions/re-run-workflow"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs": {
        post: operations["actions/re-run-workflow-failed-jobs"];
    };
    "/repos/{owner}/{repo}/actions/runs/{run_id}/timing": {
        get: operations["actions/get-workflow-run-usage"];
    };
    "/repos/{owner}/{repo}/actions/secrets": {
        get: operations["actions/list-repo-secrets"];
    };
    "/repos/{owner}/{repo}/actions/secrets/public-key": {
        get: operations["actions/get-repo-public-key"];
    };
    "/repos/{owner}/{repo}/actions/secrets/{secret_name}": {
        get: operations["actions/get-repo-secret"];
        put: operations["actions/create-or-update-repo-secret"];
        delete: operations["actions/delete-repo-secret"];
    };
    "/repos/{owner}/{repo}/actions/variables": {
        get: operations["actions/list-repo-variables"];
        post: operations["actions/create-repo-variable"];
    };
    "/repos/{owner}/{repo}/actions/variables/{name}": {
        get: operations["actions/get-repo-variable"];
        delete: operations["actions/delete-repo-variable"];
        patch: operations["actions/update-repo-variable"];
    };
    "/repos/{owner}/{repo}/actions/workflows": {
        get: operations["actions/list-repo-workflows"];
    };
    "/repos/{owner}/{repo}/actions/workflows/{workflow_id}": {
        get: operations["actions/get-workflow"];
    };
    "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable": {
        put: operations["actions/disable-workflow"];
    };
    "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches": {
        post: operations["actions/create-workflow-dispatch"];
    };
    "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable": {
        put: operations["actions/enable-workflow"];
    };
    "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs": {
        get: operations["actions/list-workflow-runs"];
    };
    "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing": {
        get: operations["actions/get-workflow-usage"];
    };
    "/repos/{owner}/{repo}/activity": {
        get: operations["repos/list-activities"];
    };
    "/repos/{owner}/{repo}/assignees": {
        get: operations["issues/list-assignees"];
    };
    "/repos/{owner}/{repo}/assignees/{assignee}": {
        get: operations["issues/check-user-can-be-assigned"];
    };
    "/repos/{owner}/{repo}/autolinks": {
        get: operations["repos/list-autolinks"];
        post: operations["repos/create-autolink"];
    };
    "/repos/{owner}/{repo}/autolinks/{autolink_id}": {
        get: operations["repos/get-autolink"];
        delete: operations["repos/delete-autolink"];
    };
    "/repos/{owner}/{repo}/automated-security-fixes": {
        get: operations["repos/check-automated-security-fixes"];
        put: operations["repos/enable-automated-security-fixes"];
        delete: operations["repos/disable-automated-security-fixes"];
    };
    "/repos/{owner}/{repo}/branches": {
        get: operations["repos/list-branches"];
    };
    "/repos/{owner}/{repo}/branches/{branch}": {
        get: operations["repos/get-branch"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection": {
        get: operations["repos/get-branch-protection"];
        put: operations["repos/update-branch-protection"];
        delete: operations["repos/delete-branch-protection"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins": {
        get: operations["repos/get-admin-branch-protection"];
        post: operations["repos/set-admin-branch-protection"];
        delete: operations["repos/delete-admin-branch-protection"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews": {
        get: operations["repos/get-pull-request-review-protection"];
        delete: operations["repos/delete-pull-request-review-protection"];
        patch: operations["repos/update-pull-request-review-protection"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures": {
        get: operations["repos/get-commit-signature-protection"];
        post: operations["repos/create-commit-signature-protection"];
        delete: operations["repos/delete-commit-signature-protection"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks": {
        get: operations["repos/get-status-checks-protection"];
        delete: operations["repos/remove-status-check-protection"];
        patch: operations["repos/update-status-check-protection"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts": {
        get: operations["repos/get-all-status-check-contexts"];
        put: operations["repos/set-status-check-contexts"];
        post: operations["repos/add-status-check-contexts"];
        delete: operations["repos/remove-status-check-contexts"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions": {
        get: operations["repos/get-access-restrictions"];
        delete: operations["repos/delete-access-restrictions"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps": {
        get: operations["repos/get-apps-with-access-to-protected-branch"];
        put: operations["repos/set-app-access-restrictions"];
        post: operations["repos/add-app-access-restrictions"];
        delete: operations["repos/remove-app-access-restrictions"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams": {
        get: operations["repos/get-teams-with-access-to-protected-branch"];
        put: operations["repos/set-team-access-restrictions"];
        post: operations["repos/add-team-access-restrictions"];
        delete: operations["repos/remove-team-access-restrictions"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users": {
        get: operations["repos/get-users-with-access-to-protected-branch"];
        put: operations["repos/set-user-access-restrictions"];
        post: operations["repos/add-user-access-restrictions"];
        delete: operations["repos/remove-user-access-restrictions"];
    };
    "/repos/{owner}/{repo}/branches/{branch}/rename": {
        post: operations["repos/rename-branch"];
    };
    "/repos/{owner}/{repo}/check-runs": {
        post: operations["checks/create"];
    };
    "/repos/{owner}/{repo}/check-runs/{check_run_id}": {
        get: operations["checks/get"];
        patch: operations["checks/update"];
    };
    "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations": {
        get: operations["checks/list-annotations"];
    };
    "/repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest": {
        post: operations["checks/rerequest-run"];
    };
    "/repos/{owner}/{repo}/check-suites": {
        post: operations["checks/create-suite"];
    };
    "/repos/{owner}/{repo}/check-suites/preferences": {
        patch: operations["checks/set-suites-preferences"];
    };
    "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {
        get: operations["checks/get-suite"];
    };
    "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs": {
        get: operations["checks/list-for-suite"];
    };
    "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest": {
        post: operations["checks/rerequest-suite"];
    };
    "/repos/{owner}/{repo}/code-scanning/alerts": {
        get: operations["code-scanning/list-alerts-for-repo"];
    };
    "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}": {
        get: operations["code-scanning/get-alert"];
        patch: operations["code-scanning/update-alert"];
    };
    "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances": {
        get: operations["code-scanning/list-alert-instances"];
    };
    "/repos/{owner}/{repo}/code-scanning/analyses": {
        get: operations["code-scanning/list-recent-analyses"];
    };
    "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}": {
        get: operations["code-scanning/get-analysis"];
        delete: operations["code-scanning/delete-analysis"];
    };
    "/repos/{owner}/{repo}/code-scanning/codeql/databases": {
        get: operations["code-scanning/list-codeql-databases"];
    };
    "/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}": {
        get: operations["code-scanning/get-codeql-database"];
    };
    "/repos/{owner}/{repo}/code-scanning/default-setup": {
        get: operations["code-scanning/get-default-setup"];
        patch: operations["code-scanning/update-default-setup"];
    };
    "/repos/{owner}/{repo}/code-scanning/sarifs": {
        post: operations["code-scanning/upload-sarif"];
    };
    "/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}": {
        get: operations["code-scanning/get-sarif"];
    };
    "/repos/{owner}/{repo}/codeowners/errors": {
        get: operations["repos/codeowners-errors"];
    };
    "/repos/{owner}/{repo}/codespaces": {
        get: operations["codespaces/list-in-repository-for-authenticated-user"];
        post: operations["codespaces/create-with-repo-for-authenticated-user"];
    };
    "/repos/{owner}/{repo}/codespaces/devcontainers": {
        get: operations["codespaces/list-devcontainers-in-repository-for-authenticated-user"];
    };
    "/repos/{owner}/{repo}/codespaces/machines": {
        get: operations["codespaces/repo-machines-for-authenticated-user"];
    };
    "/repos/{owner}/{repo}/codespaces/new": {
        get: operations["codespaces/pre-flight-with-repo-for-authenticated-user"];
    };
    "/repos/{owner}/{repo}/codespaces/secrets": {
        get: operations["codespaces/list-repo-secrets"];
    };
    "/repos/{owner}/{repo}/codespaces/secrets/public-key": {
        get: operations["codespaces/get-repo-public-key"];
    };
    "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}": {
        get: operations["codespaces/get-repo-secret"];
        put: operations["codespaces/create-or-update-repo-secret"];
        delete: operations["codespaces/delete-repo-secret"];
    };
    "/repos/{owner}/{repo}/collaborators": {
        get: operations["repos/list-collaborators"];
    };
    "/repos/{owner}/{repo}/collaborators/{username}": {
        get: operations["repos/check-collaborator"];
        put: operations["repos/add-collaborator"];
        delete: operations["repos/remove-collaborator"];
    };
    "/repos/{owner}/{repo}/collaborators/{username}/permission": {
        get: operations["repos/get-collaborator-permission-level"];
    };
    "/repos/{owner}/{repo}/comments": {
        get: operations["repos/list-commit-comments-for-repo"];
    };
    "/repos/{owner}/{repo}/comments/{comment_id}": {
        get: operations["repos/get-commit-comment"];
        delete: operations["repos/delete-commit-comment"];
        patch: operations["repos/update-commit-comment"];
    };
    "/repos/{owner}/{repo}/comments/{comment_id}/reactions": {
        get: operations["reactions/list-for-commit-comment"];
        post: operations["reactions/create-for-commit-comment"];
    };
    "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}": {
        delete: operations["reactions/delete-for-commit-comment"];
    };
    "/repos/{owner}/{repo}/commits": {
        get: operations["repos/list-commits"];
    };
    "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head": {
        get: operations["repos/list-branches-for-head-commit"];
    };
    "/repos/{owner}/{repo}/commits/{commit_sha}/comments": {
        get: operations["repos/list-comments-for-commit"];
        post: operations["repos/create-commit-comment"];
    };
    "/repos/{owner}/{repo}/commits/{commit_sha}/pulls": {
        get: operations["repos/list-pull-requests-associated-with-commit"];
    };
    "/repos/{owner}/{repo}/commits/{ref}": {
        get: operations["repos/get-commit"];
    };
    "/repos/{owner}/{repo}/commits/{ref}/check-runs": {
        get: operations["checks/list-for-ref"];
    };
    "/repos/{owner}/{repo}/commits/{ref}/check-suites": {
        get: operations["checks/list-suites-for-ref"];
    };
    "/repos/{owner}/{repo}/commits/{ref}/status": {
        get: operations["repos/get-combined-status-for-ref"];
    };
    "/repos/{owner}/{repo}/commits/{ref}/statuses": {
        get: operations["repos/list-commit-statuses-for-ref"];
    };
    "/repos/{owner}/{repo}/community/profile": {
        get: operations["repos/get-community-profile-metrics"];
    };
    "/repos/{owner}/{repo}/compare/{basehead}": {
        get: operations["repos/compare-commits"];
    };
    "/repos/{owner}/{repo}/contents/{path}": {
        get: operations["repos/get-content"];
        put: operations["repos/create-or-update-file-contents"];
        delete: operations["repos/delete-file"];
    };
    "/repos/{owner}/{repo}/contributors": {
        get: operations["repos/list-contributors"];
    };
    "/repos/{owner}/{repo}/dependabot/alerts": {
        get: operations["dependabot/list-alerts-for-repo"];
    };
    "/repos/{owner}/{repo}/dependabot/alerts/{alert_number}": {
        get: operations["dependabot/get-alert"];
        patch: operations["dependabot/update-alert"];
    };
    "/repos/{owner}/{repo}/dependabot/secrets": {
        get: operations["dependabot/list-repo-secrets"];
    };
    "/repos/{owner}/{repo}/dependabot/secrets/public-key": {
        get: operations["dependabot/get-repo-public-key"];
    };
    "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}": {
        get: operations["dependabot/get-repo-secret"];
        put: operations["dependabot/create-or-update-repo-secret"];
        delete: operations["dependabot/delete-repo-secret"];
    };
    "/repos/{owner}/{repo}/dependency-graph/compare/{basehead}": {
        get: operations["dependency-graph/diff-range"];
    };
    "/repos/{owner}/{repo}/dependency-graph/sbom": {
        get: operations["dependency-graph/export-sbom"];
    };
    "/repos/{owner}/{repo}/dependency-graph/snapshots": {
        post: operations["dependency-graph/create-repository-snapshot"];
    };
    "/repos/{owner}/{repo}/deployments": {
        get: operations["repos/list-deployments"];
        post: operations["repos/create-deployment"];
    };
    "/repos/{owner}/{repo}/deployments/{deployment_id}": {
        get: operations["repos/get-deployment"];
        delete: operations["repos/delete-deployment"];
    };
    "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses": {
        get: operations["repos/list-deployment-statuses"];
        post: operations["repos/create-deployment-status"];
    };
    "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}": {
        get: operations["repos/get-deployment-status"];
    };
    "/repos/{owner}/{repo}/dispatches": {
        post: operations["repos/create-dispatch-event"];
    };
    "/repos/{owner}/{repo}/environments": {
        get: operations["repos/get-all-environments"];
    };
    "/repos/{owner}/{repo}/environments/{environment_name}": {
        get: operations["repos/get-environment"];
        put: operations["repos/create-or-update-environment"];
        delete: operations["repos/delete-an-environment"];
    };
    "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies": {
        get: operations["repos/list-deployment-branch-policies"];
        post: operations["repos/create-deployment-branch-policy"];
    };
    "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}": {
        get: operations["repos/get-deployment-branch-policy"];
        put: operations["repos/update-deployment-branch-policy"];
        delete: operations["repos/delete-deployment-branch-policy"];
    };
    "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules": {
        get: operations["repos/get-all-deployment-protection-rules"];
        post: operations["repos/create-deployment-protection-rule"];
    };
    "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps": {
        get: operations["repos/list-custom-deployment-rule-integrations"];
    };
    "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}": {
        get: operations["repos/get-custom-deployment-protection-rule"];
        delete: operations["repos/disable-deployment-protection-rule"];
    };
    "/repos/{owner}/{repo}/events": {
        get: operations["activity/list-repo-events"];
    };
    "/repos/{owner}/{repo}/forks": {
        get: operations["repos/list-forks"];
        post: operations["repos/create-fork"];
    };
    "/repos/{owner}/{repo}/git/blobs": {
        post: operations["git/create-blob"];
    };
    "/repos/{owner}/{repo}/git/blobs/{file_sha}": {
        get: operations["git/get-blob"];
    };
    "/repos/{owner}/{repo}/git/commits": {
        post: operations["git/create-commit"];
    };
    "/repos/{owner}/{repo}/git/commits/{commit_sha}": {
        get: operations["git/get-commit"];
    };
    "/repos/{owner}/{repo}/git/matching-refs/{ref}": {
        get: operations["git/list-matching-refs"];
    };
    "/repos/{owner}/{repo}/git/ref/{ref}": {
        get: operations["git/get-ref"];
    };
    "/repos/{owner}/{repo}/git/refs": {
        post: operations["git/create-ref"];
    };
    "/repos/{owner}/{repo}/git/refs/{ref}": {
        delete: operations["git/delete-ref"];
        patch: operations["git/update-ref"];
    };
    "/repos/{owner}/{repo}/git/tags": {
        post: operations["git/create-tag"];
    };
    "/repos/{owner}/{repo}/git/tags/{tag_sha}": {
        get: operations["git/get-tag"];
    };
    "/repos/{owner}/{repo}/git/trees": {
        post: operations["git/create-tree"];
    };
    "/repos/{owner}/{repo}/git/trees/{tree_sha}": {
        get: operations["git/get-tree"];
    };
    "/repos/{owner}/{repo}/hooks": {
        get: operations["repos/list-webhooks"];
        post: operations["repos/create-webhook"];
    };
    "/repos/{owner}/{repo}/hooks/{hook_id}": {
        get: operations["repos/get-webhook"];
        delete: operations["repos/delete-webhook"];
        patch: operations["repos/update-webhook"];
    };
    "/repos/{owner}/{repo}/hooks/{hook_id}/config": {
        get: operations["repos/get-webhook-config-for-repo"];
        patch: operations["repos/update-webhook-config-for-repo"];
    };
    "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries": {
        get: operations["repos/list-webhook-deliveries"];
    };
    "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}": {
        get: operations["repos/get-webhook-delivery"];
    };
    "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts": {
        post: operations["repos/redeliver-webhook-delivery"];
    };
    "/repos/{owner}/{repo}/hooks/{hook_id}/pings": {
        post: operations["repos/ping-webhook"];
    };
    "/repos/{owner}/{repo}/hooks/{hook_id}/tests": {
        post: operations["repos/test-push-webhook"];
    };
    "/repos/{owner}/{repo}/import": {
        get: operations["migrations/get-import-status"];
        put: operations["migrations/start-import"];
        delete: operations["migrations/cancel-import"];
        patch: operations["migrations/update-import"];
    };
    "/repos/{owner}/{repo}/import/authors": {
        get: operations["migrations/get-commit-authors"];
    };
    "/repos/{owner}/{repo}/import/authors/{author_id}": {
        patch: operations["migrations/map-commit-author"];
    };
    "/repos/{owner}/{repo}/import/large_files": {
        get: operations["migrations/get-large-files"];
    };
    "/repos/{owner}/{repo}/import/lfs": {
        patch: operations["migrations/set-lfs-preference"];
    };
    "/repos/{owner}/{repo}/installation": {
        get: operations["apps/get-repo-installation"];
    };
    "/repos/{owner}/{repo}/interaction-limits": {
        get: operations["interactions/get-restrictions-for-repo"];
        put: operations["interactions/set-restrictions-for-repo"];
        delete: operations["interactions/remove-restrictions-for-repo"];
    };
    "/repos/{owner}/{repo}/invitations": {
        get: operations["repos/list-invitations"];
    };
    "/repos/{owner}/{repo}/invitations/{invitation_id}": {
        delete: operations["repos/delete-invitation"];
        patch: operations["repos/update-invitation"];
    };
    "/repos/{owner}/{repo}/issues": {
        get: operations["issues/list-for-repo"];
        post: operations["issues/create"];
    };
    "/repos/{owner}/{repo}/issues/comments": {
        get: operations["issues/list-comments-for-repo"];
    };
    "/repos/{owner}/{repo}/issues/comments/{comment_id}": {
        get: operations["issues/get-comment"];
        delete: operations["issues/delete-comment"];
        patch: operations["issues/update-comment"];
    };
    "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions": {
        get: operations["reactions/list-for-issue-comment"];
        post: operations["reactions/create-for-issue-comment"];
    };
    "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}": {
        delete: operations["reactions/delete-for-issue-comment"];
    };
    "/repos/{owner}/{repo}/issues/events": {
        get: operations["issues/list-events-for-repo"];
    };
    "/repos/{owner}/{repo}/issues/events/{event_id}": {
        get: operations["issues/get-event"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}": {
        get: operations["issues/get"];
        patch: operations["issues/update"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/assignees": {
        post: operations["issues/add-assignees"];
        delete: operations["issues/remove-assignees"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}": {
        get: operations["issues/check-user-can-be-assigned-to-issue"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/comments": {
        get: operations["issues/list-comments"];
        post: operations["issues/create-comment"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/events": {
        get: operations["issues/list-events"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/labels": {
        get: operations["issues/list-labels-on-issue"];
        put: operations["issues/set-labels"];
        post: operations["issues/add-labels"];
        delete: operations["issues/remove-all-labels"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}": {
        delete: operations["issues/remove-label"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/lock": {
        put: operations["issues/lock"];
        delete: operations["issues/unlock"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/reactions": {
        get: operations["reactions/list-for-issue"];
        post: operations["reactions/create-for-issue"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}": {
        delete: operations["reactions/delete-for-issue"];
    };
    "/repos/{owner}/{repo}/issues/{issue_number}/timeline": {
        get: operations["issues/list-events-for-timeline"];
    };
    "/repos/{owner}/{repo}/keys": {
        get: operations["repos/list-deploy-keys"];
        post: operations["repos/create-deploy-key"];
    };
    "/repos/{owner}/{repo}/keys/{key_id}": {
        get: operations["repos/get-deploy-key"];
        delete: operations["repos/delete-deploy-key"];
    };
    "/repos/{owner}/{repo}/labels": {
        get: operations["issues/list-labels-for-repo"];
        post: operations["issues/create-label"];
    };
    "/repos/{owner}/{repo}/labels/{name}": {
        get: operations["issues/get-label"];
        delete: operations["issues/delete-label"];
        patch: operations["issues/update-label"];
    };
    "/repos/{owner}/{repo}/languages": {
        get: operations["repos/list-languages"];
    };
    "/repos/{owner}/{repo}/license": {
        get: operations["licenses/get-for-repo"];
    };
    "/repos/{owner}/{repo}/merge-upstream": {
        post: operations["repos/merge-upstream"];
    };
    "/repos/{owner}/{repo}/merges": {
        post: operations["repos/merge"];
    };
    "/repos/{owner}/{repo}/milestones": {
        get: operations["issues/list-milestones"];
        post: operations["issues/create-milestone"];
    };
    "/repos/{owner}/{repo}/milestones/{milestone_number}": {
        get: operations["issues/get-milestone"];
        delete: operations["issues/delete-milestone"];
        patch: operations["issues/update-milestone"];
    };
    "/repos/{owner}/{repo}/milestones/{milestone_number}/labels": {
        get: operations["issues/list-labels-for-milestone"];
    };
    "/repos/{owner}/{repo}/notifications": {
        get: operations["activity/list-repo-notifications-for-authenticated-user"];
        put: operations["activity/mark-repo-notifications-as-read"];
    };
    "/repos/{owner}/{repo}/pages": {
        get: operations["repos/get-pages"];
        put: operations["repos/update-information-about-pages-site"];
        post: operations["repos/create-pages-site"];
        delete: operations["repos/delete-pages-site"];
    };
    "/repos/{owner}/{repo}/pages/builds": {
        get: operations["repos/list-pages-builds"];
        post: operations["repos/request-pages-build"];
    };
    "/repos/{owner}/{repo}/pages/builds/latest": {
        get: operations["repos/get-latest-pages-build"];
    };
    "/repos/{owner}/{repo}/pages/builds/{build_id}": {
        get: operations["repos/get-pages-build"];
    };
    "/repos/{owner}/{repo}/pages/deployment": {
        post: operations["repos/create-pages-deployment"];
    };
    "/repos/{owner}/{repo}/pages/health": {
        get: operations["repos/get-pages-health-check"];
    };
    "/repos/{owner}/{repo}/private-vulnerability-reporting": {
        put: operations["repos/enable-private-vulnerability-reporting"];
        delete: operations["repos/disable-private-vulnerability-reporting"];
    };
    "/repos/{owner}/{repo}/projects": {
        get: operations["projects/list-for-repo"];
        post: operations["projects/create-for-repo"];
    };
    "/repos/{owner}/{repo}/pulls": {
        get: operations["pulls/list"];
        post: operations["pulls/create"];
    };
    "/repos/{owner}/{repo}/pulls/comments": {
        get: operations["pulls/list-review-comments-for-repo"];
    };
    "/repos/{owner}/{repo}/pulls/comments/{comment_id}": {
        get: operations["pulls/get-review-comment"];
        delete: operations["pulls/delete-review-comment"];
        patch: operations["pulls/update-review-comment"];
    };
    "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions": {
        get: operations["reactions/list-for-pull-request-review-comment"];
        post: operations["reactions/create-for-pull-request-review-comment"];
    };
    "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}": {
        delete: operations["reactions/delete-for-pull-request-comment"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}": {
        get: operations["pulls/get"];
        patch: operations["pulls/update"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/codespaces": {
        post: operations["codespaces/create-with-pr-for-authenticated-user"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/comments": {
        get: operations["pulls/list-review-comments"];
        post: operations["pulls/create-review-comment"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies": {
        post: operations["pulls/create-reply-for-review-comment"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/commits": {
        get: operations["pulls/list-commits"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/files": {
        get: operations["pulls/list-files"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/merge": {
        get: operations["pulls/check-if-merged"];
        put: operations["pulls/merge"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers": {
        get: operations["pulls/list-requested-reviewers"];
        post: operations["pulls/request-reviewers"];
        delete: operations["pulls/remove-requested-reviewers"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/reviews": {
        get: operations["pulls/list-reviews"];
        post: operations["pulls/create-review"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}": {
        get: operations["pulls/get-review"];
        put: operations["pulls/update-review"];
        delete: operations["pulls/delete-pending-review"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments": {
        get: operations["pulls/list-comments-for-review"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals": {
        put: operations["pulls/dismiss-review"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events": {
        post: operations["pulls/submit-review"];
    };
    "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch": {
        put: operations["pulls/update-branch"];
    };
    "/repos/{owner}/{repo}/readme": {
        get: operations["repos/get-readme"];
    };
    "/repos/{owner}/{repo}/readme/{dir}": {
        get: operations["repos/get-readme-in-directory"];
    };
    "/repos/{owner}/{repo}/releases": {
        get: operations["repos/list-releases"];
        post: operations["repos/create-release"];
    };
    "/repos/{owner}/{repo}/releases/assets/{asset_id}": {
        get: operations["repos/get-release-asset"];
        delete: operations["repos/delete-release-asset"];
        patch: operations["repos/update-release-asset"];
    };
    "/repos/{owner}/{repo}/releases/generate-notes": {
        post: operations["repos/generate-release-notes"];
    };
    "/repos/{owner}/{repo}/releases/latest": {
        get: operations["repos/get-latest-release"];
    };
    "/repos/{owner}/{repo}/releases/tags/{tag}": {
        get: operations["repos/get-release-by-tag"];
    };
    "/repos/{owner}/{repo}/releases/{release_id}": {
        get: operations["repos/get-release"];
        delete: operations["repos/delete-release"];
        patch: operations["repos/update-release"];
    };
    "/repos/{owner}/{repo}/releases/{release_id}/assets": {
        get: operations["repos/list-release-assets"];
        post: operations["repos/upload-release-asset"];
    };
    "/repos/{owner}/{repo}/releases/{release_id}/reactions": {
        get: operations["reactions/list-for-release"];
        post: operations["reactions/create-for-release"];
    };
    "/repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}": {
        delete: operations["reactions/delete-for-release"];
    };
    "/repos/{owner}/{repo}/rules/branches/{branch}": {
        get: operations["repos/get-branch-rules"];
    };
    "/repos/{owner}/{repo}/rulesets": {
        get: operations["repos/get-repo-rulesets"];
        post: operations["repos/create-repo-ruleset"];
    };
    "/repos/{owner}/{repo}/rulesets/{ruleset_id}": {
        get: operations["repos/get-repo-ruleset"];
        put: operations["repos/update-repo-ruleset"];
        delete: operations["repos/delete-repo-ruleset"];
    };
    "/repos/{owner}/{repo}/secret-scanning/alerts": {
        get: operations["secret-scanning/list-alerts-for-repo"];
    };
    "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}": {
        get: operations["secret-scanning/get-alert"];
        patch: operations["secret-scanning/update-alert"];
    };
    "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations": {
        get: operations["secret-scanning/list-locations-for-alert"];
    };
    "/repos/{owner}/{repo}/security-advisories": {
        get: operations["security-advisories/list-repository-advisories"];
        post: operations["security-advisories/create-repository-advisory"];
    };
    "/repos/{owner}/{repo}/security-advisories/reports": {
        post: operations["security-advisories/create-private-vulnerability-report"];
    };
    "/repos/{owner}/{repo}/security-advisories/{ghsa_id}": {
        get: operations["security-advisories/get-repository-advisory"];
        patch: operations["security-advisories/update-repository-advisory"];
    };
    "/repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve": {
        post: operations["security-advisories/create-repository-advisory-cve-request"];
    };
    "/repos/{owner}/{repo}/stargazers": {
        get: operations["activity/list-stargazers-for-repo"];
    };
    "/repos/{owner}/{repo}/stats/code_frequency": {
        get: operations["repos/get-code-frequency-stats"];
    };
    "/repos/{owner}/{repo}/stats/commit_activity": {
        get: operations["repos/get-commit-activity-stats"];
    };
    "/repos/{owner}/{repo}/stats/contributors": {
        get: operations["repos/get-contributors-stats"];
    };
    "/repos/{owner}/{repo}/stats/participation": {
        get: operations["repos/get-participation-stats"];
    };
    "/repos/{owner}/{repo}/stats/punch_card": {
        get: operations["repos/get-punch-card-stats"];
    };
    "/repos/{owner}/{repo}/statuses/{sha}": {
        post: operations["repos/create-commit-status"];
    };
    "/repos/{owner}/{repo}/subscribers": {
        get: operations["activity/list-watchers-for-repo"];
    };
    "/repos/{owner}/{repo}/subscription": {
        get: operations["activity/get-repo-subscription"];
        put: operations["activity/set-repo-subscription"];
        delete: operations["activity/delete-repo-subscription"];
    };
    "/repos/{owner}/{repo}/tags": {
        get: operations["repos/list-tags"];
    };
    "/repos/{owner}/{repo}/tags/protection": {
        get: operations["repos/list-tag-protection"];
        post: operations["repos/create-tag-protection"];
    };
    "/repos/{owner}/{repo}/tags/protection/{tag_protection_id}": {
        delete: operations["repos/delete-tag-protection"];
    };
    "/repos/{owner}/{repo}/tarball/{ref}": {
        get: operations["repos/download-tarball-archive"];
    };
    "/repos/{owner}/{repo}/teams": {
        get: operations["repos/list-teams"];
    };
    "/repos/{owner}/{repo}/topics": {
        get: operations["repos/get-all-topics"];
        put: operations["repos/replace-all-topics"];
    };
    "/repos/{owner}/{repo}/traffic/clones": {
        get: operations["repos/get-clones"];
    };
    "/repos/{owner}/{repo}/traffic/popular/paths": {
        get: operations["repos/get-top-paths"];
    };
    "/repos/{owner}/{repo}/traffic/popular/referrers": {
        get: operations["repos/get-top-referrers"];
    };
    "/repos/{owner}/{repo}/traffic/views": {
        get: operations["repos/get-views"];
    };
    "/repos/{owner}/{repo}/transfer": {
        post: operations["repos/transfer"];
    };
    "/repos/{owner}/{repo}/vulnerability-alerts": {
        get: operations["repos/check-vulnerability-alerts"];
        put: operations["repos/enable-vulnerability-alerts"];
        delete: operations["repos/disable-vulnerability-alerts"];
    };
    "/repos/{owner}/{repo}/zipball/{ref}": {
        get: operations["repos/download-zipball-archive"];
    };
    "/repos/{template_owner}/{template_repo}/generate": {
        post: operations["repos/create-using-template"];
    };
    "/repositories": {
        get: operations["repos/list-public"];
    };
    "/repositories/{repository_id}/environments/{environment_name}/secrets": {
        get: operations["actions/list-environment-secrets"];
    };
    "/repositories/{repository_id}/environments/{environment_name}/secrets/public-key": {
        get: operations["actions/get-environment-public-key"];
    };
    "/repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}": {
        get: operations["actions/get-environment-secret"];
        put: operations["actions/create-or-update-environment-secret"];
        delete: operations["actions/delete-environment-secret"];
    };
    "/repositories/{repository_id}/environments/{environment_name}/variables": {
        get: operations["actions/list-environment-variables"];
        post: operations["actions/create-environment-variable"];
    };
    "/repositories/{repository_id}/environments/{environment_name}/variables/{name}": {
        get: operations["actions/get-environment-variable"];
        delete: operations["actions/delete-environment-variable"];
        patch: operations["actions/update-environment-variable"];
    };
    "/search/code": {
        get: operations["search/code"];
    };
    "/search/commits": {
        get: operations["search/commits"];
    };
    "/search/issues": {
        get: operations["search/issues-and-pull-requests"];
    };
    "/search/labels": {
        get: operations["search/labels"];
    };
    "/search/repositories": {
        get: operations["search/repos"];
    };
    "/search/topics": {
        get: operations["search/topics"];
    };
    "/search/users": {
        get: operations["search/users"];
    };
    "/teams/{team_id}": {
        get: operations["teams/get-legacy"];
        delete: operations["teams/delete-legacy"];
        patch: operations["teams/update-legacy"];
    };
    "/teams/{team_id}/discussions": {
        get: operations["teams/list-discussions-legacy"];
        post: operations["teams/create-discussion-legacy"];
    };
    "/teams/{team_id}/discussions/{discussion_number}": {
        get: operations["teams/get-discussion-legacy"];
        delete: operations["teams/delete-discussion-legacy"];
        patch: operations["teams/update-discussion-legacy"];
    };
    "/teams/{team_id}/discussions/{discussion_number}/comments": {
        get: operations["teams/list-discussion-comments-legacy"];
        post: operations["teams/create-discussion-comment-legacy"];
    };
    "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}": {
        get: operations["teams/get-discussion-comment-legacy"];
        delete: operations["teams/delete-discussion-comment-legacy"];
        patch: operations["teams/update-discussion-comment-legacy"];
    };
    "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions": {
        get: operations["reactions/list-for-team-discussion-comment-legacy"];
        post: operations["reactions/create-for-team-discussion-comment-legacy"];
    };
    "/teams/{team_id}/discussions/{discussion_number}/reactions": {
        get: operations["reactions/list-for-team-discussion-legacy"];
        post: operations["reactions/create-for-team-discussion-legacy"];
    };
    "/teams/{team_id}/invitations": {
        get: operations["teams/list-pending-invitations-legacy"];
    };
    "/teams/{team_id}/members": {
        get: operations["teams/list-members-legacy"];
    };
    "/teams/{team_id}/members/{username}": {
        get: operations["teams/get-member-legacy"];
        put: operations["teams/add-member-legacy"];
        delete: operations["teams/remove-member-legacy"];
    };
    "/teams/{team_id}/memberships/{username}": {
        get: operations["teams/get-membership-for-user-legacy"];
        put: operations["teams/add-or-update-membership-for-user-legacy"];
        delete: operations["teams/remove-membership-for-user-legacy"];
    };
    "/teams/{team_id}/projects": {
        get: operations["teams/list-projects-legacy"];
    };
    "/teams/{team_id}/projects/{project_id}": {
        get: operations["teams/check-permissions-for-project-legacy"];
        put: operations["teams/add-or-update-project-permissions-legacy"];
        delete: operations["teams/remove-project-legacy"];
    };
    "/teams/{team_id}/repos": {
        get: operations["teams/list-repos-legacy"];
    };
    "/teams/{team_id}/repos/{owner}/{repo}": {
        get: operations["teams/check-permissions-for-repo-legacy"];
        put: operations["teams/add-or-update-repo-permissions-legacy"];
        delete: operations["teams/remove-repo-legacy"];
    };
    "/teams/{team_id}/teams": {
        get: operations["teams/list-child-legacy"];
    };
    "/user": {
        get: operations["users/get-authenticated"];
        patch: operations["users/update-authenticated"];
    };
    "/user/blocks": {
        get: operations["users/list-blocked-by-authenticated-user"];
    };
    "/user/blocks/{username}": {
        get: operations["users/check-blocked"];
        put: operations["users/block"];
        delete: operations["users/unblock"];
    };
    "/user/codespaces": {
        get: operations["codespaces/list-for-authenticated-user"];
        post: operations["codespaces/create-for-authenticated-user"];
    };
    "/user/codespaces/secrets": {
        get: operations["codespaces/list-secrets-for-authenticated-user"];
    };
    "/user/codespaces/secrets/public-key": {
        get: operations["codespaces/get-public-key-for-authenticated-user"];
    };
    "/user/codespaces/secrets/{secret_name}": {
        get: operations["codespaces/get-secret-for-authenticated-user"];
        put: operations["codespaces/create-or-update-secret-for-authenticated-user"];
        delete: operations["codespaces/delete-secret-for-authenticated-user"];
    };
    "/user/codespaces/secrets/{secret_name}/repositories": {
        get: operations["codespaces/list-repositories-for-secret-for-authenticated-user"];
        put: operations["codespaces/set-repositories-for-secret-for-authenticated-user"];
    };
    "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}": {
        put: operations["codespaces/add-repository-for-secret-for-authenticated-user"];
        delete: operations["codespaces/remove-repository-for-secret-for-authenticated-user"];
    };
    "/user/codespaces/{codespace_name}": {
        get: operations["codespaces/get-for-authenticated-user"];
        delete: operations["codespaces/delete-for-authenticated-user"];
        patch: operations["codespaces/update-for-authenticated-user"];
    };
    "/user/codespaces/{codespace_name}/exports": {
        post: operations["codespaces/export-for-authenticated-user"];
    };
    "/user/codespaces/{codespace_name}/exports/{export_id}": {
        get: operations["codespaces/get-export-details-for-authenticated-user"];
    };
    "/user/codespaces/{codespace_name}/machines": {
        get: operations["codespaces/codespace-machines-for-authenticated-user"];
    };
    "/user/codespaces/{codespace_name}/publish": {
        post: operations["codespaces/publish-for-authenticated-user"];
    };
    "/user/codespaces/{codespace_name}/start": {
        post: operations["codespaces/start-for-authenticated-user"];
    };
    "/user/codespaces/{codespace_name}/stop": {
        post: operations["codespaces/stop-for-authenticated-user"];
    };
    "/user/docker/conflicts": {
        get: operations["packages/list-docker-migration-conflicting-packages-for-authenticated-user"];
    };
    "/user/email/visibility": {
        patch: operations["users/set-primary-email-visibility-for-authenticated-user"];
    };
    "/user/emails": {
        get: operations["users/list-emails-for-authenticated-user"];
        post: operations["users/add-email-for-authenticated-user"];
        delete: operations["users/delete-email-for-authenticated-user"];
    };
    "/user/followers": {
        get: operations["users/list-followers-for-authenticated-user"];
    };
    "/user/following": {
        get: operations["users/list-followed-by-authenticated-user"];
    };
    "/user/following/{username}": {
        get: operations["users/check-person-is-followed-by-authenticated"];
        put: operations["users/follow"];
        delete: operations["users/unfollow"];
    };
    "/user/gpg_keys": {
        get: operations["users/list-gpg-keys-for-authenticated-user"];
        post: operations["users/create-gpg-key-for-authenticated-user"];
    };
    "/user/gpg_keys/{gpg_key_id}": {
        get: operations["users/get-gpg-key-for-authenticated-user"];
        delete: operations["users/delete-gpg-key-for-authenticated-user"];
    };
    "/user/installations": {
        get: operations["apps/list-installations-for-authenticated-user"];
    };
    "/user/installations/{installation_id}/repositories": {
        get: operations["apps/list-installation-repos-for-authenticated-user"];
    };
    "/user/installations/{installation_id}/repositories/{repository_id}": {
        put: operations["apps/add-repo-to-installation-for-authenticated-user"];
        delete: operations["apps/remove-repo-from-installation-for-authenticated-user"];
    };
    "/user/interaction-limits": {
        get: operations["interactions/get-restrictions-for-authenticated-user"];
        put: operations["interactions/set-restrictions-for-authenticated-user"];
        delete: operations["interactions/remove-restrictions-for-authenticated-user"];
    };
    "/user/issues": {
        get: operations["issues/list-for-authenticated-user"];
    };
    "/user/keys": {
        get: operations["users/list-public-ssh-keys-for-authenticated-user"];
        post: operations["users/create-public-ssh-key-for-authenticated-user"];
    };
    "/user/keys/{key_id}": {
        get: operations["users/get-public-ssh-key-for-authenticated-user"];
        delete: operations["users/delete-public-ssh-key-for-authenticated-user"];
    };
    "/user/marketplace_purchases": {
        get: operations["apps/list-subscriptions-for-authenticated-user"];
    };
    "/user/marketplace_purchases/stubbed": {
        get: operations["apps/list-subscriptions-for-authenticated-user-stubbed"];
    };
    "/user/memberships/orgs": {
        get: operations["orgs/list-memberships-for-authenticated-user"];
    };
    "/user/memberships/orgs/{org}": {
        get: operations["orgs/get-membership-for-authenticated-user"];
        patch: operations["orgs/update-membership-for-authenticated-user"];
    };
    "/user/migrations": {
        get: operations["migrations/list-for-authenticated-user"];
        post: operations["migrations/start-for-authenticated-user"];
    };
    "/user/migrations/{migration_id}": {
        get: operations["migrations/get-status-for-authenticated-user"];
    };
    "/user/migrations/{migration_id}/archive": {
        get: operations["migrations/get-archive-for-authenticated-user"];
        delete: operations["migrations/delete-archive-for-authenticated-user"];
    };
    "/user/migrations/{migration_id}/repos/{repo_name}/lock": {
        delete: operations["migrations/unlock-repo-for-authenticated-user"];
    };
    "/user/migrations/{migration_id}/repositories": {
        get: operations["migrations/list-repos-for-authenticated-user"];
    };
    "/user/orgs": {
        get: operations["orgs/list-for-authenticated-user"];
    };
    "/user/packages": {
        get: operations["packages/list-packages-for-authenticated-user"];
    };
    "/user/packages/{package_type}/{package_name}": {
        get: operations["packages/get-package-for-authenticated-user"];
        delete: operations["packages/delete-package-for-authenticated-user"];
    };
    "/user/packages/{package_type}/{package_name}/restore": {
        post: operations["packages/restore-package-for-authenticated-user"];
    };
    "/user/packages/{package_type}/{package_name}/versions": {
        get: operations["packages/get-all-package-versions-for-package-owned-by-authenticated-user"];
    };
    "/user/packages/{package_type}/{package_name}/versions/{package_version_id}": {
        get: operations["packages/get-package-version-for-authenticated-user"];
        delete: operations["packages/delete-package-version-for-authenticated-user"];
    };
    "/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": {
        post: operations["packages/restore-package-version-for-authenticated-user"];
    };
    "/user/projects": {
        post: operations["projects/create-for-authenticated-user"];
    };
    "/user/public_emails": {
        get: operations["users/list-public-emails-for-authenticated-user"];
    };
    "/user/repos": {
        get: operations["repos/list-for-authenticated-user"];
        post: operations["repos/create-for-authenticated-user"];
    };
    "/user/repository_invitations": {
        get: operations["repos/list-invitations-for-authenticated-user"];
    };
    "/user/repository_invitations/{invitation_id}": {
        delete: operations["repos/decline-invitation-for-authenticated-user"];
        patch: operations["repos/accept-invitation-for-authenticated-user"];
    };
    "/user/social_accounts": {
        get: operations["users/list-social-accounts-for-authenticated-user"];
        post: operations["users/add-social-account-for-authenticated-user"];
        delete: operations["users/delete-social-account-for-authenticated-user"];
    };
    "/user/ssh_signing_keys": {
        get: operations["users/list-ssh-signing-keys-for-authenticated-user"];
        post: operations["users/create-ssh-signing-key-for-authenticated-user"];
    };
    "/user/ssh_signing_keys/{ssh_signing_key_id}": {
        get: operations["users/get-ssh-signing-key-for-authenticated-user"];
        delete: operations["users/delete-ssh-signing-key-for-authenticated-user"];
    };
    "/user/starred": {
        get: operations["activity/list-repos-starred-by-authenticated-user"];
    };
    "/user/starred/{owner}/{repo}": {
        get: operations["activity/check-repo-is-starred-by-authenticated-user"];
        put: operations["activity/star-repo-for-authenticated-user"];
        delete: operations["activity/unstar-repo-for-authenticated-user"];
    };
    "/user/subscriptions": {
        get: operations["activity/list-watched-repos-for-authenticated-user"];
    };
    "/user/teams": {
        get: operations["teams/list-for-authenticated-user"];
    };
    "/users": {
        get: operations["users/list"];
    };
    "/users/{username}": {
        get: operations["users/get-by-username"];
    };
    "/users/{username}/docker/conflicts": {
        get: operations["packages/list-docker-migration-conflicting-packages-for-user"];
    };
    "/users/{username}/events": {
        get: operations["activity/list-events-for-authenticated-user"];
    };
    "/users/{username}/events/orgs/{org}": {
        get: operations["activity/list-org-events-for-authenticated-user"];
    };
    "/users/{username}/events/public": {
        get: operations["activity/list-public-events-for-user"];
    };
    "/users/{username}/followers": {
        get: operations["users/list-followers-for-user"];
    };
    "/users/{username}/following": {
        get: operations["users/list-following-for-user"];
    };
    "/users/{username}/following/{target_user}": {
        get: operations["users/check-following-for-user"];
    };
    "/users/{username}/gists": {
        get: operations["gists/list-for-user"];
    };
    "/users/{username}/gpg_keys": {
        get: operations["users/list-gpg-keys-for-user"];
    };
    "/users/{username}/hovercard": {
        get: operations["users/get-context-for-user"];
    };
    "/users/{username}/installation": {
        get: operations["apps/get-user-installation"];
    };
    "/users/{username}/keys": {
        get: operations["users/list-public-keys-for-user"];
    };
    "/users/{username}/orgs": {
        get: operations["orgs/list-for-user"];
    };
    "/users/{username}/packages": {
        get: operations["packages/list-packages-for-user"];
    };
    "/users/{username}/packages/{package_type}/{package_name}": {
        get: operations["packages/get-package-for-user"];
        delete: operations["packages/delete-package-for-user"];
    };
    "/users/{username}/packages/{package_type}/{package_name}/restore": {
        post: operations["packages/restore-package-for-user"];
    };
    "/users/{username}/packages/{package_type}/{package_name}/versions": {
        get: operations["packages/get-all-package-versions-for-package-owned-by-user"];
    };
    "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}": {
        get: operations["packages/get-package-version-for-user"];
        delete: operations["packages/delete-package-version-for-user"];
    };
    "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": {
        post: operations["packages/restore-package-version-for-user"];
    };
    "/users/{username}/projects": {
        get: operations["projects/list-for-user"];
    };
    "/users/{username}/received_events": {
        get: operations["activity/list-received-events-for-user"];
    };
    "/users/{username}/received_events/public": {
        get: operations["activity/list-received-public-events-for-user"];
    };
    "/users/{username}/repos": {
        get: operations["repos/list-for-user"];
    };
    "/users/{username}/settings/billing/actions": {
        get: operations["billing/get-github-actions-billing-user"];
    };
    "/users/{username}/settings/billing/packages": {
        get: operations["billing/get-github-packages-billing-user"];
    };
    "/users/{username}/settings/billing/shared-storage": {
        get: operations["billing/get-shared-storage-billing-user"];
    };
    "/users/{username}/social_accounts": {
        get: operations["users/list-social-accounts-for-user"];
    };
    "/users/{username}/ssh_signing_keys": {
        get: operations["users/list-ssh-signing-keys-for-user"];
    };
    "/users/{username}/starred": {
        get: operations["activity/list-repos-starred-by-user"];
    };
    "/users/{username}/subscriptions": {
        get: operations["activity/list-repos-watched-by-user"];
    };
    "/versions": {
        get: operations["meta/get-all-versions"];
    };
    "/zen": {
        get: operations["meta/get-zen"];
    };
}
export interface webhooks {
    "branch-protection-rule-created": {
        post: operations["branch-protection-rule/created"];
    };
    "branch-protection-rule-deleted": {
        post: operations["branch-protection-rule/deleted"];
    };
    "branch-protection-rule-edited": {
        post: operations["branch-protection-rule/edited"];
    };
    "check-run-completed": {
        post: operations["check-run/completed"];
    };
    "check-run-created": {
        post: operations["check-run/created"];
    };
    "check-run-requested-action": {
        post: operations["check-run/requested-action"];
    };
    "check-run-rerequested": {
        post: operations["check-run/rerequested"];
    };
    "check-suite-completed": {
        post: operations["check-suite/completed"];
    };
    "check-suite-requested": {
        post: operations["check-suite/requested"];
    };
    "check-suite-rerequested": {
        post: operations["check-suite/rerequested"];
    };
    "code-scanning-alert-appeared-in-branch": {
        post: operations["code-scanning-alert/appeared-in-branch"];
    };
    "code-scanning-alert-closed-by-user": {
        post: operations["code-scanning-alert/closed-by-user"];
    };
    "code-scanning-alert-created": {
        post: operations["code-scanning-alert/created"];
    };
    "code-scanning-alert-fixed": {
        post: operations["code-scanning-alert/fixed"];
    };
    "code-scanning-alert-reopened": {
        post: operations["code-scanning-alert/reopened"];
    };
    "code-scanning-alert-reopened-by-user": {
        post: operations["code-scanning-alert/reopened-by-user"];
    };
    "commit-comment-created": {
        post: operations["commit-comment/created"];
    };
    "create": {
        post: operations["create"];
    };
    "delete": {
        post: operations["delete"];
    };
    "dependabot-alert-auto-dismissed": {
        post: operations["dependabot-alert/auto-dismissed"];
    };
    "dependabot-alert-auto-reopened": {
        post: operations["dependabot-alert/auto-reopened"];
    };
    "dependabot-alert-created": {
        post: operations["dependabot-alert/created"];
    };
    "dependabot-alert-dismissed": {
        post: operations["dependabot-alert/dismissed"];
    };
    "dependabot-alert-fixed": {
        post: operations["dependabot-alert/fixed"];
    };
    "dependabot-alert-reintroduced": {
        post: operations["dependabot-alert/reintroduced"];
    };
    "dependabot-alert-reopened": {
        post: operations["dependabot-alert/reopened"];
    };
    "deploy-key-created": {
        post: operations["deploy-key/created"];
    };
    "deploy-key-deleted": {
        post: operations["deploy-key/deleted"];
    };
    "deployment-created": {
        post: operations["deployment/created"];
    };
    "deployment-protection-rule-requested": {
        post: operations["deployment-protection-rule/requested"];
    };
    "deployment-review-approved": {
        post: operations["deployment-review/approved"];
    };
    "deployment-review-rejected": {
        post: operations["deployment-review/rejected"];
    };
    "deployment-review-requested": {
        post: operations["deployment-review/requested"];
    };
    "deployment-status-created": {
        post: operations["deployment-status/created"];
    };
    "discussion-answered": {
        post: operations["discussion/answered"];
    };
    "discussion-category-changed": {
        post: operations["discussion/category-changed"];
    };
    "discussion-closed": {
        post: operations["discussion/closed"];
    };
    "discussion-comment-created": {
        post: operations["discussion-comment/created"];
    };
    "discussion-comment-deleted": {
        post: operations["discussion-comment/deleted"];
    };
    "discussion-comment-edited": {
        post: operations["discussion-comment/edited"];
    };
    "discussion-created": {
        post: operations["discussion/created"];
    };
    "discussion-deleted": {
        post: operations["discussion/deleted"];
    };
    "discussion-edited": {
        post: operations["discussion/edited"];
    };
    "discussion-labeled": {
        post: operations["discussion/labeled"];
    };
    "discussion-locked": {
        post: operations["discussion/locked"];
    };
    "discussion-pinned": {
        post: operations["discussion/pinned"];
    };
    "discussion-reopened": {
        post: operations["discussion/reopened"];
    };
    "discussion-transferred": {
        post: operations["discussion/transferred"];
    };
    "discussion-unanswered": {
        post: operations["discussion/unanswered"];
    };
    "discussion-unlabeled": {
        post: operations["discussion/unlabeled"];
    };
    "discussion-unlocked": {
        post: operations["discussion/unlocked"];
    };
    "discussion-unpinned": {
        post: operations["discussion/unpinned"];
    };
    "fork": {
        post: operations["fork"];
    };
    "github-app-authorization-revoked": {
        post: operations["github-app-authorization/revoked"];
    };
    "gollum": {
        post: operations["gollum"];
    };
    "installation-created": {
        post: operations["installation/created"];
    };
    "installation-deleted": {
        post: operations["installation/deleted"];
    };
    "installation-new-permissions-accepted": {
        post: operations["installation/new-permissions-accepted"];
    };
    "installation-repositories-added": {
        post: operations["installation-repositories/added"];
    };
    "installation-repositories-removed": {
        post: operations["installation-repositories/removed"];
    };
    "installation-suspend": {
        post: operations["installation/suspend"];
    };
    "installation-target-renamed": {
        post: operations["installation-target/renamed"];
    };
    "installation-unsuspend": {
        post: operations["installation/unsuspend"];
    };
    "issue-comment-created": {
        post: operations["issue-comment/created"];
    };
    "issue-comment-deleted": {
        post: operations["issue-comment/deleted"];
    };
    "issue-comment-edited": {
        post: operations["issue-comment/edited"];
    };
    "issues-assigned": {
        post: operations["issues/assigned"];
    };
    "issues-closed": {
        post: operations["issues/closed"];
    };
    "issues-deleted": {
        post: operations["issues/deleted"];
    };
    "issues-demilestoned": {
        post: operations["issues/demilestoned"];
    };
    "issues-edited": {
        post: operations["issues/edited"];
    };
    "issues-labeled": {
        post: operations["issues/labeled"];
    };
    "issues-locked": {
        post: operations["issues/locked"];
    };
    "issues-milestoned": {
        post: operations["issues/milestoned"];
    };
    "issues-opened": {
        post: operations["issues/opened"];
    };
    "issues-pinned": {
        post: operations["issues/pinned"];
    };
    "issues-reopened": {
        post: operations["issues/reopened"];
    };
    "issues-transferred": {
        post: operations["issues/transferred"];
    };
    "issues-unassigned": {
        post: operations["issues/unassigned"];
    };
    "issues-unlabeled": {
        post: operations["issues/unlabeled"];
    };
    "issues-unlocked": {
        post: operations["issues/unlocked"];
    };
    "issues-unpinned": {
        post: operations["issues/unpinned"];
    };
    "label-created": {
        post: operations["label/created"];
    };
    "label-deleted": {
        post: operations["label/deleted"];
    };
    "label-edited": {
        post: operations["label/edited"];
    };
    "marketplace-purchase-cancelled": {
        post: operations["marketplace-purchase/cancelled"];
    };
    "marketplace-purchase-changed": {
        post: operations["marketplace-purchase/changed"];
    };
    "marketplace-purchase-pending-change": {
        post: operations["marketplace-purchase/pending-change"];
    };
    "marketplace-purchase-pending-change-cancelled": {
        post: operations["marketplace-purchase/pending-change-cancelled"];
    };
    "marketplace-purchase-purchased": {
        post: operations["marketplace-purchase/purchased"];
    };
    "member-added": {
        post: operations["member/added"];
    };
    "member-edited": {
        post: operations["member/edited"];
    };
    "member-removed": {
        post: operations["member/removed"];
    };
    "membership-added": {
        post: operations["membership/added"];
    };
    "membership-removed": {
        post: operations["membership/removed"];
    };
    "merge-group-checks-requested": {
        post: operations["merge-group/checks-requested"];
    };
    "merge-group-destroyed": {
        post: operations["merge-group/destroyed"];
    };
    "meta-deleted": {
        post: operations["meta/deleted"];
    };
    "milestone-closed": {
        post: operations["milestone/closed"];
    };
    "milestone-created": {
        post: operations["milestone/created"];
    };
    "milestone-deleted": {
        post: operations["milestone/deleted"];
    };
    "milestone-edited": {
        post: operations["milestone/edited"];
    };
    "milestone-opened": {
        post: operations["milestone/opened"];
    };
    "org-block-blocked": {
        post: operations["org-block/blocked"];
    };
    "org-block-unblocked": {
        post: operations["org-block/unblocked"];
    };
    "organization-deleted": {
        post: operations["organization/deleted"];
    };
    "organization-member-added": {
        post: operations["organization/member-added"];
    };
    "organization-member-invited": {
        post: operations["organization/member-invited"];
    };
    "organization-member-removed": {
        post: operations["organization/member-removed"];
    };
    "organization-renamed": {
        post: operations["organization/renamed"];
    };
    "package-published": {
        post: operations["package/published"];
    };
    "package-updated": {
        post: operations["package/updated"];
    };
    "page-build": {
        post: operations["page-build"];
    };
    "personal-access-token-request-approved": {
        post: operations["personal-access-token-request/approved"];
    };
    "personal-access-token-request-cancelled": {
        post: operations["personal-access-token-request/cancelled"];
    };
    "personal-access-token-request-created": {
        post: operations["personal-access-token-request/created"];
    };
    "personal-access-token-request-denied": {
        post: operations["personal-access-token-request/denied"];
    };
    "ping": {
        post: operations["ping"];
    };
    "project-card-converted": {
        post: operations["project-card/converted"];
    };
    "project-card-created": {
        post: operations["project-card/created"];
    };
    "project-card-deleted": {
        post: operations["project-card/deleted"];
    };
    "project-card-edited": {
        post: operations["project-card/edited"];
    };
    "project-card-moved": {
        post: operations["project-card/moved"];
    };
    "project-closed": {
        post: operations["project/closed"];
    };
    "project-column-created": {
        post: operations["project-column/created"];
    };
    "project-column-deleted": {
        post: operations["project-column/deleted"];
    };
    "project-column-edited": {
        post: operations["project-column/edited"];
    };
    "project-column-moved": {
        post: operations["project-column/moved"];
    };
    "project-created": {
        post: operations["project/created"];
    };
    "project-deleted": {
        post: operations["project/deleted"];
    };
    "project-edited": {
        post: operations["project/edited"];
    };
    "project-reopened": {
        post: operations["project/reopened"];
    };
    "projects-v2-closed": {
        post: operations["projects-v2/closed"];
    };
    "projects-v2-created": {
        post: operations["projects-v2/created"];
    };
    "projects-v2-deleted": {
        post: operations["projects-v2/deleted"];
    };
    "projects-v2-edited": {
        post: operations["projects-v2/edited"];
    };
    "projects-v2-item-archived": {
        post: operations["projects-v2-item/archived"];
    };
    "projects-v2-item-converted": {
        post: operations["projects-v2-item/converted"];
    };
    "projects-v2-item-created": {
        post: operations["projects-v2-item/created"];
    };
    "projects-v2-item-deleted": {
        post: operations["projects-v2-item/deleted"];
    };
    "projects-v2-item-edited": {
        post: operations["projects-v2-item/edited"];
    };
    "projects-v2-item-reordered": {
        post: operations["projects-v2-item/reordered"];
    };
    "projects-v2-item-restored": {
        post: operations["projects-v2-item/restored"];
    };
    "projects-v2-reopened": {
        post: operations["projects-v2/reopened"];
    };
    "public": {
        post: operations["public"];
    };
    "pull-request-assigned": {
        post: operations["pull-request/assigned"];
    };
    "pull-request-auto-merge-disabled": {
        post: operations["pull-request/auto-merge-disabled"];
    };
    "pull-request-auto-merge-enabled": {
        post: operations["pull-request/auto-merge-enabled"];
    };
    "pull-request-closed": {
        post: operations["pull-request/closed"];
    };
    "pull-request-converted-to-draft": {
        post: operations["pull-request/converted-to-draft"];
    };
    "pull-request-demilestoned": {
        post: operations["pull-request/demilestoned"];
    };
    "pull-request-dequeued": {
        post: operations["pull-request/dequeued"];
    };
    "pull-request-edited": {
        post: operations["pull-request/edited"];
    };
    "pull-request-enqueued": {
        post: operations["pull-request/enqueued"];
    };
    "pull-request-labeled": {
        post: operations["pull-request/labeled"];
    };
    "pull-request-locked": {
        post: operations["pull-request/locked"];
    };
    "pull-request-milestoned": {
        post: operations["pull-request/milestoned"];
    };
    "pull-request-opened": {
        post: operations["pull-request/opened"];
    };
    "pull-request-ready-for-review": {
        post: operations["pull-request/ready-for-review"];
    };
    "pull-request-reopened": {
        post: operations["pull-request/reopened"];
    };
    "pull-request-review-comment-created": {
        post: operations["pull-request-review-comment/created"];
    };
    "pull-request-review-comment-deleted": {
        post: operations["pull-request-review-comment/deleted"];
    };
    "pull-request-review-comment-edited": {
        post: operations["pull-request-review-comment/edited"];
    };
    "pull-request-review-dismissed": {
        post: operations["pull-request-review/dismissed"];
    };
    "pull-request-review-edited": {
        post: operations["pull-request-review/edited"];
    };
    "pull-request-review-request-removed": {
        post: operations["pull-request/review-request-removed"];
    };
    "pull-request-review-requested": {
        post: operations["pull-request/review-requested"];
    };
    "pull-request-review-submitted": {
        post: operations["pull-request-review/submitted"];
    };
    "pull-request-review-thread-resolved": {
        post: operations["pull-request-review-thread/resolved"];
    };
    "pull-request-review-thread-unresolved": {
        post: operations["pull-request-review-thread/unresolved"];
    };
    "pull-request-synchronize": {
        post: operations["pull-request/synchronize"];
    };
    "pull-request-unassigned": {
        post: operations["pull-request/unassigned"];
    };
    "pull-request-unlabeled": {
        post: operations["pull-request/unlabeled"];
    };
    "pull-request-unlocked": {
        post: operations["pull-request/unlocked"];
    };
    "push": {
        post: operations["push"];
    };
    "registry-package-published": {
        post: operations["registry-package/published"];
    };
    "registry-package-updated": {
        post: operations["registry-package/updated"];
    };
    "release-created": {
        post: operations["release/created"];
    };
    "release-deleted": {
        post: operations["release/deleted"];
    };
    "release-edited": {
        post: operations["release/edited"];
    };
    "release-prereleased": {
        post: operations["release/prereleased"];
    };
    "release-published": {
        post: operations["release/published"];
    };
    "release-released": {
        post: operations["release/released"];
    };
    "release-unpublished": {
        post: operations["release/unpublished"];
    };
    "repository-advisory-published": {
        post: operations["repository-advisory/published"];
    };
    "repository-advisory-reported": {
        post: operations["repository-advisory/reported"];
    };
    "repository-archived": {
        post: operations["repository/archived"];
    };
    "repository-created": {
        post: operations["repository/created"];
    };
    "repository-deleted": {
        post: operations["repository/deleted"];
    };
    "repository-dispatch-sample.collected": {
        post: operations["repository-dispatch/sample.collected"];
    };
    "repository-edited": {
        post: operations["repository/edited"];
    };
    "repository-import": {
        post: operations["repository-import"];
    };
    "repository-privatized": {
        post: operations["repository/privatized"];
    };
    "repository-publicized": {
        post: operations["repository/publicized"];
    };
    "repository-renamed": {
        post: operations["repository/renamed"];
    };
    "repository-ruleset-created": {
        post: operations["repository-ruleset/created"];
    };
    "repository-ruleset-deleted": {
        post: operations["repository-ruleset/deleted"];
    };
    "repository-ruleset-edited": {
        post: operations["repository-ruleset/edited"];
    };
    "repository-transferred": {
        post: operations["repository/transferred"];
    };
    "repository-unarchived": {
        post: operations["repository/unarchived"];
    };
    "repository-vulnerability-alert-create": {
        post: operations["repository-vulnerability-alert/create"];
    };
    "repository-vulnerability-alert-dismiss": {
        post: operations["repository-vulnerability-alert/dismiss"];
    };
    "repository-vulnerability-alert-reopen": {
        post: operations["repository-vulnerability-alert/reopen"];
    };
    "repository-vulnerability-alert-resolve": {
        post: operations["repository-vulnerability-alert/resolve"];
    };
    "secret-scanning-alert-created": {
        post: operations["secret-scanning-alert/created"];
    };
    "secret-scanning-alert-location-created": {
        post: operations["secret-scanning-alert-location/created"];
    };
    "secret-scanning-alert-reopened": {
        post: operations["secret-scanning-alert/reopened"];
    };
    "secret-scanning-alert-resolved": {
        post: operations["secret-scanning-alert/resolved"];
    };
    "secret-scanning-alert-revoked": {
        post: operations["secret-scanning-alert/revoked"];
    };
    "security-advisory-published": {
        post: operations["security-advisory/published"];
    };
    "security-advisory-updated": {
        post: operations["security-advisory/updated"];
    };
    "security-advisory-withdrawn": {
        post: operations["security-advisory/withdrawn"];
    };
    "security-and-analysis": {
        post: operations["security-and-analysis"];
    };
    "sponsorship-cancelled": {
        post: operations["sponsorship/cancelled"];
    };
    "sponsorship-created": {
        post: operations["sponsorship/created"];
    };
    "sponsorship-edited": {
        post: operations["sponsorship/edited"];
    };
    "sponsorship-pending-cancellation": {
        post: operations["sponsorship/pending-cancellation"];
    };
    "sponsorship-pending-tier-change": {
        post: operations["sponsorship/pending-tier-change"];
    };
    "sponsorship-tier-changed": {
        post: operations["sponsorship/tier-changed"];
    };
    "star-created": {
        post: operations["star/created"];
    };
    "star-deleted": {
        post: operations["star/deleted"];
    };
    "status": {
        post: operations["status"];
    };
    "team-add": {
        post: operations["team-add"];
    };
    "team-added-to-repository": {
        post: operations["team/added-to-repository"];
    };
    "team-created": {
        post: operations["team/created"];
    };
    "team-deleted": {
        post: operations["team/deleted"];
    };
    "team-edited": {
        post: operations["team/edited"];
    };
    "team-removed-from-repository": {
        post: operations["team/removed-from-repository"];
    };
    "watch-started": {
        post: operations["watch/started"];
    };
    "workflow-dispatch": {
        post: operations["workflow-dispatch"];
    };
    "workflow-job-completed": {
        post: operations["workflow-job/completed"];
    };
    "workflow-job-in-progress": {
        post: operations["workflow-job/in-progress"];
    };
    "workflow-job-queued": {
        post: operations["workflow-job/queued"];
    };
    "workflow-job-waiting": {
        post: operations["workflow-job/waiting"];
    };
    "workflow-run-completed": {
        post: operations["workflow-run/completed"];
    };
    "workflow-run-in-progress": {
        post: operations["workflow-run/in-progress"];
    };
    "workflow-run-requested": {
        post: operations["workflow-run/requested"];
    };
}
export interface components {
    schemas: {
        root: {
            current_user_url: string;
            current_user_authorizations_html_url: string;
            authorizations_url: string;
            code_search_url: string;
            commit_search_url: string;
            emails_url: string;
            emojis_url: string;
            events_url: string;
            feeds_url: string;
            followers_url: string;
            following_url: string;
            gists_url: string;
            hub_url: string;
            issue_search_url: string;
            issues_url: string;
            keys_url: string;
            label_search_url: string;
            notifications_url: string;
            organization_url: string;
            organization_repositories_url: string;
            organization_teams_url: string;
            public_gists_url: string;
            rate_limit_url: string;
            repository_url: string;
            repository_search_url: string;
            current_user_repositories_url: string;
            starred_url: string;
            starred_gists_url: string;
            topic_search_url?: string;
            user_url: string;
            user_organizations_url: string;
            user_repositories_url: string;
            user_search_url: string;
        };
        "security-advisory-ecosystems": "rubygems" | "npm" | "pip" | "maven" | "nuget" | "composer" | "go" | "rust" | "erlang" | "actions" | "pub" | "other" | "swift";
        "simple-user": {
            name?: string | null;
            email?: string | null;
            login: string;
            id: number;
            node_id: string;
            avatar_url: string;
            gravatar_id: string | null;
            url: string;
            html_url: string;
            followers_url: string;
            following_url: string;
            gists_url: string;
            starred_url: string;
            subscriptions_url: string;
            organizations_url: string;
            repos_url: string;
            events_url: string;
            received_events_url: string;
            type: string;
            site_admin: boolean;
            starred_at?: string;
        };
        "security-advisory-credit-types": "analyst" | "finder" | "reporter" | "coordinator" | "remediation_developer" | "remediation_reviewer" | "remediation_verifier" | "tool" | "sponsor" | "other";
        "global-advisory": {
            ghsa_id: string;
            cve_id: string | null;
            url: string;
            html_url: string;
            repository_advisory_url: string | null;
            summary: string;
            description: string | null;
            type: "reviewed" | "unreviewed" | "malware";
            severity: "critical" | "high" | "medium" | "low" | "unknown";
            source_code_location: string | null;
            identifiers: (readonly ({
                type: "CVE" | "GHSA";
                value: string;
            })[]) | null;
            references: string[] | null;
            published_at: string;
            updated_at: string;
            github_reviewed_at: string | null;
            nvd_published_at: string | null;
            withdrawn_at: string | null;
            vulnerabilities: (({
                package: ({
                    ecosystem: components["schemas"]["security-advisory-ecosystems"];
                    name: string | null;
                }) | null;
                vulnerable_version_range: string | null;
                first_patched_version: string | null;
                vulnerable_functions: readonly string[] | null;
            })[]) | null;
            cvss: ({
                vector_string: string | null;
                score: number | null;
            }) | null;
            cwes: {
                cwe_id: string;
                name: string;
            }[] | null;
            credits: readonly {
                user: components["schemas"]["simple-user"];
                type: components["schemas"]["security-advisory-credit-types"];
            }[] | null;
        };
        "basic-error": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
        };
        "validation-error-simple": {
            message: string;
            documentation_url: string;
            errors?: string[];
        };
        integration: {
            id: number;
            slug?: string;
            node_id: string;
            owner: null | components["schemas"]["simple-user"];
            name: string;
            description: string | null;
            external_url: string;
            html_url: string;
            created_at: string;
            updated_at: string;
            permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
            };
            events: string[];
            installations_count?: number;
            client_id?: string;
            client_secret?: string;
            webhook_secret?: string | null;
            pem?: string;
        };
        "webhook-config-url": string;
        "webhook-config-content-type": string;
        "webhook-config-secret": string;
        "webhook-config-insecure-ssl": string | number;
        "webhook-config": {
            url?: components["schemas"]["webhook-config-url"];
            content_type?: components["schemas"]["webhook-config-content-type"];
            secret?: components["schemas"]["webhook-config-secret"];
            insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
        };
        "hook-delivery-item": {
            id: number;
            guid: string;
            delivered_at: string;
            redelivery: boolean;
            duration: number;
            status: string;
            status_code: number;
            event: string;
            action: string | null;
            installation_id: number | null;
            repository_id: number | null;
        };
        "scim-error": {
            message?: string | null;
            documentation_url?: string | null;
            detail?: string | null;
            status?: number;
            scimType?: string | null;
            schemas?: string[];
        };
        "validation-error": {
            message: string;
            documentation_url: string;
            errors?: ({
                resource?: string;
                field?: string;
                message?: string;
                code: string;
                index?: number;
                value?: (string | null) | (number | null) | (string[] | null);
            })[];
        };
        "hook-delivery": {
            id: number;
            guid: string;
            delivered_at: string;
            redelivery: boolean;
            duration: number;
            status: string;
            status_code: number;
            event: string;
            action: string | null;
            installation_id: number | null;
            repository_id: number | null;
            url?: string;
            request: {
                headers: {
                    [key: string]: unknown;
                } | null;
                payload: {
                    [key: string]: unknown;
                } | null;
            };
            response: {
                headers: {
                    [key: string]: unknown;
                } | null;
                payload: string | null;
            };
        };
        enterprise: {
            description?: string | null;
            html_url: string;
            website_url?: string | null;
            id: number;
            node_id: string;
            name: string;
            slug: string;
            created_at: string | null;
            updated_at: string | null;
            avatar_url: string;
        };
        "integration-installation-request": {
            id: number;
            node_id?: string;
            account: components["schemas"]["simple-user"] | components["schemas"]["enterprise"];
            requester: components["schemas"]["simple-user"];
            created_at: string;
        };
        "app-permissions": {
            actions?: "read" | "write";
            administration?: "read" | "write";
            checks?: "read" | "write";
            contents?: "read" | "write";
            deployments?: "read" | "write";
            environments?: "read" | "write";
            issues?: "read" | "write";
            metadata?: "read" | "write";
            packages?: "read" | "write";
            pages?: "read" | "write";
            pull_requests?: "read" | "write";
            repository_hooks?: "read" | "write";
            repository_projects?: "read" | "write" | "admin";
            secret_scanning_alerts?: "read" | "write";
            secrets?: "read" | "write";
            security_events?: "read" | "write";
            single_file?: "read" | "write";
            statuses?: "read" | "write";
            vulnerability_alerts?: "read" | "write";
            workflows?: "write";
            members?: "read" | "write";
            organization_administration?: "read" | "write";
            organization_custom_roles?: "read" | "write";
            organization_announcement_banners?: "read" | "write";
            organization_hooks?: "read" | "write";
            organization_personal_access_tokens?: "read" | "write";
            organization_personal_access_token_requests?: "read" | "write";
            organization_plan?: "read";
            organization_projects?: "read" | "write" | "admin";
            organization_packages?: "read" | "write";
            organization_secrets?: "read" | "write";
            organization_self_hosted_runners?: "read" | "write";
            organization_user_blocking?: "read" | "write";
            team_discussions?: "read" | "write";
        };
        installation: {
            id: number;
            account: null | (components["schemas"]["simple-user"] | components["schemas"]["enterprise"]);
            repository_selection: "all" | "selected";
            access_tokens_url: string;
            repositories_url: string;
            html_url: string;
            app_id: number;
            target_id: number;
            target_type: string;
            permissions: components["schemas"]["app-permissions"];
            events: string[];
            created_at: string;
            updated_at: string;
            single_file_name: string | null;
            has_multiple_single_files?: boolean;
            single_file_paths?: string[];
            app_slug: string;
            suspended_by: null | components["schemas"]["simple-user"];
            suspended_at: string | null;
            contact_email?: string | null;
        };
        "license-simple": {
            key: string;
            name: string;
            url: string | null;
            spdx_id: string | null;
            node_id: string;
            html_url?: string;
        };
        repository: {
            id: number;
            node_id: string;
            name: string;
            full_name: string;
            license: null | components["schemas"]["license-simple"];
            organization?: null | components["schemas"]["simple-user"];
            forks: number;
            permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
            };
            owner: components["schemas"]["simple-user"];
            private: boolean;
            html_url: string;
            description: string | null;
            fork: boolean;
            url: string;
            archive_url: string;
            assignees_url: string;
            blobs_url: string;
            branches_url: string;
            collaborators_url: string;
            comments_url: string;
            commits_url: string;
            compare_url: string;
            contents_url: string;
            contributors_url: string;
            deployments_url: string;
            downloads_url: string;
            events_url: string;
            forks_url: string;
            git_commits_url: string;
            git_refs_url: string;
            git_tags_url: string;
            git_url: string;
            issue_comment_url: string;
            issue_events_url: string;
            issues_url: string;
            keys_url: string;
            labels_url: string;
            languages_url: string;
            merges_url: string;
            milestones_url: string;
            notifications_url: string;
            pulls_url: string;
            releases_url: string;
            ssh_url: string;
            stargazers_url: string;
            statuses_url: string;
            subscribers_url: string;
            subscription_url: string;
            tags_url: string;
            teams_url: string;
            trees_url: string;
            clone_url: string;
            mirror_url: string | null;
            hooks_url: string;
            svn_url: string;
            homepage: string | null;
            language: string | null;
            forks_count: number;
            stargazers_count: number;
            watchers_count: number;
            size: number;
            default_branch: string;
            open_issues_count: number;
            is_template?: boolean;
            topics?: string[];
            has_issues: boolean;
            has_projects: boolean;
            has_wiki: boolean;
            has_pages: boolean;
            has_downloads: boolean;
            has_discussions?: boolean;
            archived: boolean;
            disabled: boolean;
            visibility?: string;
            pushed_at: string | null;
            created_at: string | null;
            updated_at: string | null;
            allow_rebase_merge?: boolean;
            template_repository?: ({
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                use_squash_pr_title_as_default?: boolean;
                squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
            }) | null;
            temp_clone_token?: string;
            allow_squash_merge?: boolean;
            allow_auto_merge?: boolean;
            delete_branch_on_merge?: boolean;
            allow_update_branch?: boolean;
            use_squash_pr_title_as_default?: boolean;
            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
            allow_merge_commit?: boolean;
            allow_forking?: boolean;
            web_commit_signoff_required?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
            starred_at?: string;
            anonymous_access_enabled?: boolean;
        };
        "installation-token": {
            token: string;
            expires_at: string;
            permissions?: components["schemas"]["app-permissions"];
            repository_selection?: "all" | "selected";
            repositories?: components["schemas"]["repository"][];
            single_file?: string;
            has_multiple_single_files?: boolean;
            single_file_paths?: string[];
        };
        "scoped-installation": {
            permissions: components["schemas"]["app-permissions"];
            repository_selection: "all" | "selected";
            single_file_name: string | null;
            has_multiple_single_files?: boolean;
            single_file_paths?: string[];
            repositories_url: string;
            account: components["schemas"]["simple-user"];
        };
        authorization: {
            id: number;
            url: string;
            scopes: string[] | null;
            token: string;
            token_last_eight: string | null;
            hashed_token: string | null;
            app: {
                client_id: string;
                name: string;
                url: string;
            };
            note: string | null;
            note_url: string | null;
            updated_at: string;
            created_at: string;
            fingerprint: string | null;
            user?: null | components["schemas"]["simple-user"];
            installation?: null | components["schemas"]["scoped-installation"];
            expires_at: string | null;
        };
        "code-of-conduct": {
            key: string;
            name: string;
            url: string;
            body?: string;
            html_url: string | null;
        };
        readonly "alert-number": number;
        readonly "dependabot-alert-package": {
            readonly ecosystem: string;
            readonly name: string;
        };
        readonly "dependabot-alert-security-vulnerability": {
            readonly package: components["schemas"]["dependabot-alert-package"];
            readonly severity: "low" | "medium" | "high" | "critical";
            readonly vulnerable_version_range: string;
            readonly first_patched_version: {
                readonly identifier: string;
            } | null;
        };
        readonly "dependabot-alert-security-advisory": {
            readonly ghsa_id: string;
            readonly cve_id: string | null;
            readonly summary: string;
            readonly description: string;
            readonly vulnerabilities: readonly components["schemas"]["dependabot-alert-security-vulnerability"][];
            readonly severity: "low" | "medium" | "high" | "critical";
            readonly cvss: {
                readonly score: number;
                readonly vector_string: string | null;
            };
            readonly cwes: readonly {
                readonly cwe_id: string;
                readonly name: string;
            }[];
            readonly identifiers: readonly ({
                readonly type: "CVE" | "GHSA";
                readonly value: string;
            })[];
            readonly references: readonly {
                readonly url: string;
            }[];
            readonly published_at: string;
            readonly updated_at: string;
            readonly withdrawn_at: string | null;
        };
        readonly "alert-url": string;
        readonly "alert-html-url": string;
        readonly "alert-created-at": string;
        readonly "alert-updated-at": string;
        readonly "alert-dismissed-at": string | null;
        readonly "alert-fixed-at": string | null;
        readonly "alert-auto-dismissed-at": string | null;
        "simple-repository": {
            id: number;
            node_id: string;
            name: string;
            full_name: string;
            owner: components["schemas"]["simple-user"];
            private: boolean;
            html_url: string;
            description: string | null;
            fork: boolean;
            url: string;
            archive_url: string;
            assignees_url: string;
            blobs_url: string;
            branches_url: string;
            collaborators_url: string;
            comments_url: string;
            commits_url: string;
            compare_url: string;
            contents_url: string;
            contributors_url: string;
            deployments_url: string;
            downloads_url: string;
            events_url: string;
            forks_url: string;
            git_commits_url: string;
            git_refs_url: string;
            git_tags_url: string;
            issue_comment_url: string;
            issue_events_url: string;
            issues_url: string;
            keys_url: string;
            labels_url: string;
            languages_url: string;
            merges_url: string;
            milestones_url: string;
            notifications_url: string;
            pulls_url: string;
            releases_url: string;
            stargazers_url: string;
            statuses_url: string;
            subscribers_url: string;
            subscription_url: string;
            tags_url: string;
            teams_url: string;
            trees_url: string;
            hooks_url: string;
        };
        "dependabot-alert-with-repository": {
            number: components["schemas"]["alert-number"];
            state: "auto_dismissed" | "dismissed" | "fixed" | "open";
            dependency: {
                readonly package?: components["schemas"]["dependabot-alert-package"];
                readonly manifest_path?: string;
                readonly scope?: "development" | "runtime" | null;
            };
            security_advisory: components["schemas"]["dependabot-alert-security-advisory"];
            security_vulnerability: components["schemas"]["dependabot-alert-security-vulnerability"];
            url: components["schemas"]["alert-url"];
            html_url: components["schemas"]["alert-html-url"];
            created_at: components["schemas"]["alert-created-at"];
            updated_at: components["schemas"]["alert-updated-at"];
            dismissed_at: components["schemas"]["alert-dismissed-at"];
            dismissed_by: null | components["schemas"]["simple-user"];
            dismissed_reason: "fix_started" | "inaccurate" | "no_bandwidth" | "not_used" | "tolerable_risk" | null;
            dismissed_comment: string | null;
            fixed_at: components["schemas"]["alert-fixed-at"];
            auto_dismissed_at?: components["schemas"]["alert-auto-dismissed-at"];
            repository: components["schemas"]["simple-repository"];
        };
        "secret-scanning-alert-state": "open" | "resolved";
        "secret-scanning-alert-resolution": "false_positive" | "wont_fix" | "revoked" | "used_in_tests" | null;
        "organization-secret-scanning-alert": {
            number?: components["schemas"]["alert-number"];
            created_at?: components["schemas"]["alert-created-at"];
            updated_at?: null | components["schemas"]["alert-updated-at"];
            url?: components["schemas"]["alert-url"];
            html_url?: components["schemas"]["alert-html-url"];
            locations_url?: string;
            state?: components["schemas"]["secret-scanning-alert-state"];
            resolution?: components["schemas"]["secret-scanning-alert-resolution"];
            resolved_at?: string | null;
            resolved_by?: null | components["schemas"]["simple-user"];
            secret_type?: string;
            secret_type_display_name?: string;
            secret?: string;
            repository?: components["schemas"]["simple-repository"];
            push_protection_bypassed?: boolean | null;
            push_protection_bypassed_by?: null | components["schemas"]["simple-user"];
            push_protection_bypassed_at?: string | null;
            resolution_comment?: string | null;
        };
        actor: {
            id: number;
            login: string;
            display_login?: string;
            gravatar_id: string | null;
            url: string;
            avatar_url: string;
        };
        milestone: {
            url: string;
            html_url: string;
            labels_url: string;
            id: number;
            node_id: string;
            number: number;
            state: "open" | "closed";
            title: string;
            description: string | null;
            creator: null | components["schemas"]["simple-user"];
            open_issues: number;
            closed_issues: number;
            created_at: string;
            updated_at: string;
            closed_at: string | null;
            due_on: string | null;
        };
        "author-association": "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        "reaction-rollup": {
            url: string;
            total_count: number;
            "+1": number;
            "-1": number;
            laugh: number;
            confused: number;
            heart: number;
            hooray: number;
            eyes: number;
            rocket: number;
        };
        issue: {
            id: number;
            node_id: string;
            url: string;
            repository_url: string;
            labels_url: string;
            comments_url: string;
            events_url: string;
            html_url: string;
            number: number;
            state: string;
            state_reason?: "completed" | "reopened" | "not_planned" | null;
            title: string;
            body?: string | null;
            user: null | components["schemas"]["simple-user"];
            labels: (OneOf<[
                string,
                {
                    id?: number;
                    node_id?: string;
                    url?: string;
                    name?: string;
                    description?: string | null;
                    color?: string | null;
                    default?: boolean;
                }
            ]>)[];
            assignee: null | components["schemas"]["simple-user"];
            assignees?: components["schemas"]["simple-user"][] | null;
            milestone: null | components["schemas"]["milestone"];
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
                merged_at?: string | null;
                diff_url: string | null;
                html_url: string | null;
                patch_url: string | null;
                url: string | null;
            };
            closed_at: string | null;
            created_at: string;
            updated_at: string;
            draft?: boolean;
            closed_by?: null | components["schemas"]["simple-user"];
            body_html?: string;
            body_text?: string;
            timeline_url?: string;
            repository?: components["schemas"]["repository"];
            performed_via_github_app?: null | components["schemas"]["integration"];
            author_association: components["schemas"]["author-association"];
            reactions?: components["schemas"]["reaction-rollup"];
        };
        "issue-comment": {
            id: number;
            node_id: string;
            url: string;
            body?: string;
            body_text?: string;
            body_html?: string;
            html_url: string;
            user: null | components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            issue_url: string;
            author_association: components["schemas"]["author-association"];
            performed_via_github_app?: null | components["schemas"]["integration"];
            reactions?: components["schemas"]["reaction-rollup"];
        };
        event: {
            id: string;
            type: string | null;
            actor: components["schemas"]["actor"];
            repo: {
                id: number;
                name: string;
                url: string;
            };
            org?: components["schemas"]["actor"];
            payload: {
                action?: string;
                issue?: components["schemas"]["issue"];
                comment?: components["schemas"]["issue-comment"];
                pages?: ({
                    page_name?: string;
                    title?: string;
                    summary?: string | null;
                    action?: string;
                    sha?: string;
                    html_url?: string;
                })[];
            };
            public: boolean;
            created_at: string | null;
        };
        "link-with-type": {
            href: string;
            type: string;
        };
        feed: {
            timeline_url: string;
            user_url: string;
            current_user_public_url?: string;
            current_user_url?: string;
            current_user_actor_url?: string;
            current_user_organization_url?: string;
            current_user_organization_urls?: string[];
            security_advisories_url?: string;
            repository_discussions_url?: string;
            repository_discussions_category_url?: string;
            _links: {
                timeline: components["schemas"]["link-with-type"];
                user: components["schemas"]["link-with-type"];
                security_advisories?: components["schemas"]["link-with-type"];
                current_user?: components["schemas"]["link-with-type"];
                current_user_public?: components["schemas"]["link-with-type"];
                current_user_actor?: components["schemas"]["link-with-type"];
                current_user_organization?: components["schemas"]["link-with-type"];
                current_user_organizations?: components["schemas"]["link-with-type"][];
                repository_discussions?: components["schemas"]["link-with-type"];
                repository_discussions_category?: components["schemas"]["link-with-type"];
            };
        };
        "base-gist": {
            url: string;
            forks_url: string;
            commits_url: string;
            id: string;
            node_id: string;
            git_pull_url: string;
            git_push_url: string;
            html_url: string;
            files: {
                [key: string]: {
                    filename?: string;
                    type?: string;
                    language?: string;
                    raw_url?: string;
                    size?: number;
                };
            };
            public: boolean;
            created_at: string;
            updated_at: string;
            description: string | null;
            comments: number;
            user: null | components["schemas"]["simple-user"];
            comments_url: string;
            owner?: components["schemas"]["simple-user"];
            truncated?: boolean;
            forks?: unknown[];
            history?: unknown[];
        };
        "public-user": {
            login: string;
            id: number;
            node_id: string;
            avatar_url: string;
            gravatar_id: string | null;
            url: string;
            html_url: string;
            followers_url: string;
            following_url: string;
            gists_url: string;
            starred_url: string;
            subscriptions_url: string;
            organizations_url: string;
            repos_url: string;
            events_url: string;
            received_events_url: string;
            type: string;
            site_admin: boolean;
            name: string | null;
            company: string | null;
            blog: string | null;
            location: string | null;
            email: string | null;
            hireable: boolean | null;
            bio: string | null;
            twitter_username?: string | null;
            public_repos: number;
            public_gists: number;
            followers: number;
            following: number;
            created_at: string;
            updated_at: string;
            plan?: {
                collaborators: number;
                name: string;
                space: number;
                private_repos: number;
            };
            suspended_at?: string | null;
            private_gists?: number;
            total_private_repos?: number;
            owned_private_repos?: number;
            disk_usage?: number;
            collaborators?: number;
        };
        "gist-history": {
            user?: null | components["schemas"]["simple-user"];
            version?: string;
            committed_at?: string;
            change_status?: {
                total?: number;
                additions?: number;
                deletions?: number;
            };
            url?: string;
        };
        "gist-simple": {
            forks?: {
                id?: string;
                url?: string;
                user?: components["schemas"]["public-user"];
                created_at?: string;
                updated_at?: string;
            }[] | null;
            history?: components["schemas"]["gist-history"][] | null;
            fork_of?: ({
                url: string;
                forks_url: string;
                commits_url: string;
                id: string;
                node_id: string;
                git_pull_url: string;
                git_push_url: string;
                html_url: string;
                files: {
                    [key: string]: {
                        filename?: string;
                        type?: string;
                        language?: string;
                        raw_url?: string;
                        size?: number;
                    };
                };
                public: boolean;
                created_at: string;
                updated_at: string;
                description: string | null;
                comments: number;
                user: null | components["schemas"]["simple-user"];
                comments_url: string;
                owner?: null | components["schemas"]["simple-user"];
                truncated?: boolean;
                forks?: unknown[];
                history?: unknown[];
            }) | null;
            url?: string;
            forks_url?: string;
            commits_url?: string;
            id?: string;
            node_id?: string;
            git_pull_url?: string;
            git_push_url?: string;
            html_url?: string;
            files?: {
                [key: string]: {
                    filename?: string;
                    type?: string;
                    language?: string;
                    raw_url?: string;
                    size?: number;
                    truncated?: boolean;
                    content?: string;
                } | null;
            };
            public?: boolean;
            created_at?: string;
            updated_at?: string;
            description?: string | null;
            comments?: number;
            user?: string | null;
            comments_url?: string;
            owner?: components["schemas"]["simple-user"];
            truncated?: boolean;
        };
        "gist-comment": {
            id: number;
            node_id: string;
            url: string;
            body: string;
            user: null | components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            author_association: components["schemas"]["author-association"];
        };
        "gist-commit": {
            url: string;
            version: string;
            user: null | components["schemas"]["simple-user"];
            change_status: {
                total?: number;
                additions?: number;
                deletions?: number;
            };
            committed_at: string;
        };
        "gitignore-template": {
            name: string;
            source: string;
        };
        license: {
            key: string;
            name: string;
            spdx_id: string | null;
            url: string | null;
            node_id: string;
            html_url: string;
            description: string;
            implementation: string;
            permissions: string[];
            conditions: string[];
            limitations: string[];
            body: string;
            featured: boolean;
        };
        "marketplace-listing-plan": {
            url: string;
            accounts_url: string;
            id: number;
            number: number;
            name: string;
            description: string;
            monthly_price_in_cents: number;
            yearly_price_in_cents: number;
            price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
            has_free_trial: boolean;
            unit_name: string | null;
            state: string;
            bullets: string[];
        };
        "marketplace-purchase": {
            url: string;
            type: string;
            id: number;
            login: string;
            organization_billing_email?: string;
            email?: string | null;
            marketplace_pending_change?: ({
                is_installed?: boolean;
                effective_date?: string;
                unit_count?: number | null;
                id?: number;
                plan?: components["schemas"]["marketplace-listing-plan"];
            }) | null;
            marketplace_purchase: {
                billing_cycle?: string;
                next_billing_date?: string | null;
                is_installed?: boolean;
                unit_count?: number | null;
                on_free_trial?: boolean;
                free_trial_ends_on?: string | null;
                updated_at?: string;
                plan?: components["schemas"]["marketplace-listing-plan"];
            };
        };
        "api-overview": {
            verifiable_password_authentication: boolean;
            ssh_key_fingerprints?: {
                SHA256_RSA?: string;
                SHA256_DSA?: string;
                SHA256_ECDSA?: string;
                SHA256_ED25519?: string;
            };
            ssh_keys?: string[];
            hooks?: string[];
            github_enterprise_importer?: string[];
            web?: string[];
            api?: string[];
            git?: string[];
            packages?: string[];
            pages?: string[];
            importer?: string[];
            actions?: string[];
            dependabot?: string[];
            domains?: {
                website?: string[];
                codespaces?: string[];
                copilot?: string[];
                packages?: string[];
            };
        };
        "security-and-analysis": ({
            advanced_security?: {
                status?: "enabled" | "disabled";
            };
            dependabot_security_updates?: {
                status?: "enabled" | "disabled";
            };
            secret_scanning?: {
                status?: "enabled" | "disabled";
            };
            secret_scanning_push_protection?: {
                status?: "enabled" | "disabled";
            };
        }) | null;
        "minimal-repository": {
            id: number;
            node_id: string;
            name: string;
            full_name: string;
            owner: components["schemas"]["simple-user"];
            private: boolean;
            html_url: string;
            description: string | null;
            fork: boolean;
            url: string;
            archive_url: string;
            assignees_url: string;
            blobs_url: string;
            branches_url: string;
            collaborators_url: string;
            comments_url: string;
            commits_url: string;
            compare_url: string;
            contents_url: string;
            contributors_url: string;
            deployments_url: string;
            downloads_url: string;
            events_url: string;
            forks_url: string;
            git_commits_url: string;
            git_refs_url: string;
            git_tags_url: string;
            git_url?: string;
            issue_comment_url: string;
            issue_events_url: string;
            issues_url: string;
            keys_url: string;
            labels_url: string;
            languages_url: string;
            merges_url: string;
            milestones_url: string;
            notifications_url: string;
            pulls_url: string;
            releases_url: string;
            ssh_url?: string;
            stargazers_url: string;
            statuses_url: string;
            subscribers_url: string;
            subscription_url: string;
            tags_url: string;
            teams_url: string;
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            has_discussions?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            pushed_at?: string | null;
            created_at?: string | null;
            updated_at?: string | null;
            permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
            };
            role_name?: string;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            code_of_conduct?: components["schemas"]["code-of-conduct"];
            license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
            } | null;
            forks?: number;
            open_issues?: number;
            watchers?: number;
            allow_forking?: boolean;
            web_commit_signoff_required?: boolean;
            security_and_analysis?: components["schemas"]["security-and-analysis"];
        };
        thread: {
            id: string;
            repository: components["schemas"]["minimal-repository"];
            subject: {
                title: string;
                url: string;
                latest_comment_url: string;
                type: string;
            };
            reason: string;
            unread: boolean;
            updated_at: string;
            last_read_at: string | null;
            url: string;
            subscription_url: string;
        };
        "thread-subscription": {
            subscribed: boolean;
            ignored: boolean;
            reason: string | null;
            created_at: string | null;
            url: string;
            thread_url?: string;
            repository_url?: string;
        };
        "organization-simple": {
            login: string;
            id: number;
            node_id: string;
            url: string;
            repos_url: string;
            events_url: string;
            hooks_url: string;
            issues_url: string;
            members_url: string;
            public_members_url: string;
            avatar_url: string;
            description: string | null;
        };
        "organization-full": {
            login: string;
            id: number;
            node_id: string;
            url: string;
            repos_url: string;
            events_url: string;
            hooks_url: string;
            issues_url: string;
            members_url: string;
            public_members_url: string;
            avatar_url: string;
            description: string | null;
            name?: string;
            company?: string;
            blog?: string;
            location?: string;
            email?: string;
            twitter_username?: string | null;
            is_verified?: boolean;
            has_organization_projects: boolean;
            has_repository_projects: boolean;
            public_repos: number;
            public_gists: number;
            followers: number;
            following: number;
            html_url: string;
            type: string;
            total_private_repos?: number;
            owned_private_repos?: number;
            private_gists?: number | null;
            disk_usage?: number | null;
            collaborators?: number | null;
            billing_email?: string | null;
            plan?: {
                name: string;
                space: number;
                private_repos: number;
                filled_seats?: number;
                seats?: number;
            };
            default_repository_permission?: string | null;
            members_can_create_repositories?: boolean | null;
            two_factor_requirement_enabled?: boolean | null;
            members_allowed_repository_creation_type?: string;
            members_can_create_public_repositories?: boolean;
            members_can_create_private_repositories?: boolean;
            members_can_create_internal_repositories?: boolean;
            members_can_create_pages?: boolean;
            members_can_create_public_pages?: boolean;
            members_can_create_private_pages?: boolean;
            members_can_fork_private_repositories?: boolean | null;
            web_commit_signoff_required?: boolean;
            advanced_security_enabled_for_new_repositories?: boolean;
            dependabot_alerts_enabled_for_new_repositories?: boolean;
            dependabot_security_updates_enabled_for_new_repositories?: boolean;
            dependency_graph_enabled_for_new_repositories?: boolean;
            secret_scanning_enabled_for_new_repositories?: boolean;
            secret_scanning_push_protection_enabled_for_new_repositories?: boolean;
            secret_scanning_push_protection_custom_link_enabled?: boolean;
            secret_scanning_push_protection_custom_link?: string | null;
            created_at: string;
            updated_at: string;
            archived_at: string | null;
        };
        "actions-cache-usage-org-enterprise": {
            total_active_caches_count: number;
            total_active_caches_size_in_bytes: number;
        };
        "actions-cache-usage-by-repository": {
            full_name: string;
            active_caches_size_in_bytes: number;
            active_caches_count: number;
        };
        "oidc-custom-sub": {
            include_claim_keys: string[];
        };
        "empty-object": Record<string, never>;
        "enabled-repositories": "all" | "none" | "selected";
        "allowed-actions": "all" | "local_only" | "selected";
        "selected-actions-url": string;
        "actions-organization-permissions": {
            enabled_repositories: components["schemas"]["enabled-repositories"];
            selected_repositories_url?: string;
            allowed_actions?: components["schemas"]["allowed-actions"];
            selected_actions_url?: components["schemas"]["selected-actions-url"];
        };
        "selected-actions": {
            github_owned_allowed?: boolean;
            verified_allowed?: boolean;
            patterns_allowed?: string[];
        };
        "actions-default-workflow-permissions": "read" | "write";
        "actions-can-approve-pull-request-reviews": boolean;
        "actions-get-default-workflow-permissions": {
            default_workflow_permissions: components["schemas"]["actions-default-workflow-permissions"];
            can_approve_pull_request_reviews: components["schemas"]["actions-can-approve-pull-request-reviews"];
        };
        "actions-set-default-workflow-permissions": {
            default_workflow_permissions?: components["schemas"]["actions-default-workflow-permissions"];
            can_approve_pull_request_reviews?: components["schemas"]["actions-can-approve-pull-request-reviews"];
        };
        "runner-label": {
            id?: number;
            name: string;
            type?: "read-only" | "custom";
        };
        runner: {
            id: number;
            runner_group_id?: number;
            name: string;
            os: string;
            status: string;
            busy: boolean;
            labels: components["schemas"]["runner-label"][];
        };
        "runner-application": {
            os: string;
            architecture: string;
            download_url: string;
            filename: string;
            temp_download_token?: string;
            sha256_checksum?: string;
        };
        "authentication-token": {
            token: string;
            expires_at: string;
            permissions?: Record<string, never>;
            repositories?: components["schemas"]["repository"][];
            single_file?: string | null;
            repository_selection?: "all" | "selected";
        };
        "organization-actions-secret": {
            name: string;
            created_at: string;
            updated_at: string;
            visibility: "all" | "private" | "selected";
            selected_repositories_url?: string;
        };
        "actions-public-key": {
            key_id: string;
            key: string;
            id?: number;
            url?: string;
            title?: string;
            created_at?: string;
        };
        "organization-actions-variable": {
            name: string;
            value: string;
            created_at: string;
            updated_at: string;
            visibility: "all" | "private" | "selected";
            selected_repositories_url?: string;
        };
        "code-scanning-analysis-tool-name": string;
        "code-scanning-analysis-tool-guid": string | null;
        "code-scanning-alert-state-query": "open" | "closed" | "dismissed" | "fixed";
        "code-scanning-alert-severity": "critical" | "high" | "medium" | "low" | "warning" | "note" | "error";
        readonly "alert-instances-url": string;
        "code-scanning-alert-state": "open" | "dismissed" | "fixed";
        "code-scanning-alert-dismissed-reason": null | "false positive" | "won't fix" | "used in tests";
        "code-scanning-alert-dismissed-comment": string | null;
        "code-scanning-alert-rule": {
            id?: string | null;
            name?: string;
            severity?: "none" | "note" | "warning" | "error" | null;
            security_severity_level?: "low" | "medium" | "high" | "critical" | null;
            description?: string;
            full_description?: string;
            tags?: string[] | null;
            help?: string | null;
            help_uri?: string | null;
        };
        "code-scanning-analysis-tool-version": string | null;
        "code-scanning-analysis-tool": {
            name?: components["schemas"]["code-scanning-analysis-tool-name"];
            version?: components["schemas"]["code-scanning-analysis-tool-version"];
            guid?: components["schemas"]["code-scanning-analysis-tool-guid"];
        };
        "code-scanning-ref": string;
        "code-scanning-analysis-analysis-key": string;
        "code-scanning-alert-environment": string;
        "code-scanning-analysis-category": string;
        "code-scanning-alert-location": {
            path?: string;
            start_line?: number;
            end_line?: number;
            start_column?: number;
            end_column?: number;
        };
        "code-scanning-alert-classification": "source" | "generated" | "test" | "library" | null;
        "code-scanning-alert-instance": {
            ref?: components["schemas"]["code-scanning-ref"];
            analysis_key?: components["schemas"]["code-scanning-analysis-analysis-key"];
            environment?: components["schemas"]["code-scanning-alert-environment"];
            category?: components["schemas"]["code-scanning-analysis-category"];
            state?: components["schemas"]["code-scanning-alert-state"];
            commit_sha?: string;
            message?: {
                text?: string;
            };
            location?: components["schemas"]["code-scanning-alert-location"];
            html_url?: string;
            classifications?: components["schemas"]["code-scanning-alert-classification"][];
        };
        "code-scanning-organization-alert-items": {
            number: components["schemas"]["alert-number"];
            created_at: components["schemas"]["alert-created-at"];
            updated_at?: components["schemas"]["alert-updated-at"];
            url: components["schemas"]["alert-url"];
            html_url: components["schemas"]["alert-html-url"];
            instances_url: components["schemas"]["alert-instances-url"];
            state: components["schemas"]["code-scanning-alert-state"];
            fixed_at?: components["schemas"]["alert-fixed-at"];
            dismissed_by: null | components["schemas"]["simple-user"];
            dismissed_at: components["schemas"]["alert-dismissed-at"];
            dismissed_reason: components["schemas"]["code-scanning-alert-dismissed-reason"];
            dismissed_comment?: components["schemas"]["code-scanning-alert-dismissed-comment"];
            rule: components["schemas"]["code-scanning-alert-rule"];
            tool: components["schemas"]["code-scanning-analysis-tool"];
            most_recent_instance: components["schemas"]["code-scanning-alert-instance"];
            repository: components["schemas"]["simple-repository"];
        };
        "codespace-machine": {
            name: string;
            display_name: string;
            operating_system: string;
            storage_in_bytes: number;
            memory_in_bytes: number;
            cpus: number;
            prebuild_availability: "none" | "ready" | "in_progress" | null;
        };
        codespace: {
            id: number;
            name: string;
            display_name?: string | null;
            environment_id: string | null;
            owner: components["schemas"]["simple-user"];
            billable_owner: components["schemas"]["simple-user"];
            repository: components["schemas"]["minimal-repository"];
            machine: null | components["schemas"]["codespace-machine"];
            devcontainer_path?: string | null;
            prebuild: boolean | null;
            created_at: string;
            updated_at: string;
            last_used_at: string;
            state: "Unknown" | "Created" | "Queued" | "Provisioning" | "Available" | "Awaiting" | "Unavailable" | "Deleted" | "Moved" | "Shutdown" | "Archived" | "Starting" | "ShuttingDown" | "Failed" | "Exporting" | "Updating" | "Rebuilding";
            url: string;
            git_status: {
                ahead?: number;
                behind?: number;
                has_unpushed_changes?: boolean;
                has_uncommitted_changes?: boolean;
                ref?: string;
            };
            location: "EastUs" | "SouthEastAsia" | "WestEurope" | "WestUs2";
            idle_timeout_minutes: number | null;
            web_url: string;
            machines_url: string;
            start_url: string;
            stop_url: string;
            publish_url?: string | null;
            pulls_url: string | null;
            recent_folders: string[];
            runtime_constraints?: {
                allowed_port_privacy_settings?: string[] | null;
            };
            pending_operation?: boolean | null;
            pending_operation_disabled_reason?: string | null;
            idle_timeout_notice?: string | null;
            retention_period_minutes?: number | null;
            retention_expires_at?: string | null;
            last_known_stop_notice?: string | null;
        };
        "codespaces-org-secret": {
            name: string;
            created_at: string;
            updated_at: string;
            visibility: "all" | "private" | "selected";
            selected_repositories_url?: string;
        };
        "codespaces-public-key": {
            key_id: string;
            key: string;
            id?: number;
            url?: string;
            title?: string;
            created_at?: string;
        };
        "copilot-seat-breakdown": {
            total?: number;
            added_this_cycle?: number;
            pending_cancellation?: number;
            pending_invitation?: number;
            active_this_cycle?: number;
            inactive_this_cycle?: number;
        };
        "copilot-organization-details": {
            seat_breakdown: components["schemas"]["copilot-seat-breakdown"];
            public_code_suggestions: "allow" | "block" | "unconfigured" | "unknown";
            seat_management_setting: "assign_all" | "assign_selected" | "disabled";
            [key: string]: unknown;
        };
        "team-simple": {
            id: number;
            node_id: string;
            url: string;
            members_url: string;
            name: string;
            description: string | null;
            permission: string;
            privacy?: string;
            notification_setting?: string;
            html_url: string;
            repositories_url: string;
            slug: string;
            ldap_dn?: string;
        };
        team: {
            id: number;
            node_id: string;
            name: string;
            slug: string;
            description: string | null;
            privacy?: string;
            notification_setting?: string;
            permission: string;
            permissions?: {
                pull: boolean;
                triage: boolean;
                push: boolean;
                maintain: boolean;
                admin: boolean;
            };
            url: string;
            html_url: string;
            members_url: string;
            repositories_url: string;
            parent: null | components["schemas"]["team-simple"];
        };
        organization: {
            login: string;
            url: string;
            id: number;
            node_id: string;
            repos_url: string;
            events_url: string;
            hooks_url: string;
            issues_url: string;
            members_url: string;
            public_members_url: string;
            avatar_url: string;
            description: string | null;
            blog?: string;
            html_url: string;
            name?: string;
            company?: string;
            location?: string;
            email?: string;
            has_organization_projects: boolean;
            has_repository_projects: boolean;
            is_verified?: boolean;
            public_repos: number;
            public_gists: number;
            followers: number;
            following: number;
            type: string;
            created_at: string;
            updated_at: string;
            plan?: {
                name?: string;
                space?: number;
                private_repos?: number;
                filled_seats?: number;
                seats?: number;
            };
        };
        "copilot-seat-details": {
            assignee: {
                [key: string]: unknown;
            } & (components["schemas"]["simple-user"] | components["schemas"]["team"] | components["schemas"]["organization"]);
            assigning_team?: components["schemas"]["team"] | null | Record<string, never>;
            pending_cancellation_date?: string | null;
            last_activity_at?: string | null;
            last_activity_editor?: string | null;
            created_at: string;
            updated_at?: string;
        };
        "organization-dependabot-secret": {
            name: string;
            created_at: string;
            updated_at: string;
            visibility: "all" | "private" | "selected";
            selected_repositories_url?: string;
        };
        "dependabot-public-key": {
            key_id: string;
            key: string;
        };
        package: {
            id: number;
            name: string;
            package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container";
            url: string;
            html_url: string;
            version_count: number;
            visibility: "private" | "public";
            owner?: null | components["schemas"]["simple-user"];
            repository?: null | components["schemas"]["minimal-repository"];
            created_at: string;
            updated_at: string;
        };
        "organization-invitation": {
            id: number;
            login: string | null;
            email: string | null;
            role: string;
            created_at: string;
            failed_at?: string | null;
            failed_reason?: string | null;
            inviter: components["schemas"]["simple-user"];
            team_count: number;
            node_id: string;
            invitation_teams_url: string;
            invitation_source?: string;
        };
        "org-hook": {
            id: number;
            url: string;
            ping_url: string;
            deliveries_url?: string;
            name: string;
            events: string[];
            active: boolean;
            config: {
                url?: string;
                insecure_ssl?: string;
                content_type?: string;
                secret?: string;
            };
            updated_at: string;
            created_at: string;
            type: string;
        };
        "interaction-group": "existing_users" | "contributors_only" | "collaborators_only";
        "interaction-limit-response": {
            limit: components["schemas"]["interaction-group"];
            origin: string;
            expires_at: string;
        };
        "interaction-expiry": "one_day" | "three_days" | "one_week" | "one_month" | "six_months";
        "interaction-limit": {
            limit: components["schemas"]["interaction-group"];
            expiry?: components["schemas"]["interaction-expiry"];
        };
        "org-membership": {
            url: string;
            state: "active" | "pending";
            role: "admin" | "member" | "billing_manager";
            organization_url: string;
            organization: components["schemas"]["organization-simple"];
            user: null | components["schemas"]["simple-user"];
            permissions?: {
                can_create_repository: boolean;
            };
        };
        migration: {
            id: number;
            owner: null | components["schemas"]["simple-user"];
            guid: string;
            state: string;
            lock_repositories: boolean;
            exclude_metadata: boolean;
            exclude_git_data: boolean;
            exclude_attachments: boolean;
            exclude_releases: boolean;
            exclude_owner_projects: boolean;
            org_metadata_only: boolean;
            repositories: components["schemas"]["repository"][];
            url: string;
            created_at: string;
            updated_at: string;
            node_id: string;
            archive_url?: string;
            exclude?: string[];
        };
        "package-version": {
            id: number;
            name: string;
            url: string;
            package_html_url: string;
            html_url?: string;
            license?: string;
            description?: string;
            created_at: string;
            updated_at: string;
            deleted_at?: string;
            metadata?: {
                package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container";
                container?: {
                    tags: string[];
                };
                docker?: {
                    tag?: string[];
                };
            };
        };
        "organization-programmatic-access-grant-request": {
            id: number;
            reason: string | null;
            owner: components["schemas"]["simple-user"];
            repository_selection: "none" | "all" | "subset";
            repositories_url: string;
            permissions: {
                organization?: {
                    [key: string]: string;
                };
                repository?: {
                    [key: string]: string;
                };
                other?: {
                    [key: string]: string;
                };
            };
            created_at: string;
            token_expired: boolean;
            token_expires_at: string | null;
            token_last_used_at: string | null;
        };
        "organization-programmatic-access-grant": {
            id: number;
            owner: components["schemas"]["simple-user"];
            repository_selection: "none" | "all" | "subset";
            repositories_url: string;
            permissions: {
                organization?: {
                    [key: string]: string;
                };
                repository?: {
                    [key: string]: string;
                };
                other?: {
                    [key: string]: string;
                };
            };
            access_granted_at: string;
            token_expired: boolean;
            token_expires_at: string | null;
            token_last_used_at: string | null;
        };
        project: {
            owner_url: string;
            url: string;
            html_url: string;
            columns_url: string;
            id: number;
            node_id: string;
            name: string;
            body: string | null;
            number: number;
            state: string;
            creator: null | components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            organization_permission?: "read" | "write" | "admin" | "none";
            private?: boolean;
        };
        "repository-rule-enforcement": "disabled" | "active" | "evaluate";
        "repository-ruleset-bypass-actor": {
            actor_id: number;
            actor_type: "RepositoryRole" | "Team" | "Integration" | "OrganizationAdmin";
            bypass_mode: "always" | "pull_request";
        };
        "repository-ruleset-conditions": {
            ref_name?: {
                include?: string[];
                exclude?: string[];
            };
        };
        "repository-ruleset-conditions-repository-name-target": {
            repository_name: {
                include?: string[];
                exclude?: string[];
                protected?: boolean;
            };
        };
        "repository-ruleset-conditions-repository-id-target": {
            repository_id: {
                repository_ids?: number[];
            };
        };
        "org-ruleset-conditions": (components["schemas"]["repository-ruleset-conditions"] & components["schemas"]["repository-ruleset-conditions-repository-name-target"]) | (components["schemas"]["repository-ruleset-conditions"] & components["schemas"]["repository-ruleset-conditions-repository-id-target"]);
        "repository-rule-creation": {
            type: "creation";
        };
        "repository-rule-update": {
            type: "update";
            parameters?: {
                update_allows_fetch_and_merge: boolean;
            };
        };
        "repository-rule-deletion": {
            type: "deletion";
        };
        "repository-rule-required-linear-history": {
            type: "required_linear_history";
        };
        "repository-rule-required-deployments": {
            type: "required_deployments";
            parameters?: {
                required_deployment_environments: string[];
            };
        };
        "repository-rule-required-signatures": {
            type: "required_signatures";
        };
        "repository-rule-pull-request": {
            type: "pull_request";
            parameters?: {
                dismiss_stale_reviews_on_push: boolean;
                require_code_owner_review: boolean;
                require_last_push_approval: boolean;
                required_approving_review_count: number;
                required_review_thread_resolution: boolean;
            };
        };
        "repository-rule-params-status-check-configuration": {
            context: string;
            integration_id?: number;
        };
        "repository-rule-required-status-checks": {
            type: "required_status_checks";
            parameters?: {
                required_status_checks: components["schemas"]["repository-rule-params-status-check-configuration"][];
                strict_required_status_checks_policy: boolean;
            };
        };
        "repository-rule-non-fast-forward": {
            type: "non_fast_forward";
        };
        "repository-rule-commit-message-pattern": {
            type: "commit_message_pattern";
            parameters?: {
                name?: string;
                negate?: boolean;
                operator: "starts_with" | "ends_with" | "contains" | "regex";
                pattern: string;
            };
        };
        "repository-rule-commit-author-email-pattern": {
            type: "commit_author_email_pattern";
            parameters?: {
                name?: string;
                negate?: boolean;
                operator: "starts_with" | "ends_with" | "contains" | "regex";
                pattern: string;
            };
        };
        "repository-rule-committer-email-pattern": {
            type: "committer_email_pattern";
            parameters?: {
                name?: string;
                negate?: boolean;
                operator: "starts_with" | "ends_with" | "contains" | "regex";
                pattern: string;
            };
        };
        "repository-rule-branch-name-pattern": {
            type: "branch_name_pattern";
            parameters?: {
                name?: string;
                negate?: boolean;
                operator: "starts_with" | "ends_with" | "contains" | "regex";
                pattern: string;
            };
        };
        "repository-rule-tag-name-pattern": {
            type: "tag_name_pattern";
            parameters?: {
                name?: string;
                negate?: boolean;
                operator: "starts_with" | "ends_with" | "contains" | "regex";
                pattern: string;
            };
        };
        "repository-rule": components["schemas"]["repository-rule-creation"] | components["schemas"]["repository-rule-update"] | components["schemas"]["repository-rule-deletion"] | components["schemas"]["repository-rule-required-linear-history"] | components["schemas"]["repository-rule-required-deployments"] | components["schemas"]["repository-rule-required-signatures"] | components["schemas"]["repository-rule-pull-request"] | components["schemas"]["repository-rule-required-status-checks"] | components["schemas"]["repository-rule-non-fast-forward"] | components["schemas"]["repository-rule-commit-message-pattern"] | components["schemas"]["repository-rule-commit-author-email-pattern"] | components["schemas"]["repository-rule-committer-email-pattern"] | components["schemas"]["repository-rule-branch-name-pattern"] | components["schemas"]["repository-rule-tag-name-pattern"];
        "repository-ruleset": {
            id: number;
            name: string;
            target?: "branch" | "tag";
            source_type?: "Repository" | "Organization";
            source: string;
            enforcement: components["schemas"]["repository-rule-enforcement"];
            bypass_actors?: components["schemas"]["repository-ruleset-bypass-actor"][];
            current_user_can_bypass?: "always" | "pull_requests_only" | "never";
            node_id?: string;
            _links?: {
                self?: {
                    href?: string;
                };
                html?: {
                    href?: string;
                };
            };
            conditions?: components["schemas"]["repository-ruleset-conditions"] | components["schemas"]["org-ruleset-conditions"];
            rules?: components["schemas"]["repository-rule"][];
            created_at?: string;
            updated_at?: string;
        };
        "repository-advisory-vulnerability": {
            package: ({
                ecosystem: components["schemas"]["security-advisory-ecosystems"];
                name: string | null;
            }) | null;
            vulnerable_version_range: string | null;
            patched_versions: string | null;
            vulnerable_functions: string[] | null;
        };
        "repository-advisory-credit": {
            user: components["schemas"]["simple-user"];
            type: components["schemas"]["security-advisory-credit-types"];
            state: "accepted" | "declined" | "pending";
        };
        "repository-advisory": {
            ghsa_id: string;
            cve_id: string | null;
            url: string;
            html_url: string;
            summary: string;
            description: string | null;
            severity: "critical" | "high" | "medium" | "low" | null;
            author: null;
            publisher: null;
            identifiers: readonly ({
                type: "CVE" | "GHSA";
                value: string;
            })[];
            state: "published" | "closed" | "withdrawn" | "draft" | "triage";
            created_at: string | null;
            updated_at: string | null;
            published_at: string | null;
            closed_at: string | null;
            withdrawn_at: string | null;
            submission: {
                readonly accepted: boolean;
            } | null;
            vulnerabilities: components["schemas"]["repository-advisory-vulnerability"][] | null;
            cvss: ({
                vector_string: string | null;
                score: number | null;
            }) | null;
            cwes: readonly {
                cwe_id: string;
                name: string;
            }[] | null;
            cwe_ids: string[] | null;
            credits: {
                login?: string;
                type?: components["schemas"]["security-advisory-credit-types"];
            }[] | null;
            credits_detailed: readonly components["schemas"]["repository-advisory-credit"][] | null;
            collaborating_users: components["schemas"]["simple-user"][] | null;
            collaborating_teams: components["schemas"]["team"][] | null;
            private_fork: null;
        };
        "actions-billing-usage": {
            total_minutes_used: number;
            total_paid_minutes_used: number;
            included_minutes: number;
            minutes_used_breakdown: {
                UBUNTU?: number;
                MACOS?: number;
                WINDOWS?: number;
                ubuntu_4_core?: number;
                ubuntu_8_core?: number;
                ubuntu_16_core?: number;
                ubuntu_32_core?: number;
                ubuntu_64_core?: number;
                windows_4_core?: number;
                windows_8_core?: number;
                windows_16_core?: number;
                windows_32_core?: number;
                windows_64_core?: number;
                macos_12_core?: number;
                total?: number;
            };
        };
        "packages-billing-usage": {
            total_gigabytes_bandwidth_used: number;
            total_paid_gigabytes_bandwidth_used: number;
            included_gigabytes_bandwidth: number;
        };
        "combined-billing-usage": {
            days_left_in_billing_cycle: number;
            estimated_paid_storage_for_month: number;
            estimated_storage_for_month: number;
        };
        "team-organization": {
            login: string;
            id: number;
            node_id: string;
            url: string;
            repos_url: string;
            events_url: string;
            hooks_url: string;
            issues_url: string;
            members_url: string;
            public_members_url: string;
            avatar_url: string;
            description: string | null;
            name?: string;
            company?: string;
            blog?: string;
            location?: string;
            email?: string;
            twitter_username?: string | null;
            is_verified?: boolean;
            has_organization_projects: boolean;
            has_repository_projects: boolean;
            public_repos: number;
            public_gists: number;
            followers: number;
            following: number;
            html_url: string;
            created_at: string;
            type: string;
            total_private_repos?: number;
            owned_private_repos?: number;
            private_gists?: number | null;
            disk_usage?: number | null;
            collaborators?: number | null;
            billing_email?: string | null;
            plan?: {
                name: string;
                space: number;
                private_repos: number;
                filled_seats?: number;
                seats?: number;
            };
            default_repository_permission?: string | null;
            members_can_create_repositories?: boolean | null;
            two_factor_requirement_enabled?: boolean | null;
            members_allowed_repository_creation_type?: string;
            members_can_create_public_repositories?: boolean;
            members_can_create_private_repositories?: boolean;
            members_can_create_internal_repositories?: boolean;
            members_can_create_pages?: boolean;
            members_can_create_public_pages?: boolean;
            members_can_create_private_pages?: boolean;
            members_can_fork_private_repositories?: boolean | null;
            web_commit_signoff_required?: boolean;
            updated_at: string;
            archived_at: string | null;
        };
        "team-full": {
            id: number;
            node_id: string;
            url: string;
            html_url: string;
            name: string;
            slug: string;
            description: string | null;
            privacy?: "closed" | "secret";
            notification_setting?: "notifications_enabled" | "notifications_disabled";
            permission: string;
            members_url: string;
            repositories_url: string;
            parent?: null | components["schemas"]["team-simple"];
            members_count: number;
            repos_count: number;
            created_at: string;
            updated_at: string;
            organization: components["schemas"]["team-organization"];
            ldap_dn?: string;
        };
        "team-discussion": {
            author: null | components["schemas"]["simple-user"];
            body: string;
            body_html: string;
            body_version: string;
            comments_count: number;
            comments_url: string;
            created_at: string;
            last_edited_at: string | null;
            html_url: string;
            node_id: string;
            number: number;
            pinned: boolean;
            private: boolean;
            team_url: string;
            title: string;
            updated_at: string;
            url: string;
            reactions?: components["schemas"]["reaction-rollup"];
        };
        "team-discussion-comment": {
            author: null | components["schemas"]["simple-user"];
            body: string;
            body_html: string;
            body_version: string;
            created_at: string;
            last_edited_at: string | null;
            discussion_url: string;
            html_url: string;
            node_id: string;
            number: number;
            updated_at: string;
            url: string;
            reactions?: components["schemas"]["reaction-rollup"];
        };
        reaction: {
            id: number;
            node_id: string;
            user: null | components["schemas"]["simple-user"];
            content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
            created_at: string;
        };
        "team-membership": {
            url: string;
            role: "member" | "maintainer";
            state: "active" | "pending";
        };
        "team-project": {
            owner_url: string;
            url: string;
            html_url: string;
            columns_url: string;
            id: number;
            node_id: string;
            name: string;
            body: string | null;
            number: number;
            state: string;
            creator: components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            organization_permission?: string;
            private?: boolean;
            permissions: {
                read: boolean;
                write: boolean;
                admin: boolean;
            };
        };
        "team-repository": {
            id: number;
            node_id: string;
            name: string;
            full_name: string;
            license: null | components["schemas"]["license-simple"];
            forks: number;
            permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
            };
            role_name?: string;
            owner: null | components["schemas"]["simple-user"];
            private: boolean;
            html_url: string;
            description: string | null;
            fork: boolean;
            url: string;
            archive_url: string;
            assignees_url: string;
            blobs_url: string;
            branches_url: string;
            collaborators_url: string;
            comments_url: string;
            commits_url: string;
            compare_url: string;
            contents_url: string;
            contributors_url: string;
            deployments_url: string;
            downloads_url: string;
            events_url: string;
            forks_url: string;
            git_commits_url: string;
            git_refs_url: string;
            git_tags_url: string;
            git_url: string;
            issue_comment_url: string;
            issue_events_url: string;
            issues_url: string;
            keys_url: string;
            labels_url: string;
            languages_url: string;
            merges_url: string;
            milestones_url: string;
            notifications_url: string;
            pulls_url: string;
            releases_url: string;
            ssh_url: string;
            stargazers_url: string;
            statuses_url: string;
            subscribers_url: string;
            subscription_url: string;
            tags_url: string;
            teams_url: string;
            trees_url: string;
            clone_url: string;
            mirror_url: string | null;
            hooks_url: string;
            svn_url: string;
            homepage: string | null;
            language: string | null;
            forks_count: number;
            stargazers_count: number;
            watchers_count: number;
            size: number;
            default_branch: string;
            open_issues_count: number;
            is_template?: boolean;
            topics?: string[];
            has_issues: boolean;
            has_projects: boolean;
            has_wiki: boolean;
            has_pages: boolean;
            has_downloads: boolean;
            archived: boolean;
            disabled: boolean;
            visibility?: string;
            pushed_at: string | null;
            created_at: string | null;
            updated_at: string | null;
            allow_rebase_merge?: boolean;
            template_repository?: null | components["schemas"]["repository"];
            temp_clone_token?: string;
            allow_squash_merge?: boolean;
            allow_auto_merge?: boolean;
            delete_branch_on_merge?: boolean;
            allow_merge_commit?: boolean;
            allow_forking?: boolean;
            web_commit_signoff_required?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
        };
        "project-card": {
            url: string;
            id: number;
            node_id: string;
            note: string | null;
            creator: null | components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            archived?: boolean;
            column_name?: string;
            project_id?: string;
            column_url: string;
            content_url?: string;
            project_url: string;
        };
        "project-column": {
            url: string;
            project_url: string;
            cards_url: string;
            id: number;
            node_id: string;
            name: string;
            created_at: string;
            updated_at: string;
        };
        "project-collaborator-permission": {
            permission: string;
            user: null | components["schemas"]["simple-user"];
        };
        "rate-limit": {
            limit: number;
            remaining: number;
            reset: number;
            used: number;
        };
        "rate-limit-overview": {
            resources: {
                core: components["schemas"]["rate-limit"];
                graphql?: components["schemas"]["rate-limit"];
                search: components["schemas"]["rate-limit"];
                code_search?: components["schemas"]["rate-limit"];
                source_import?: components["schemas"]["rate-limit"];
                integration_manifest?: components["schemas"]["rate-limit"];
                code_scanning_upload?: components["schemas"]["rate-limit"];
                actions_runner_registration?: components["schemas"]["rate-limit"];
                scim?: components["schemas"]["rate-limit"];
                dependency_snapshots?: components["schemas"]["rate-limit"];
            };
            rate: components["schemas"]["rate-limit"];
        };
        "code-of-conduct-simple": {
            url: string;
            key: string;
            name: string;
            html_url: string | null;
        };
        "full-repository": {
            id: number;
            node_id: string;
            name: string;
            full_name: string;
            owner: components["schemas"]["simple-user"];
            private: boolean;
            html_url: string;
            description: string | null;
            fork: boolean;
            url: string;
            archive_url: string;
            assignees_url: string;
            blobs_url: string;
            branches_url: string;
            collaborators_url: string;
            comments_url: string;
            commits_url: string;
            compare_url: string;
            contents_url: string;
            contributors_url: string;
            deployments_url: string;
            downloads_url: string;
            events_url: string;
            forks_url: string;
            git_commits_url: string;
            git_refs_url: string;
            git_tags_url: string;
            git_url: string;
            issue_comment_url: string;
            issue_events_url: string;
            issues_url: string;
            keys_url: string;
            labels_url: string;
            languages_url: string;
            merges_url: string;
            milestones_url: string;
            notifications_url: string;
            pulls_url: string;
            releases_url: string;
            ssh_url: string;
            stargazers_url: string;
            statuses_url: string;
            subscribers_url: string;
            subscription_url: string;
            tags_url: string;
            teams_url: string;
            trees_url: string;
            clone_url: string;
            mirror_url: string | null;
            hooks_url: string;
            svn_url: string;
            homepage: string | null;
            language: string | null;
            forks_count: number;
            stargazers_count: number;
            watchers_count: number;
            size: number;
            default_branch: string;
            open_issues_count: number;
            is_template?: boolean;
            topics?: string[];
            has_issues: boolean;
            has_projects: boolean;
            has_wiki: boolean;
            has_pages: boolean;
            has_downloads: boolean;
            has_discussions: boolean;
            archived: boolean;
            disabled: boolean;
            visibility?: string;
            pushed_at: string;
            created_at: string;
            updated_at: string;
            permissions?: {
                admin: boolean;
                maintain?: boolean;
                push: boolean;
                triage?: boolean;
                pull: boolean;
            };
            allow_rebase_merge?: boolean;
            template_repository?: null | components["schemas"]["repository"];
            temp_clone_token?: string | null;
            allow_squash_merge?: boolean;
            allow_auto_merge?: boolean;
            delete_branch_on_merge?: boolean;
            allow_merge_commit?: boolean;
            allow_update_branch?: boolean;
            use_squash_pr_title_as_default?: boolean;
            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
            allow_forking?: boolean;
            web_commit_signoff_required?: boolean;
            subscribers_count: number;
            network_count: number;
            license: null | components["schemas"]["license-simple"];
            organization?: null | components["schemas"]["simple-user"];
            parent?: components["schemas"]["repository"];
            source?: components["schemas"]["repository"];
            forks: number;
            master_branch?: string;
            open_issues: number;
            watchers: number;
            anonymous_access_enabled?: boolean;
            code_of_conduct?: components["schemas"]["code-of-conduct-simple"];
            security_and_analysis?: components["schemas"]["security-and-analysis"];
        };
        artifact: {
            id: number;
            node_id: string;
            name: string;
            size_in_bytes: number;
            url: string;
            archive_download_url: string;
            expired: boolean;
            created_at: string | null;
            expires_at: string | null;
            updated_at: string | null;
            workflow_run?: {
                id?: number;
                repository_id?: number;
                head_repository_id?: number;
                head_branch?: string;
                head_sha?: string;
            } | null;
        };
        "actions-cache-list": {
            total_count: number;
            actions_caches: {
                id?: number;
                ref?: string;
                key?: string;
                version?: string;
                last_accessed_at?: string;
                created_at?: string;
                size_in_bytes?: number;
            }[];
        };
        job: {
            id: number;
            run_id: number;
            run_url: string;
            run_attempt?: number;
            node_id: string;
            head_sha: string;
            url: string;
            html_url: string | null;
            status: "queued" | "in_progress" | "completed";
            conclusion: "success" | "failure" | "neutral" | "cancelled" | "skipped" | "timed_out" | "action_required" | null;
            created_at: string;
            started_at: string;
            completed_at: string | null;
            name: string;
            steps?: ({
                status: "queued" | "in_progress" | "completed";
                conclusion: string | null;
                name: string;
                number: number;
                started_at?: string | null;
                completed_at?: string | null;
            })[];
            check_run_url: string;
            labels: string[];
            runner_id: number | null;
            runner_name: string | null;
            runner_group_id: number | null;
            runner_group_name: string | null;
            workflow_name: string | null;
            head_branch: string | null;
        };
        "oidc-custom-sub-repo": {
            use_default: boolean;
            include_claim_keys?: string[];
        };
        "actions-secret": {
            name: string;
            created_at: string;
            updated_at: string;
        };
        "actions-variable": {
            name: string;
            value: string;
            created_at: string;
            updated_at: string;
        };
        "actions-enabled": boolean;
        "actions-repository-permissions": {
            enabled: components["schemas"]["actions-enabled"];
            allowed_actions?: components["schemas"]["allowed-actions"];
            selected_actions_url?: components["schemas"]["selected-actions-url"];
        };
        "actions-workflow-access-to-repository": {
            access_level: "none" | "user" | "organization";
        };
        "referenced-workflow": {
            path: string;
            sha: string;
            ref?: string;
        };
        "pull-request-minimal": {
            id: number;
            number: number;
            url: string;
            head: {
                ref: string;
                sha: string;
                repo: {
                    id: number;
                    url: string;
                    name: string;
                };
            };
            base: {
                ref: string;
                sha: string;
                repo: {
                    id: number;
                    url: string;
                    name: string;
                };
            };
        };
        "simple-commit": {
            id: string;
            tree_id: string;
            message: string;
            timestamp: string;
            author: {
                name: string;
                email: string;
            } | null;
            committer: {
                name: string;
                email: string;
            } | null;
        };
        "workflow-run": {
            id: number;
            name?: string | null;
            node_id: string;
            check_suite_id?: number;
            check_suite_node_id?: string;
            head_branch: string | null;
            head_sha: string;
            path: string;
            run_number: number;
            run_attempt?: number;
            referenced_workflows?: components["schemas"]["referenced-workflow"][] | null;
            event: string;
            status: string | null;
            conclusion: string | null;
            workflow_id: number;
            url: string;
            html_url: string;
            pull_requests: components["schemas"]["pull-request-minimal"][] | null;
            created_at: string;
            updated_at: string;
            actor?: components["schemas"]["simple-user"];
            triggering_actor?: components["schemas"]["simple-user"];
            run_started_at?: string;
            jobs_url: string;
            logs_url: string;
            check_suite_url: string;
            artifacts_url: string;
            cancel_url: string;
            rerun_url: string;
            previous_attempt_url?: string | null;
            workflow_url: string;
            head_commit: null | components["schemas"]["simple-commit"];
            repository: components["schemas"]["minimal-repository"];
            head_repository: components["schemas"]["minimal-repository"];
            head_repository_id?: number;
            display_title: string;
        };
        "environment-approvals": {
            environments: {
                id?: number;
                node_id?: string;
                name?: string;
                url?: string;
                html_url?: string;
                created_at?: string;
                updated_at?: string;
            }[];
            state: "approved" | "rejected" | "pending";
            user: components["schemas"]["simple-user"];
            comment: string;
        };
        "review-custom-gates-comment-required": {
            environment_name: string;
            comment: string;
        };
        "review-custom-gates-state-required": {
            environment_name: string;
            state: "approved" | "rejected";
            comment?: string;
        };
        "deployment-reviewer-type": "User" | "Team";
        "pending-deployment": {
            environment: {
                id?: number;
                node_id?: string;
                name?: string;
                url?: string;
                html_url?: string;
            };
            wait_timer: number;
            wait_timer_started_at: string | null;
            current_user_can_approve: boolean;
            reviewers: ({
                type?: components["schemas"]["deployment-reviewer-type"];
                reviewer?: components["schemas"]["simple-user"] | components["schemas"]["team"];
            })[];
        };
        deployment: {
            url: string;
            id: number;
            node_id: string;
            sha: string;
            ref: string;
            task: string;
            payload: OneOf<[
                {
                    [key: string]: unknown;
                },
                string
            ]>;
            original_environment?: string;
            environment: string;
            description: string | null;
            creator: null | components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            statuses_url: string;
            repository_url: string;
            transient_environment?: boolean;
            production_environment?: boolean;
            performed_via_github_app?: null | components["schemas"]["integration"];
        };
        "workflow-run-usage": {
            billable: {
                UBUNTU?: {
                    total_ms: number;
                    jobs: number;
                    job_runs?: {
                        job_id: number;
                        duration_ms: number;
                    }[];
                };
                MACOS?: {
                    total_ms: number;
                    jobs: number;
                    job_runs?: {
                        job_id: number;
                        duration_ms: number;
                    }[];
                };
                WINDOWS?: {
                    total_ms: number;
                    jobs: number;
                    job_runs?: {
                        job_id: number;
                        duration_ms: number;
                    }[];
                };
            };
            run_duration_ms?: number;
        };
        workflow: {
            id: number;
            node_id: string;
            name: string;
            path: string;
            state: "active" | "deleted" | "disabled_fork" | "disabled_inactivity" | "disabled_manually";
            created_at: string;
            updated_at: string;
            url: string;
            html_url: string;
            badge_url: string;
            deleted_at?: string;
        };
        "workflow-usage": {
            billable: {
                UBUNTU?: {
                    total_ms?: number;
                };
                MACOS?: {
                    total_ms?: number;
                };
                WINDOWS?: {
                    total_ms?: number;
                };
            };
        };
        activity: {
            id: number;
            node_id: string;
            before: string;
            after: string;
            ref: string;
            timestamp: string;
            activity_type: "push" | "force_push" | "branch_deletion" | "branch_creation" | "pr_merge" | "merge_queue_merge";
            actor: null | components["schemas"]["simple-user"];
        };
        autolink: {
            id: number;
            key_prefix: string;
            url_template: string;
            is_alphanumeric: boolean;
        };
        "check-automated-security-fixes": {
            enabled: boolean;
            paused: boolean;
        };
        "protected-branch-required-status-check": {
            url?: string;
            enforcement_level?: string;
            contexts: string[];
            checks: ({
                context: string;
                app_id: number | null;
            })[];
            contexts_url?: string;
            strict?: boolean;
        };
        "protected-branch-admin-enforced": {
            url: string;
            enabled: boolean;
        };
        "protected-branch-pull-request-review": {
            url?: string;
            dismissal_restrictions?: {
                users?: components["schemas"]["simple-user"][];
                teams?: components["schemas"]["team"][];
                apps?: components["schemas"]["integration"][];
                url?: string;
                users_url?: string;
                teams_url?: string;
            };
            bypass_pull_request_allowances?: {
                users?: components["schemas"]["simple-user"][];
                teams?: components["schemas"]["team"][];
                apps?: components["schemas"]["integration"][];
            };
            dismiss_stale_reviews: boolean;
            require_code_owner_reviews: boolean;
            required_approving_review_count?: number;
            require_last_push_approval?: boolean;
        };
        "branch-restriction-policy": {
            url: string;
            users_url: string;
            teams_url: string;
            apps_url: string;
            users: {
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: string;
                site_admin?: boolean;
            }[];
            teams: ({
                id?: number;
                node_id?: string;
                url?: string;
                html_url?: string;
                name?: string;
                slug?: string;
                description?: string | null;
                privacy?: string;
                notification_setting?: string;
                permission?: string;
                members_url?: string;
                repositories_url?: string;
                parent?: string | null;
            })[];
            apps: {
                id?: number;
                slug?: string;
                node_id?: string;
                owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    url?: string;
                    repos_url?: string;
                    events_url?: string;
                    hooks_url?: string;
                    issues_url?: string;
                    members_url?: string;
                    public_members_url?: string;
                    avatar_url?: string;
                    description?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                };
                name?: string;
                description?: string;
                external_url?: string;
                html_url?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                    metadata?: string;
                    contents?: string;
                    issues?: string;
                    single_file?: string;
                };
                events?: string[];
            }[];
        };
        "branch-protection": {
            url?: string;
            enabled?: boolean;
            required_status_checks?: components["schemas"]["protected-branch-required-status-check"];
            enforce_admins?: components["schemas"]["protected-branch-admin-enforced"];
            required_pull_request_reviews?: components["schemas"]["protected-branch-pull-request-review"];
            restrictions?: components["schemas"]["branch-restriction-policy"];
            required_linear_history?: {
                enabled?: boolean;
            };
            allow_force_pushes?: {
                enabled?: boolean;
            };
            allow_deletions?: {
                enabled?: boolean;
            };
            block_creations?: {
                enabled?: boolean;
            };
            required_conversation_resolution?: {
                enabled?: boolean;
            };
            name?: string;
            protection_url?: string;
            required_signatures?: {
                url: string;
                enabled: boolean;
            };
            lock_branch?: {
                enabled?: boolean;
            };
            allow_fork_syncing?: {
                enabled?: boolean;
            };
        };
        "short-branch": {
            name: string;
            commit: {
                sha: string;
                url: string;
            };
            protected: boolean;
            protection?: components["schemas"]["branch-protection"];
            protection_url?: string;
        };
        "git-user": {
            name?: string;
            email?: string;
            date?: string;
        };
        verification: {
            verified: boolean;
            reason: string;
            payload: string | null;
            signature: string | null;
        };
        "diff-entry": {
            sha: string;
            filename: string;
            status: "added" | "removed" | "modified" | "renamed" | "copied" | "changed" | "unchanged";
            additions: number;
            deletions: number;
            changes: number;
            blob_url: string;
            raw_url: string;
            contents_url: string;
            patch?: string;
            previous_filename?: string;
        };
        commit: {
            url: string;
            sha: string;
            node_id: string;
            html_url: string;
            comments_url: string;
            commit: {
                url: string;
                author: null | components["schemas"]["git-user"];
                committer: null | components["schemas"]["git-user"];
                message: string;
                comment_count: number;
                tree: {
                    sha: string;
                    url: string;
                };
                verification?: components["schemas"]["verification"];
            };
            author: null | components["schemas"]["simple-user"];
            committer: null | components["schemas"]["simple-user"];
            parents: {
                sha: string;
                url: string;
                html_url?: string;
            }[];
            stats?: {
                additions?: number;
                deletions?: number;
                total?: number;
            };
            files?: components["schemas"]["diff-entry"][];
        };
        "branch-with-protection": {
            name: string;
            commit: components["schemas"]["commit"];
            _links: {
                html: string;
                self: string;
            };
            protected: boolean;
            protection: components["schemas"]["branch-protection"];
            protection_url: string;
            pattern?: string;
            required_approving_review_count?: number;
        };
        "status-check-policy": {
            url: string;
            strict: boolean;
            contexts: string[];
            checks: ({
                context: string;
                app_id: number | null;
            })[];
            contexts_url: string;
        };
        "protected-branch": {
            url: string;
            required_status_checks?: components["schemas"]["status-check-policy"];
            required_pull_request_reviews?: {
                url: string;
                dismiss_stale_reviews?: boolean;
                require_code_owner_reviews?: boolean;
                required_approving_review_count?: number;
                require_last_push_approval?: boolean;
                dismissal_restrictions?: {
                    url: string;
                    users_url: string;
                    teams_url: string;
                    users: components["schemas"]["simple-user"][];
                    teams: components["schemas"]["team"][];
                    apps?: components["schemas"]["integration"][];
                };
                bypass_pull_request_allowances?: {
                    users: components["schemas"]["simple-user"][];
                    teams: components["schemas"]["team"][];
                    apps?: components["schemas"]["integration"][];
                };
            };
            required_signatures?: {
                url: string;
                enabled: boolean;
            };
            enforce_admins?: {
                url: string;
                enabled: boolean;
            };
            required_linear_history?: {
                enabled: boolean;
            };
            allow_force_pushes?: {
                enabled: boolean;
            };
            allow_deletions?: {
                enabled: boolean;
            };
            restrictions?: components["schemas"]["branch-restriction-policy"];
            required_conversation_resolution?: {
                enabled?: boolean;
            };
            block_creations?: {
                enabled: boolean;
            };
            lock_branch?: {
                enabled?: boolean;
            };
            allow_fork_syncing?: {
                enabled?: boolean;
            };
        };
        "deployment-simple": {
            url: string;
            id: number;
            node_id: string;
            task: string;
            original_environment?: string;
            environment: string;
            description: string | null;
            created_at: string;
            updated_at: string;
            statuses_url: string;
            repository_url: string;
            transient_environment?: boolean;
            production_environment?: boolean;
            performed_via_github_app?: null | components["schemas"]["integration"];
        };
        "check-run": {
            id: number;
            head_sha: string;
            node_id: string;
            external_id: string | null;
            url: string;
            html_url: string | null;
            details_url: string | null;
            status: "queued" | "in_progress" | "completed";
            conclusion: "success" | "failure" | "neutral" | "cancelled" | "skipped" | "timed_out" | "action_required" | null;
            started_at: string | null;
            completed_at: string | null;
            output: {
                title: string | null;
                summary: string | null;
                text: string | null;
                annotations_count: number;
                annotations_url: string;
            };
            name: string;
            check_suite: {
                id: number;
            } | null;
            app: null | components["schemas"]["integration"];
            pull_requests: components["schemas"]["pull-request-minimal"][];
            deployment?: components["schemas"]["deployment-simple"];
        };
        "check-annotation": {
            path: string;
            start_line: number;
            end_line: number;
            start_column: number | null;
            end_column: number | null;
            annotation_level: string | null;
            title: string | null;
            message: string | null;
            raw_details: string | null;
            blob_href: string;
        };
        "check-suite": {
            id: number;
            node_id: string;
            head_branch: string | null;
            head_sha: string;
            status: "queued" | "in_progress" | "completed" | null;
            conclusion: "success" | "failure" | "neutral" | "cancelled" | "skipped" | "timed_out" | "action_required" | "startup_failure" | "stale" | null;
            url: string | null;
            before: string | null;
            after: string | null;
            pull_requests: components["schemas"]["pull-request-minimal"][] | null;
            app: null | components["schemas"]["integration"];
            repository: components["schemas"]["minimal-repository"];
            created_at: string | null;
            updated_at: string | null;
            head_commit: components["schemas"]["simple-commit"];
            latest_check_runs_count: number;
            check_runs_url: string;
            rerequestable?: boolean;
            runs_rerequestable?: boolean;
        };
        "check-suite-preference": {
            preferences: {
                auto_trigger_checks?: {
                    app_id: number;
                    setting: boolean;
                }[];
            };
            repository: components["schemas"]["minimal-repository"];
        };
        "code-scanning-alert-rule-summary": {
            id?: string | null;
            name?: string;
            tags?: string[] | null;
            severity?: "none" | "note" | "warning" | "error" | null;
            description?: string;
        };
        "code-scanning-alert-items": {
            number: components["schemas"]["alert-number"];
            created_at: components["schemas"]["alert-created-at"];
            updated_at?: components["schemas"]["alert-updated-at"];
            url: components["schemas"]["alert-url"];
            html_url: components["schemas"]["alert-html-url"];
            instances_url: components["schemas"]["alert-instances-url"];
            state: components["schemas"]["code-scanning-alert-state"];
            fixed_at?: components["schemas"]["alert-fixed-at"];
            dismissed_by: null | components["schemas"]["simple-user"];
            dismissed_at: components["schemas"]["alert-dismissed-at"];
            dismissed_reason: components["schemas"]["code-scanning-alert-dismissed-reason"];
            dismissed_comment?: components["schemas"]["code-scanning-alert-dismissed-comment"];
            rule: components["schemas"]["code-scanning-alert-rule-summary"];
            tool: components["schemas"]["code-scanning-analysis-tool"];
            most_recent_instance: components["schemas"]["code-scanning-alert-instance"];
        };
        "code-scanning-alert": {
            number: components["schemas"]["alert-number"];
            created_at: components["schemas"]["alert-created-at"];
            updated_at?: components["schemas"]["alert-updated-at"];
            url: components["schemas"]["alert-url"];
            html_url: components["schemas"]["alert-html-url"];
            instances_url: components["schemas"]["alert-instances-url"];
            state: components["schemas"]["code-scanning-alert-state"];
            fixed_at?: components["schemas"]["alert-fixed-at"];
            dismissed_by: null | components["schemas"]["simple-user"];
            dismissed_at: components["schemas"]["alert-dismissed-at"];
            dismissed_reason: components["schemas"]["code-scanning-alert-dismissed-reason"];
            dismissed_comment?: components["schemas"]["code-scanning-alert-dismissed-comment"];
            rule: components["schemas"]["code-scanning-alert-rule"];
            tool: components["schemas"]["code-scanning-analysis-tool"];
            most_recent_instance: components["schemas"]["code-scanning-alert-instance"];
        };
        "code-scanning-alert-set-state": "open" | "dismissed";
        "code-scanning-analysis-sarif-id": string;
        "code-scanning-analysis-commit-sha": string;
        "code-scanning-analysis-environment": string;
        readonly "code-scanning-analysis-created-at": string;
        readonly "code-scanning-analysis-url": string;
        "code-scanning-analysis": {
            ref: components["schemas"]["code-scanning-ref"];
            commit_sha: components["schemas"]["code-scanning-analysis-commit-sha"];
            analysis_key: components["schemas"]["code-scanning-analysis-analysis-key"];
            environment: components["schemas"]["code-scanning-analysis-environment"];
            category?: components["schemas"]["code-scanning-analysis-category"];
            error: string;
            created_at: components["schemas"]["code-scanning-analysis-created-at"];
            results_count: number;
            rules_count: number;
            id: number;
            url: components["schemas"]["code-scanning-analysis-url"];
            sarif_id: components["schemas"]["code-scanning-analysis-sarif-id"];
            tool: components["schemas"]["code-scanning-analysis-tool"];
            deletable: boolean;
            warning: string;
        };
        "code-scanning-analysis-deletion": {
            next_analysis_url: string | null;
            confirm_delete_url: string | null;
        };
        "code-scanning-codeql-database": {
            id: number;
            name: string;
            language: string;
            uploader: components["schemas"]["simple-user"];
            content_type: string;
            size: number;
            created_at: string;
            updated_at: string;
            url: string;
        };
        "code-scanning-default-setup": {
            state?: "configured" | "not-configured";
            languages?: ("c-cpp" | "csharp" | "go" | "java-kotlin" | "javascript-typescript" | "javascript" | "python" | "ruby" | "typescript" | "swift")[];
            query_suite?: "default" | "extended";
            updated_at?: string | null;
            schedule?: "weekly" | null;
        };
        "code-scanning-default-setup-update": {
            state: "configured" | "not-configured";
            query_suite?: "default" | "extended";
            languages?: ("c-cpp" | "csharp" | "go" | "java-kotlin" | "javascript-typescript" | "python" | "ruby" | "swift")[];
        };
        "code-scanning-default-setup-update-response": {
            run_id?: number;
            run_url?: string;
        };
        "code-scanning-analysis-sarif-file": string;
        "code-scanning-sarifs-receipt": {
            id?: components["schemas"]["code-scanning-analysis-sarif-id"];
            url?: string;
        };
        "code-scanning-sarifs-status": {
            processing_status?: "pending" | "complete" | "failed";
            analyses_url?: string | null;
            errors?: readonly string[] | null;
        };
        "codeowners-errors": {
            errors: ({
                line: number;
                column: number;
                source?: string;
                kind: string;
                suggestion?: string | null;
                message: string;
                path: string;
            })[];
        };
        "repo-codespaces-secret": {
            name: string;
            created_at: string;
            updated_at: string;
        };
        collaborator: {
            login: string;
            id: number;
            email?: string | null;
            name?: string | null;
            node_id: string;
            avatar_url: string;
            gravatar_id: string | null;
            url: string;
            html_url: string;
            followers_url: string;
            following_url: string;
            gists_url: string;
            starred_url: string;
            subscriptions_url: string;
            organizations_url: string;
            repos_url: string;
            events_url: string;
            received_events_url: string;
            type: string;
            site_admin: boolean;
            permissions?: {
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
                admin: boolean;
            };
            role_name: string;
        };
        "repository-invitation": {
            id: number;
            repository: components["schemas"]["minimal-repository"];
            invitee: null | components["schemas"]["simple-user"];
            inviter: null | components["schemas"]["simple-user"];
            permissions: "read" | "write" | "admin" | "triage" | "maintain";
            created_at: string;
            expired?: boolean;
            url: string;
            html_url: string;
            node_id: string;
        };
        "repository-collaborator-permission": {
            permission: string;
            role_name: string;
            user: null | components["schemas"]["collaborator"];
        };
        "commit-comment": {
            html_url: string;
            url: string;
            id: number;
            node_id: string;
            body: string;
            path: string | null;
            position: number | null;
            line: number | null;
            commit_id: string;
            user: null | components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            author_association: components["schemas"]["author-association"];
            reactions?: components["schemas"]["reaction-rollup"];
        };
        "branch-short": {
            name: string;
            commit: {
                sha: string;
                url: string;
            };
            protected: boolean;
        };
        link: {
            href: string;
        };
        "auto-merge": ({
            enabled_by: components["schemas"]["simple-user"];
            merge_method: "merge" | "squash" | "rebase";
            commit_title: string;
            commit_message: string;
        }) | null;
        "pull-request-simple": {
            url: string;
            id: number;
            node_id: string;
            html_url: string;
            diff_url: string;
            patch_url: string;
            issue_url: string;
            commits_url: string;
            review_comments_url: string;
            review_comment_url: string;
            comments_url: string;
            statuses_url: string;
            number: number;
            state: string;
            locked: boolean;
            title: string;
            user: null | components["schemas"]["simple-user"];
            body: string | null;
            labels: {
                id: number;
                node_id: string;
                url: string;
                name: string;
                description: string;
                color: string;
                default: boolean;
            }[];
            milestone: null | components["schemas"]["milestone"];
            active_lock_reason?: string | null;
            created_at: string;
            updated_at: string;
            closed_at: string | null;
            merged_at: string | null;
            merge_commit_sha: string | null;
            assignee: null | components["schemas"]["simple-user"];
            assignees?: components["schemas"]["simple-user"][] | null;
            requested_reviewers?: components["schemas"]["simple-user"][] | null;
            requested_teams?: components["schemas"]["team"][] | null;
            head: {
                label: string;
                ref: string;
                repo: components["schemas"]["repository"];
                sha: string;
                user: null | components["schemas"]["simple-user"];
            };
            base: {
                label: string;
                ref: string;
                repo: components["schemas"]["repository"];
                sha: string;
                user: null | components["schemas"]["simple-user"];
            };
            _links: {
                comments: components["schemas"]["link"];
                commits: components["schemas"]["link"];
                statuses: components["schemas"]["link"];
                html: components["schemas"]["link"];
                issue: components["schemas"]["link"];
                review_comments: components["schemas"]["link"];
                review_comment: components["schemas"]["link"];
                self: components["schemas"]["link"];
            };
            author_association: components["schemas"]["author-association"];
            auto_merge: components["schemas"]["auto-merge"];
            draft?: boolean;
        };
        "simple-commit-status": {
            description: string | null;
            id: number;
            node_id: string;
            state: string;
            context: string;
            target_url: string | null;
            required?: boolean | null;
            avatar_url: string | null;
            url: string;
            created_at: string;
            updated_at: string;
        };
        "combined-commit-status": {
            state: string;
            statuses: components["schemas"]["simple-commit-status"][];
            sha: string;
            total_count: number;
            repository: components["schemas"]["minimal-repository"];
            commit_url: string;
            url: string;
        };
        status: {
            url: string;
            avatar_url: string | null;
            id: number;
            node_id: string;
            state: string;
            description: string | null;
            target_url: string | null;
            context: string;
            created_at: string;
            updated_at: string;
            creator: null | components["schemas"]["simple-user"];
        };
        "community-health-file": {
            url: string;
            html_url: string;
        };
        "community-profile": {
            health_percentage: number;
            description: string | null;
            documentation: string | null;
            files: {
                code_of_conduct: null | components["schemas"]["code-of-conduct-simple"];
                code_of_conduct_file: null | components["schemas"]["community-health-file"];
                license: null | components["schemas"]["license-simple"];
                contributing: null | components["schemas"]["community-health-file"];
                readme: null | components["schemas"]["community-health-file"];
                issue_template: null | components["schemas"]["community-health-file"];
                pull_request_template: null | components["schemas"]["community-health-file"];
            };
            updated_at: string | null;
            content_reports_enabled?: boolean;
        };
        "commit-comparison": {
            url: string;
            html_url: string;
            permalink_url: string;
            diff_url: string;
            patch_url: string;
            base_commit: components["schemas"]["commit"];
            merge_base_commit: components["schemas"]["commit"];
            status: "diverged" | "ahead" | "behind" | "identical";
            ahead_by: number;
            behind_by: number;
            total_commits: number;
            commits: components["schemas"]["commit"][];
            files?: components["schemas"]["diff-entry"][];
        };
        "content-tree": {
            type: string;
            size: number;
            name: string;
            path: string;
            sha: string;
            url: string;
            git_url: string | null;
            html_url: string | null;
            download_url: string | null;
            entries?: ({
                type: string;
                size: number;
                name: string;
                path: string;
                content?: string;
                sha: string;
                url: string;
                git_url: string | null;
                html_url: string | null;
                download_url: string | null;
                _links: {
                    git: string | null;
                    html: string | null;
                    self: string;
                };
            })[];
            _links: {
                git: string | null;
                html: string | null;
                self: string;
            };
        };
        "content-directory": ({
            type: "dir" | "file" | "submodule" | "symlink";
            size: number;
            name: string;
            path: string;
            content?: string;
            sha: string;
            url: string;
            git_url: string | null;
            html_url: string | null;
            download_url: string | null;
            _links: {
                git: string | null;
                html: string | null;
                self: string;
            };
        })[];
        "content-file": {
            type: "file";
            encoding: string;
            size: number;
            name: string;
            path: string;
            content: string;
            sha: string;
            url: string;
            git_url: string | null;
            html_url: string | null;
            download_url: string | null;
            _links: {
                git: string | null;
                html: string | null;
                self: string;
            };
            target?: string;
            submodule_git_url?: string;
        };
        "content-symlink": {
            type: "symlink";
            target: string;
            size: number;
            name: string;
            path: string;
            sha: string;
            url: string;
            git_url: string | null;
            html_url: string | null;
            download_url: string | null;
            _links: {
                git: string | null;
                html: string | null;
                self: string;
            };
        };
        "content-submodule": {
            type: "submodule";
            submodule_git_url: string;
            size: number;
            name: string;
            path: string;
            sha: string;
            url: string;
            git_url: string | null;
            html_url: string | null;
            download_url: string | null;
            _links: {
                git: string | null;
                html: string | null;
                self: string;
            };
        };
        "file-commit": {
            content: {
                name?: string;
                path?: string;
                sha?: string;
                size?: number;
                url?: string;
                html_url?: string;
                git_url?: string;
                download_url?: string;
                type?: string;
                _links?: {
                    self?: string;
                    git?: string;
                    html?: string;
                };
            } | null;
            commit: {
                sha?: string;
                node_id?: string;
                url?: string;
                html_url?: string;
                author?: {
                    date?: string;
                    name?: string;
                    email?: string;
                };
                committer?: {
                    date?: string;
                    name?: string;
                    email?: string;
                };
                message?: string;
                tree?: {
                    url?: string;
                    sha?: string;
                };
                parents?: {
                    url?: string;
                    html_url?: string;
                    sha?: string;
                }[];
                verification?: {
                    verified?: boolean;
                    reason?: string;
                    signature?: string | null;
                    payload?: string | null;
                };
            };
        };
        contributor: {
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string | null;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type: string;
            site_admin?: boolean;
            contributions: number;
            email?: string;
            name?: string;
        };
        "dependabot-alert": {
            number: components["schemas"]["alert-number"];
            state: "auto_dismissed" | "dismissed" | "fixed" | "open";
            dependency: {
                readonly package?: components["schemas"]["dependabot-alert-package"];
                readonly manifest_path?: string;
                readonly scope?: "development" | "runtime" | null;
            };
            security_advisory: components["schemas"]["dependabot-alert-security-advisory"];
            security_vulnerability: components["schemas"]["dependabot-alert-security-vulnerability"];
            url: components["schemas"]["alert-url"];
            html_url: components["schemas"]["alert-html-url"];
            created_at: components["schemas"]["alert-created-at"];
            updated_at: components["schemas"]["alert-updated-at"];
            dismissed_at: components["schemas"]["alert-dismissed-at"];
            dismissed_by: null | components["schemas"]["simple-user"];
            dismissed_reason: "fix_started" | "inaccurate" | "no_bandwidth" | "not_used" | "tolerable_risk" | null;
            dismissed_comment: string | null;
            fixed_at: components["schemas"]["alert-fixed-at"];
            auto_dismissed_at?: components["schemas"]["alert-auto-dismissed-at"];
        };
        "dependabot-secret": {
            name: string;
            created_at: string;
            updated_at: string;
        };
        "dependency-graph-diff": ({
            change_type: "added" | "removed";
            manifest: string;
            ecosystem: string;
            name: string;
            version: string;
            package_url: string | null;
            license: string | null;
            source_repository_url: string | null;
            vulnerabilities: {
                severity: string;
                advisory_ghsa_id: string;
                advisory_summary: string;
                advisory_url: string;
            }[];
            scope: "unknown" | "runtime" | "development";
        })[];
        "dependency-graph-spdx-sbom": {
            sbom: {
                SPDXID: string;
                spdxVersion: string;
                creationInfo: {
                    created: string;
                    creators: string[];
                };
                name: string;
                dataLicense: string;
                documentDescribes: string[];
                documentNamespace: string;
                packages: {
                    SPDXID?: string;
                    name?: string;
                    versionInfo?: string;
                    downloadLocation?: string;
                    filesAnalyzed?: boolean;
                    licenseConcluded?: string;
                    licenseDeclared?: string;
                    supplier?: string;
                    externalRefs?: {
                        referenceCategory: string;
                        referenceLocator: string;
                        referenceType: string;
                    }[];
                }[];
            };
        };
        metadata: {
            [key: string]: null | string | number | boolean;
        };
        dependency: {
            package_url?: string;
            metadata?: components["schemas"]["metadata"];
            relationship?: "direct" | "indirect";
            scope?: "runtime" | "development";
            dependencies?: string[];
        };
        manifest: {
            name: string;
            file?: {
                source_location?: string;
            };
            metadata?: components["schemas"]["metadata"];
            resolved?: {
                [key: string]: components["schemas"]["dependency"];
            };
        };
        snapshot: {
            version: number;
            job: {
                id: string;
                correlator: string;
                html_url?: string;
            };
            sha: string;
            ref: string;
            detector: {
                name: string;
                version: string;
                url: string;
            };
            metadata?: components["schemas"]["metadata"];
            manifests?: {
                [key: string]: components["schemas"]["manifest"];
            };
            scanned: string;
        };
        "deployment-status": {
            url: string;
            id: number;
            node_id: string;
            state: "error" | "failure" | "inactive" | "pending" | "success" | "queued" | "in_progress";
            creator: null | components["schemas"]["simple-user"];
            description: string;
            environment?: string;
            target_url: string;
            created_at: string;
            updated_at: string;
            deployment_url: string;
            repository_url: string;
            environment_url?: string;
            log_url?: string;
            performed_via_github_app?: null | components["schemas"]["integration"];
        };
        "wait-timer": number;
        "deployment-branch-policy-settings": {
            protected_branches: boolean;
            custom_branch_policies: boolean;
        } | null;
        environment: {
            id: number;
            node_id: string;
            name: string;
            url: string;
            html_url: string;
            created_at: string;
            updated_at: string;
            protection_rules?: ({
                id: number;
                node_id: string;
                type: string;
                wait_timer?: components["schemas"]["wait-timer"];
            } | ({
                id: number;
                node_id: string;
                type: string;
                reviewers?: ({
                    type?: components["schemas"]["deployment-reviewer-type"];
                    reviewer?: components["schemas"]["simple-user"] | components["schemas"]["team"];
                })[];
            }) | {
                id: number;
                node_id: string;
                type: string;
            })[];
            deployment_branch_policy?: components["schemas"]["deployment-branch-policy-settings"];
        };
        "deployment-branch-policy": {
            id?: number;
            node_id?: string;
            name?: string;
        };
        "deployment-branch-policy-name-pattern": {
            name: string;
        };
        "custom-deployment-rule-app": {
            id: number;
            slug: string;
            integration_url: string;
            node_id: string;
        };
        "deployment-protection-rule": {
            id: number;
            node_id: string;
            enabled: boolean;
            app: components["schemas"]["custom-deployment-rule-app"];
        };
        "short-blob": {
            url: string;
            sha: string;
        };
        blob: {
            content: string;
            encoding: string;
            url: string;
            sha: string;
            size: number | null;
            node_id: string;
            highlighted_content?: string;
        };
        "git-commit": {
            sha: string;
            node_id: string;
            url: string;
            author: {
                date: string;
                email: string;
                name: string;
            };
            committer: {
                date: string;
                email: string;
                name: string;
            };
            message: string;
            tree: {
                sha: string;
                url: string;
            };
            parents: {
                sha: string;
                url: string;
                html_url: string;
            }[];
            verification: {
                verified: boolean;
                reason: string;
                signature: string | null;
                payload: string | null;
            };
            html_url: string;
        };
        "git-ref": {
            ref: string;
            node_id: string;
            url: string;
            object: {
                type: string;
                sha: string;
                url: string;
            };
        };
        "git-tag": {
            node_id: string;
            tag: string;
            sha: string;
            url: string;
            message: string;
            tagger: {
                date: string;
                email: string;
                name: string;
            };
            object: {
                sha: string;
                type: string;
                url: string;
            };
            verification?: components["schemas"]["verification"];
        };
        "git-tree": {
            sha: string;
            url: string;
            truncated: boolean;
            tree: {
                path?: string;
                mode?: string;
                type?: string;
                sha?: string;
                size?: number;
                url?: string;
            }[];
        };
        "hook-response": {
            code: number | null;
            status: string | null;
            message: string | null;
        };
        hook: {
            type: string;
            id: number;
            name: string;
            active: boolean;
            events: string[];
            config: {
                email?: string;
                password?: string;
                room?: string;
                subdomain?: string;
                url?: components["schemas"]["webhook-config-url"];
                insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                content_type?: components["schemas"]["webhook-config-content-type"];
                digest?: string;
                secret?: components["schemas"]["webhook-config-secret"];
                token?: string;
            };
            updated_at: string;
            created_at: string;
            url: string;
            test_url: string;
            ping_url: string;
            deliveries_url?: string;
            last_response: components["schemas"]["hook-response"];
        };
        import: {
            vcs: string | null;
            use_lfs?: boolean;
            vcs_url: string;
            svc_root?: string;
            tfvc_project?: string;
            status: "auth" | "error" | "none" | "detecting" | "choose" | "auth_failed" | "importing" | "mapping" | "waiting_to_push" | "pushing" | "complete" | "setup" | "unknown" | "detection_found_multiple" | "detection_found_nothing" | "detection_needs_auth";
            status_text?: string | null;
            failed_step?: string | null;
            error_message?: string | null;
            import_percent?: number | null;
            commit_count?: number | null;
            push_percent?: number | null;
            has_large_files?: boolean;
            large_files_size?: number;
            large_files_count?: number;
            project_choices?: {
                vcs?: string;
                tfvc_project?: string;
                human_name?: string;
            }[];
            message?: string;
            authors_count?: number | null;
            url: string;
            html_url: string;
            authors_url: string;
            repository_url: string;
            svn_root?: string;
        };
        "porter-author": {
            id: number;
            remote_id: string;
            remote_name: string;
            email: string;
            name: string;
            url: string;
            import_url: string;
        };
        "porter-large-file": {
            ref_name: string;
            path: string;
            oid: string;
            size: number;
        };
        "issue-event-label": {
            name: string | null;
            color: string | null;
        };
        "issue-event-dismissed-review": {
            state: string;
            review_id: number;
            dismissal_message: string | null;
            dismissal_commit_id?: string | null;
        };
        "issue-event-milestone": {
            title: string;
        };
        "issue-event-project-card": {
            url: string;
            id: number;
            project_url: string;
            project_id: number;
            column_name: string;
            previous_column_name?: string;
        };
        "issue-event-rename": {
            from: string;
            to: string;
        };
        "issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: null | components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            issue?: null | components["schemas"]["issue"];
            label?: components["schemas"]["issue-event-label"];
            assignee?: null | components["schemas"]["simple-user"];
            assigner?: null | components["schemas"]["simple-user"];
            review_requester?: null | components["schemas"]["simple-user"];
            requested_reviewer?: null | components["schemas"]["simple-user"];
            requested_team?: components["schemas"]["team"];
            dismissed_review?: components["schemas"]["issue-event-dismissed-review"];
            milestone?: components["schemas"]["issue-event-milestone"];
            project_card?: components["schemas"]["issue-event-project-card"];
            rename?: components["schemas"]["issue-event-rename"];
            author_association?: components["schemas"]["author-association"];
            lock_reason?: string | null;
            performed_via_github_app?: null | components["schemas"]["integration"];
        };
        "labeled-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            label: {
                name: string;
                color: string;
            };
        };
        "unlabeled-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            label: {
                name: string;
                color: string;
            };
        };
        "assigned-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: components["schemas"]["integration"];
            assignee: components["schemas"]["simple-user"];
            assigner: components["schemas"]["simple-user"];
        };
        "unassigned-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            assignee: components["schemas"]["simple-user"];
            assigner: components["schemas"]["simple-user"];
        };
        "milestoned-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            milestone: {
                title: string;
            };
        };
        "demilestoned-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            milestone: {
                title: string;
            };
        };
        "renamed-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            rename: {
                from: string;
                to: string;
            };
        };
        "review-requested-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            review_requester: components["schemas"]["simple-user"];
            requested_team?: components["schemas"]["team"];
            requested_reviewer?: components["schemas"]["simple-user"];
        };
        "review-request-removed-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            review_requester: components["schemas"]["simple-user"];
            requested_team?: components["schemas"]["team"];
            requested_reviewer?: components["schemas"]["simple-user"];
        };
        "review-dismissed-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            dismissed_review: {
                state: string;
                review_id: number;
                dismissal_message: string | null;
                dismissal_commit_id?: string;
            };
        };
        "locked-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            lock_reason: string | null;
        };
        "added-to-project-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            project_card?: {
                id: number;
                url: string;
                project_id: number;
                project_url: string;
                column_name: string;
                previous_column_name?: string;
            };
        };
        "moved-column-in-project-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            project_card?: {
                id: number;
                url: string;
                project_id: number;
                project_url: string;
                column_name: string;
                previous_column_name?: string;
            };
        };
        "removed-from-project-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            project_card?: {
                id: number;
                url: string;
                project_id: number;
                project_url: string;
                column_name: string;
                previous_column_name?: string;
            };
        };
        "converted-note-to-issue-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: components["schemas"]["integration"];
            project_card?: {
                id: number;
                url: string;
                project_id: number;
                project_url: string;
                column_name: string;
                previous_column_name?: string;
            };
        };
        "issue-event-for-issue": components["schemas"]["labeled-issue-event"] | components["schemas"]["unlabeled-issue-event"] | components["schemas"]["assigned-issue-event"] | components["schemas"]["unassigned-issue-event"] | components["schemas"]["milestoned-issue-event"] | components["schemas"]["demilestoned-issue-event"] | components["schemas"]["renamed-issue-event"] | components["schemas"]["review-requested-issue-event"] | components["schemas"]["review-request-removed-issue-event"] | components["schemas"]["review-dismissed-issue-event"] | components["schemas"]["locked-issue-event"] | components["schemas"]["added-to-project-issue-event"] | components["schemas"]["moved-column-in-project-issue-event"] | components["schemas"]["removed-from-project-issue-event"] | components["schemas"]["converted-note-to-issue-issue-event"];
        label: {
            id: number;
            node_id: string;
            url: string;
            name: string;
            description: string | null;
            color: string;
            default: boolean;
        };
        "timeline-comment-event": {
            event: string;
            actor: components["schemas"]["simple-user"];
            id: number;
            node_id: string;
            url: string;
            body?: string;
            body_text?: string;
            body_html?: string;
            html_url: string;
            user: components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            issue_url: string;
            author_association: components["schemas"]["author-association"];
            performed_via_github_app?: null | components["schemas"]["integration"];
            reactions?: components["schemas"]["reaction-rollup"];
        };
        "timeline-cross-referenced-event": {
            event: string;
            actor?: components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            source: {
                type?: string;
                issue?: components["schemas"]["issue"];
            };
        };
        "timeline-committed-event": {
            event?: string;
            sha: string;
            node_id: string;
            url: string;
            author: {
                date: string;
                email: string;
                name: string;
            };
            committer: {
                date: string;
                email: string;
                name: string;
            };
            message: string;
            tree: {
                sha: string;
                url: string;
            };
            parents: {
                sha: string;
                url: string;
                html_url: string;
            }[];
            verification: {
                verified: boolean;
                reason: string;
                signature: string | null;
                payload: string | null;
            };
            html_url: string;
        };
        "timeline-reviewed-event": {
            event: string;
            id: number;
            node_id: string;
            user: components["schemas"]["simple-user"];
            body: string | null;
            state: string;
            html_url: string;
            pull_request_url: string;
            _links: {
                html: {
                    href: string;
                };
                pull_request: {
                    href: string;
                };
            };
            submitted_at?: string;
            commit_id: string;
            body_html?: string;
            body_text?: string;
            author_association: components["schemas"]["author-association"];
        };
        "pull-request-review-comment": {
            url: string;
            pull_request_review_id: number | null;
            id: number;
            node_id: string;
            diff_hunk: string;
            path: string;
            position?: number;
            original_position?: number;
            commit_id: string;
            original_commit_id: string;
            in_reply_to_id?: number;
            user: components["schemas"]["simple-user"];
            body: string;
            created_at: string;
            updated_at: string;
            html_url: string;
            pull_request_url: string;
            author_association: components["schemas"]["author-association"];
            _links: {
                self: {
                    href: string;
                };
                html: {
                    href: string;
                };
                pull_request: {
                    href: string;
                };
            };
            start_line?: number | null;
            original_start_line?: number | null;
            start_side?: "LEFT" | "RIGHT" | null;
            line?: number;
            original_line?: number;
            side?: "LEFT" | "RIGHT";
            subject_type?: "line" | "file";
            reactions?: components["schemas"]["reaction-rollup"];
            body_html?: string;
            body_text?: string;
        };
        "timeline-line-commented-event": {
            event?: string;
            node_id?: string;
            comments?: components["schemas"]["pull-request-review-comment"][];
        };
        "timeline-commit-commented-event": {
            event?: string;
            node_id?: string;
            commit_id?: string;
            comments?: components["schemas"]["commit-comment"][];
        };
        "timeline-assigned-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            assignee: components["schemas"]["simple-user"];
        };
        "timeline-unassigned-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            assignee: components["schemas"]["simple-user"];
        };
        "state-change-issue-event": {
            id: number;
            node_id: string;
            url: string;
            actor: components["schemas"]["simple-user"];
            event: string;
            commit_id: string | null;
            commit_url: string | null;
            created_at: string;
            performed_via_github_app: null | components["schemas"]["integration"];
            state_reason?: string | null;
        };
        "timeline-issue-events": components["schemas"]["labeled-issue-event"] | components["schemas"]["unlabeled-issue-event"] | components["schemas"]["milestoned-issue-event"] | components["schemas"]["demilestoned-issue-event"] | components["schemas"]["renamed-issue-event"] | components["schemas"]["review-requested-issue-event"] | components["schemas"]["review-request-removed-issue-event"] | components["schemas"]["review-dismissed-issue-event"] | components["schemas"]["locked-issue-event"] | components["schemas"]["added-to-project-issue-event"] | components["schemas"]["moved-column-in-project-issue-event"] | components["schemas"]["removed-from-project-issue-event"] | components["schemas"]["converted-note-to-issue-issue-event"] | components["schemas"]["timeline-comment-event"] | components["schemas"]["timeline-cross-referenced-event"] | components["schemas"]["timeline-committed-event"] | components["schemas"]["timeline-reviewed-event"] | components["schemas"]["timeline-line-commented-event"] | components["schemas"]["timeline-commit-commented-event"] | components["schemas"]["timeline-assigned-issue-event"] | components["schemas"]["timeline-unassigned-issue-event"] | components["schemas"]["state-change-issue-event"];
        "deploy-key": {
            id: number;
            key: string;
            url: string;
            title: string;
            verified: boolean;
            created_at: string;
            read_only: boolean;
            added_by?: string | null;
            last_used?: string | null;
        };
        language: {
            [key: string]: number;
        };
        "license-content": {
            name: string;
            path: string;
            sha: string;
            size: number;
            url: string;
            html_url: string | null;
            git_url: string | null;
            download_url: string | null;
            type: string;
            content: string;
            encoding: string;
            _links: {
                git: string | null;
                html: string | null;
                self: string;
            };
            license: null | components["schemas"]["license-simple"];
        };
        "merged-upstream": {
            message?: string;
            merge_type?: "merge" | "fast-forward" | "none";
            base_branch?: string;
        };
        "pages-source-hash": {
            branch: string;
            path: string;
        };
        "pages-https-certificate": {
            state: "new" | "authorization_created" | "authorization_pending" | "authorized" | "authorization_revoked" | "issued" | "uploaded" | "approved" | "errored" | "bad_authz" | "destroy_pending" | "dns_changed";
            description: string;
            domains: string[];
            expires_at?: string;
        };
        page: {
            url: string;
            status: "built" | "building" | "errored" | null;
            cname: string | null;
            protected_domain_state?: "pending" | "verified" | "unverified" | null;
            pending_domain_unverified_at?: string | null;
            custom_404: boolean;
            html_url?: string;
            build_type?: "legacy" | "workflow" | null;
            source?: components["schemas"]["pages-source-hash"];
            public: boolean;
            https_certificate?: components["schemas"]["pages-https-certificate"];
            https_enforced?: boolean;
        };
        "page-build": {
            url: string;
            status: string;
            error: {
                message: string | null;
            };
            pusher: null | components["schemas"]["simple-user"];
            commit: string;
            duration: number;
            created_at: string;
            updated_at: string;
        };
        "page-build-status": {
            url: string;
            status: string;
        };
        "page-deployment": {
            status_url: string;
            page_url: string;
            preview_url?: string;
        };
        "pages-health-check": {
            domain?: {
                host?: string;
                uri?: string;
                nameservers?: string;
                dns_resolves?: boolean;
                is_proxied?: boolean | null;
                is_cloudflare_ip?: boolean | null;
                is_fastly_ip?: boolean | null;
                is_old_ip_address?: boolean | null;
                is_a_record?: boolean | null;
                has_cname_record?: boolean | null;
                has_mx_records_present?: boolean | null;
                is_valid_domain?: boolean;
                is_apex_domain?: boolean;
                should_be_a_record?: boolean | null;
                is_cname_to_github_user_domain?: boolean | null;
                is_cname_to_pages_dot_github_dot_com?: boolean | null;
                is_cname_to_fastly?: boolean | null;
                is_pointed_to_github_pages_ip?: boolean | null;
                is_non_github_pages_ip_present?: boolean | null;
                is_pages_domain?: boolean;
                is_served_by_pages?: boolean | null;
                is_valid?: boolean;
                reason?: string | null;
                responds_to_https?: boolean;
                enforces_https?: boolean;
                https_error?: string | null;
                is_https_eligible?: boolean | null;
                caa_error?: string | null;
            };
            alt_domain?: ({
                host?: string;
                uri?: string;
                nameservers?: string;
                dns_resolves?: boolean;
                is_proxied?: boolean | null;
                is_cloudflare_ip?: boolean | null;
                is_fastly_ip?: boolean | null;
                is_old_ip_address?: boolean | null;
                is_a_record?: boolean | null;
                has_cname_record?: boolean | null;
                has_mx_records_present?: boolean | null;
                is_valid_domain?: boolean;
                is_apex_domain?: boolean;
                should_be_a_record?: boolean | null;
                is_cname_to_github_user_domain?: boolean | null;
                is_cname_to_pages_dot_github_dot_com?: boolean | null;
                is_cname_to_fastly?: boolean | null;
                is_pointed_to_github_pages_ip?: boolean | null;
                is_non_github_pages_ip_present?: boolean | null;
                is_pages_domain?: boolean;
                is_served_by_pages?: boolean | null;
                is_valid?: boolean;
                reason?: string | null;
                responds_to_https?: boolean;
                enforces_https?: boolean;
                https_error?: string | null;
                is_https_eligible?: boolean | null;
                caa_error?: string | null;
            }) | null;
        };
        "pull-request": {
            url: string;
            id: number;
            node_id: string;
            html_url: string;
            diff_url: string;
            patch_url: string;
            issue_url: string;
            commits_url: string;
            review_comments_url: string;
            review_comment_url: string;
            comments_url: string;
            statuses_url: string;
            number: number;
            state: "open" | "closed";
            locked: boolean;
            title: string;
            user: components["schemas"]["simple-user"];
            body: string | null;
            labels: ({
                id: number;
                node_id: string;
                url: string;
                name: string;
                description: string | null;
                color: string;
                default: boolean;
            })[];
            milestone: null | components["schemas"]["milestone"];
            active_lock_reason?: string | null;
            created_at: string;
            updated_at: string;
            closed_at: string | null;
            merged_at: string | null;
            merge_commit_sha: string | null;
            assignee: null | components["schemas"]["simple-user"];
            assignees?: components["schemas"]["simple-user"][] | null;
            requested_reviewers?: components["schemas"]["simple-user"][] | null;
            requested_teams?: components["schemas"]["team-simple"][] | null;
            head: {
                label: string;
                ref: string;
                repo: ({
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    node_id: string;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    notifications_url: string;
                    owner: {
                        avatar_url: string;
                        events_url: string;
                        followers_url: string;
                        following_url: string;
                        gists_url: string;
                        gravatar_id: string | null;
                        html_url: string;
                        id: number;
                        node_id: string;
                        login: string;
                        organizations_url: string;
                        received_events_url: string;
                        repos_url: string;
                        site_admin: boolean;
                        starred_url: string;
                        subscriptions_url: string;
                        type: string;
                        url: string;
                    };
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                    clone_url: string;
                    default_branch: string;
                    forks: number;
                    forks_count: number;
                    git_url: string;
                    has_downloads: boolean;
                    has_issues: boolean;
                    has_projects: boolean;
                    has_wiki: boolean;
                    has_pages: boolean;
                    has_discussions: boolean;
                    homepage: string | null;
                    language: string | null;
                    master_branch?: string;
                    archived: boolean;
                    disabled: boolean;
                    visibility?: string;
                    mirror_url: string | null;
                    open_issues: number;
                    open_issues_count: number;
                    permissions?: {
                        admin: boolean;
                        maintain?: boolean;
                        push: boolean;
                        triage?: boolean;
                        pull: boolean;
                    };
                    temp_clone_token?: string;
                    allow_merge_commit?: boolean;
                    allow_squash_merge?: boolean;
                    allow_rebase_merge?: boolean;
                    license: ({
                        key: string;
                        name: string;
                        url: string | null;
                        spdx_id: string | null;
                        node_id: string;
                    }) | null;
                    pushed_at: string;
                    size: number;
                    ssh_url: string;
                    stargazers_count: number;
                    svn_url: string;
                    topics?: string[];
                    watchers: number;
                    watchers_count: number;
                    created_at: string;
                    updated_at: string;
                    allow_forking?: boolean;
                    is_template?: boolean;
                    web_commit_signoff_required?: boolean;
                }) | null;
                sha: string;
                user: {
                    avatar_url: string;
                    events_url: string;
                    followers_url: string;
                    following_url: string;
                    gists_url: string;
                    gravatar_id: string | null;
                    html_url: string;
                    id: number;
                    node_id: string;
                    login: string;
                    organizations_url: string;
                    received_events_url: string;
                    repos_url: string;
                    site_admin: boolean;
                    starred_url: string;
                    subscriptions_url: string;
                    type: string;
                    url: string;
                };
            };
            base: {
                label: string;
                ref: string;
                repo: {
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    is_template?: boolean;
                    node_id: string;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    notifications_url: string;
                    owner: {
                        avatar_url: string;
                        events_url: string;
                        followers_url: string;
                        following_url: string;
                        gists_url: string;
                        gravatar_id: string | null;
                        html_url: string;
                        id: number;
                        node_id: string;
                        login: string;
                        organizations_url: string;
                        received_events_url: string;
                        repos_url: string;
                        site_admin: boolean;
                        starred_url: string;
                        subscriptions_url: string;
                        type: string;
                        url: string;
                    };
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                    clone_url: string;
                    default_branch: string;
                    forks: number;
                    forks_count: number;
                    git_url: string;
                    has_downloads: boolean;
                    has_issues: boolean;
                    has_projects: boolean;
                    has_wiki: boolean;
                    has_pages: boolean;
                    has_discussions: boolean;
                    homepage: string | null;
                    language: string | null;
                    master_branch?: string;
                    archived: boolean;
                    disabled: boolean;
                    visibility?: string;
                    mirror_url: string | null;
                    open_issues: number;
                    open_issues_count: number;
                    permissions?: {
                        admin: boolean;
                        maintain?: boolean;
                        push: boolean;
                        triage?: boolean;
                        pull: boolean;
                    };
                    temp_clone_token?: string;
                    allow_merge_commit?: boolean;
                    allow_squash_merge?: boolean;
                    allow_rebase_merge?: boolean;
                    license: null | components["schemas"]["license-simple"];
                    pushed_at: string;
                    size: number;
                    ssh_url: string;
                    stargazers_count: number;
                    svn_url: string;
                    topics?: string[];
                    watchers: number;
                    watchers_count: number;
                    created_at: string;
                    updated_at: string;
                    allow_forking?: boolean;
                    web_commit_signoff_required?: boolean;
                };
                sha: string;
                user: {
                    avatar_url: string;
                    events_url: string;
                    followers_url: string;
                    following_url: string;
                    gists_url: string;
                    gravatar_id: string | null;
                    html_url: string;
                    id: number;
                    node_id: string;
                    login: string;
                    organizations_url: string;
                    received_events_url: string;
                    repos_url: string;
                    site_admin: boolean;
                    starred_url: string;
                    subscriptions_url: string;
                    type: string;
                    url: string;
                };
            };
            _links: {
                comments: components["schemas"]["link"];
                commits: components["schemas"]["link"];
                statuses: components["schemas"]["link"];
                html: components["schemas"]["link"];
                issue: components["schemas"]["link"];
                review_comments: components["schemas"]["link"];
                review_comment: components["schemas"]["link"];
                self: components["schemas"]["link"];
            };
            author_association: components["schemas"]["author-association"];
            auto_merge: components["schemas"]["auto-merge"];
            draft?: boolean;
            merged: boolean;
            mergeable: boolean | null;
            rebaseable?: boolean | null;
            mergeable_state: string;
            merged_by: null | components["schemas"]["simple-user"];
            comments: number;
            review_comments: number;
            maintainer_can_modify: boolean;
            commits: number;
            additions: number;
            deletions: number;
            changed_files: number;
        };
        "pull-request-merge-result": {
            sha: string;
            merged: boolean;
            message: string;
        };
        "pull-request-review-request": {
            users: components["schemas"]["simple-user"][];
            teams: components["schemas"]["team"][];
        };
        "pull-request-review": {
            id: number;
            node_id: string;
            user: null | components["schemas"]["simple-user"];
            body: string;
            state: string;
            html_url: string;
            pull_request_url: string;
            _links: {
                html: {
                    href: string;
                };
                pull_request: {
                    href: string;
                };
            };
            submitted_at?: string;
            commit_id: string | null;
            body_html?: string;
            body_text?: string;
            author_association: components["schemas"]["author-association"];
        };
        "review-comment": {
            url: string;
            pull_request_review_id: number | null;
            id: number;
            node_id: string;
            diff_hunk: string;
            path: string;
            position: number | null;
            original_position: number;
            commit_id: string;
            original_commit_id: string;
            in_reply_to_id?: number;
            user: null | components["schemas"]["simple-user"];
            body: string;
            created_at: string;
            updated_at: string;
            html_url: string;
            pull_request_url: string;
            author_association: components["schemas"]["author-association"];
            _links: {
                self: components["schemas"]["link"];
                html: components["schemas"]["link"];
                pull_request: components["schemas"]["link"];
            };
            body_text?: string;
            body_html?: string;
            reactions?: components["schemas"]["reaction-rollup"];
            side?: "LEFT" | "RIGHT";
            start_side?: "LEFT" | "RIGHT" | null;
            line?: number;
            original_line?: number;
            start_line?: number | null;
            original_start_line?: number | null;
        };
        "release-asset": {
            url: string;
            browser_download_url: string;
            id: number;
            node_id: string;
            name: string;
            label: string | null;
            state: "uploaded" | "open";
            content_type: string;
            size: number;
            download_count: number;
            created_at: string;
            updated_at: string;
            uploader: null | components["schemas"]["simple-user"];
        };
        release: {
            url: string;
            html_url: string;
            assets_url: string;
            upload_url: string;
            tarball_url: string | null;
            zipball_url: string | null;
            id: number;
            node_id: string;
            tag_name: string;
            target_commitish: string;
            name: string | null;
            body?: string | null;
            draft: boolean;
            prerelease: boolean;
            created_at: string;
            published_at: string | null;
            author: components["schemas"]["simple-user"];
            assets: components["schemas"]["release-asset"][];
            body_html?: string;
            body_text?: string;
            mentions_count?: number;
            discussion_url?: string;
            reactions?: components["schemas"]["reaction-rollup"];
        };
        "release-notes-content": {
            name: string;
            body: string;
        };
        "repository-rule-ruleset-info": {
            ruleset_source_type?: "Repository" | "Organization";
            ruleset_source?: string;
            ruleset_id?: number;
        };
        "repository-rule-detailed": (components["schemas"]["repository-rule-creation"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-update"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-deletion"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-required-linear-history"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-required-deployments"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-required-signatures"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-pull-request"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-required-status-checks"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-non-fast-forward"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-commit-message-pattern"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-commit-author-email-pattern"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-committer-email-pattern"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-branch-name-pattern"] & components["schemas"]["repository-rule-ruleset-info"]) | (components["schemas"]["repository-rule-tag-name-pattern"] & components["schemas"]["repository-rule-ruleset-info"]);
        "secret-scanning-alert": {
            number?: components["schemas"]["alert-number"];
            created_at?: components["schemas"]["alert-created-at"];
            updated_at?: null | components["schemas"]["alert-updated-at"];
            url?: components["schemas"]["alert-url"];
            html_url?: components["schemas"]["alert-html-url"];
            locations_url?: string;
            state?: components["schemas"]["secret-scanning-alert-state"];
            resolution?: components["schemas"]["secret-scanning-alert-resolution"];
            resolved_at?: string | null;
            resolved_by?: null | components["schemas"]["simple-user"];
            resolution_comment?: string | null;
            secret_type?: string;
            secret_type_display_name?: string;
            secret?: string;
            push_protection_bypassed?: boolean | null;
            push_protection_bypassed_by?: null | components["schemas"]["simple-user"];
            push_protection_bypassed_at?: string | null;
        };
        "secret-scanning-alert-resolution-comment": string | null;
        "secret-scanning-location-commit": {
            path: string;
            start_line: number;
            end_line: number;
            start_column: number;
            end_column: number;
            blob_sha: string;
            blob_url: string;
            commit_sha: string;
            commit_url: string;
        };
        "secret-scanning-location-issue-title": {
            issue_title_url: string;
        };
        "secret-scanning-location-issue-body": {
            issue_body_url: string;
        };
        "secret-scanning-location-issue-comment": {
            issue_comment_url: string;
        };
        "secret-scanning-location": {
            type: "commit" | "issue_title" | "issue_body" | "issue_comment";
            details: components["schemas"]["secret-scanning-location-commit"] | components["schemas"]["secret-scanning-location-issue-title"] | components["schemas"]["secret-scanning-location-issue-body"] | components["schemas"]["secret-scanning-location-issue-comment"];
        };
        "repository-advisory-create": {
            summary: string;
            description: string;
            cve_id?: string | null;
            vulnerabilities: ({
                package: {
                    ecosystem: components["schemas"]["security-advisory-ecosystems"];
                    name?: string | null;
                };
                vulnerable_version_range?: string | null;
                patched_versions?: string | null;
                vulnerable_functions?: string[] | null;
            })[];
            cwe_ids?: string[] | null;
            credits?: {
                login: string;
                type: components["schemas"]["security-advisory-credit-types"];
            }[] | null;
            severity?: "critical" | "high" | "medium" | "low" | null;
            cvss_vector_string?: string | null;
        };
        "private-vulnerability-report-create": {
            summary: string;
            description: string;
            vulnerabilities?: (({
                package: {
                    ecosystem: components["schemas"]["security-advisory-ecosystems"];
                    name?: string | null;
                };
                vulnerable_version_range?: string | null;
                patched_versions?: string | null;
                vulnerable_functions?: string[] | null;
            })[]) | null;
            cwe_ids?: string[] | null;
            severity?: "critical" | "high" | "medium" | "low" | null;
            cvss_vector_string?: string | null;
        };
        "repository-advisory-update": {
            summary?: string;
            description?: string;
            cve_id?: string | null;
            vulnerabilities?: ({
                package: {
                    ecosystem: components["schemas"]["security-advisory-ecosystems"];
                    name?: string | null;
                };
                vulnerable_version_range?: string | null;
                patched_versions?: string | null;
                vulnerable_functions?: string[] | null;
            })[];
            cwe_ids?: string[] | null;
            credits?: {
                login: string;
                type: components["schemas"]["security-advisory-credit-types"];
            }[] | null;
            severity?: "critical" | "high" | "medium" | "low" | null;
            cvss_vector_string?: string | null;
            state?: "published" | "closed" | "draft";
            collaborating_users?: string[] | null;
            collaborating_teams?: string[] | null;
        };
        stargazer: {
            starred_at: string;
            user: null | components["schemas"]["simple-user"];
        };
        "code-frequency-stat": number[];
        "commit-activity": {
            days: number[];
            total: number;
            week: number;
        };
        "contributor-activity": {
            author: null | components["schemas"]["simple-user"];
            total: number;
            weeks: {
                w?: number;
                a?: number;
                d?: number;
                c?: number;
            }[];
        };
        "participation-stats": {
            all: number[];
            owner: number[];
        };
        "repository-subscription": {
            subscribed: boolean;
            ignored: boolean;
            reason: string | null;
            created_at: string;
            url: string;
            repository_url: string;
        };
        tag: {
            name: string;
            commit: {
                sha: string;
                url: string;
            };
            zipball_url: string;
            tarball_url: string;
            node_id: string;
        };
        "tag-protection": {
            id?: number;
            created_at?: string;
            updated_at?: string;
            enabled?: boolean;
            pattern: string;
        };
        topic: {
            names: string[];
        };
        traffic: {
            timestamp: string;
            uniques: number;
            count: number;
        };
        "clone-traffic": {
            count: number;
            uniques: number;
            clones: components["schemas"]["traffic"][];
        };
        "content-traffic": {
            path: string;
            title: string;
            count: number;
            uniques: number;
        };
        "referrer-traffic": {
            referrer: string;
            count: number;
            uniques: number;
        };
        "view-traffic": {
            count: number;
            uniques: number;
            views: components["schemas"]["traffic"][];
        };
        "search-result-text-matches": ({
            object_url?: string;
            object_type?: string | null;
            property?: string;
            fragment?: string;
            matches?: {
                text?: string;
                indices?: number[];
            }[];
        })[];
        "code-search-result-item": {
            name: string;
            path: string;
            sha: string;
            url: string;
            git_url: string;
            html_url: string;
            repository: components["schemas"]["minimal-repository"];
            score: number;
            file_size?: number;
            language?: string | null;
            last_modified_at?: string;
            line_numbers?: string[];
            text_matches?: components["schemas"]["search-result-text-matches"];
        };
        "commit-search-result-item": {
            url: string;
            sha: string;
            html_url: string;
            comments_url: string;
            commit: {
                author: {
                    name: string;
                    email: string;
                    date: string;
                };
                committer: null | components["schemas"]["git-user"];
                comment_count: number;
                message: string;
                tree: {
                    sha: string;
                    url: string;
                };
                url: string;
                verification?: components["schemas"]["verification"];
            };
            author: null | components["schemas"]["simple-user"];
            committer: null | components["schemas"]["git-user"];
            parents: {
                url?: string;
                html_url?: string;
                sha?: string;
            }[];
            repository: components["schemas"]["minimal-repository"];
            score: number;
            node_id: string;
            text_matches?: components["schemas"]["search-result-text-matches"];
        };
        "issue-search-result-item": {
            url: string;
            repository_url: string;
            labels_url: string;
            comments_url: string;
            events_url: string;
            html_url: string;
            id: number;
            node_id: string;
            number: number;
            title: string;
            locked: boolean;
            active_lock_reason?: string | null;
            assignees?: components["schemas"]["simple-user"][] | null;
            user: null | components["schemas"]["simple-user"];
            labels: ({
                id?: number;
                node_id?: string;
                url?: string;
                name?: string;
                color?: string;
                default?: boolean;
                description?: string | null;
            })[];
            state: string;
            state_reason?: string | null;
            assignee: null | components["schemas"]["simple-user"];
            milestone: null | components["schemas"]["milestone"];
            comments: number;
            created_at: string;
            updated_at: string;
            closed_at: string | null;
            text_matches?: components["schemas"]["search-result-text-matches"];
            pull_request?: {
                merged_at?: string | null;
                diff_url: string | null;
                html_url: string | null;
                patch_url: string | null;
                url: string | null;
            };
            body?: string;
            score: number;
            author_association: components["schemas"]["author-association"];
            draft?: boolean;
            repository?: components["schemas"]["repository"];
            body_html?: string;
            body_text?: string;
            timeline_url?: string;
            performed_via_github_app?: null | components["schemas"]["integration"];
            reactions?: components["schemas"]["reaction-rollup"];
        };
        "label-search-result-item": {
            id: number;
            node_id: string;
            url: string;
            name: string;
            color: string;
            default: boolean;
            description: string | null;
            score: number;
            text_matches?: components["schemas"]["search-result-text-matches"];
        };
        "repo-search-result-item": {
            id: number;
            node_id: string;
            name: string;
            full_name: string;
            owner: null | components["schemas"]["simple-user"];
            private: boolean;
            html_url: string;
            description: string | null;
            fork: boolean;
            url: string;
            created_at: string;
            updated_at: string;
            pushed_at: string;
            homepage: string | null;
            size: number;
            stargazers_count: number;
            watchers_count: number;
            language: string | null;
            forks_count: number;
            open_issues_count: number;
            master_branch?: string;
            default_branch: string;
            score: number;
            forks_url: string;
            keys_url: string;
            collaborators_url: string;
            teams_url: string;
            hooks_url: string;
            issue_events_url: string;
            events_url: string;
            assignees_url: string;
            branches_url: string;
            tags_url: string;
            blobs_url: string;
            git_tags_url: string;
            git_refs_url: string;
            trees_url: string;
            statuses_url: string;
            languages_url: string;
            stargazers_url: string;
            contributors_url: string;
            subscribers_url: string;
            subscription_url: string;
            commits_url: string;
            git_commits_url: string;
            comments_url: string;
            issue_comment_url: string;
            contents_url: string;
            compare_url: string;
            merges_url: string;
            archive_url: string;
            downloads_url: string;
            issues_url: string;
            pulls_url: string;
            milestones_url: string;
            notifications_url: string;
            labels_url: string;
            releases_url: string;
            deployments_url: string;
            git_url: string;
            ssh_url: string;
            clone_url: string;
            svn_url: string;
            forks: number;
            open_issues: number;
            watchers: number;
            topics?: string[];
            mirror_url: string | null;
            has_issues: boolean;
            has_projects: boolean;
            has_pages: boolean;
            has_wiki: boolean;
            has_downloads: boolean;
            has_discussions?: boolean;
            archived: boolean;
            disabled: boolean;
            visibility?: string;
            license: null | components["schemas"]["license-simple"];
            permissions?: {
                admin: boolean;
                maintain?: boolean;
                push: boolean;
                triage?: boolean;
                pull: boolean;
            };
            text_matches?: components["schemas"]["search-result-text-matches"];
            temp_clone_token?: string;
            allow_merge_commit?: boolean;
            allow_squash_merge?: boolean;
            allow_rebase_merge?: boolean;
            allow_auto_merge?: boolean;
            delete_branch_on_merge?: boolean;
            allow_forking?: boolean;
            is_template?: boolean;
            web_commit_signoff_required?: boolean;
        };
        "topic-search-result-item": {
            name: string;
            display_name: string | null;
            short_description: string | null;
            description: string | null;
            created_by: string | null;
            released: string | null;
            created_at: string;
            updated_at: string;
            featured: boolean;
            curated: boolean;
            score: number;
            repository_count?: number | null;
            logo_url?: string | null;
            text_matches?: components["schemas"]["search-result-text-matches"];
            related?: {
                topic_relation?: {
                    id?: number;
                    name?: string;
                    topic_id?: number;
                    relation_type?: string;
                };
            }[] | null;
            aliases?: {
                topic_relation?: {
                    id?: number;
                    name?: string;
                    topic_id?: number;
                    relation_type?: string;
                };
            }[] | null;
        };
        "user-search-result-item": {
            login: string;
            id: number;
            node_id: string;
            avatar_url: string;
            gravatar_id: string | null;
            url: string;
            html_url: string;
            followers_url: string;
            subscriptions_url: string;
            organizations_url: string;
            repos_url: string;
            received_events_url: string;
            type: string;
            score: number;
            following_url: string;
            gists_url: string;
            starred_url: string;
            events_url: string;
            public_repos?: number;
            public_gists?: number;
            followers?: number;
            following?: number;
            created_at?: string;
            updated_at?: string;
            name?: string | null;
            bio?: string | null;
            email?: string | null;
            location?: string | null;
            site_admin: boolean;
            hireable?: boolean | null;
            text_matches?: components["schemas"]["search-result-text-matches"];
            blog?: string | null;
            company?: string | null;
            suspended_at?: string | null;
        };
        "private-user": {
            login: string;
            id: number;
            node_id: string;
            avatar_url: string;
            gravatar_id: string | null;
            url: string;
            html_url: string;
            followers_url: string;
            following_url: string;
            gists_url: string;
            starred_url: string;
            subscriptions_url: string;
            organizations_url: string;
            repos_url: string;
            events_url: string;
            received_events_url: string;
            type: string;
            site_admin: boolean;
            name: string | null;
            company: string | null;
            blog: string | null;
            location: string | null;
            email: string | null;
            hireable: boolean | null;
            bio: string | null;
            twitter_username?: string | null;
            public_repos: number;
            public_gists: number;
            followers: number;
            following: number;
            created_at: string;
            updated_at: string;
            private_gists: number;
            total_private_repos: number;
            owned_private_repos: number;
            disk_usage: number;
            collaborators: number;
            two_factor_authentication: boolean;
            plan?: {
                collaborators: number;
                name: string;
                space: number;
                private_repos: number;
            };
            suspended_at?: string | null;
            business_plus?: boolean;
            ldap_dn?: string;
        };
        "codespaces-secret": {
            name: string;
            created_at: string;
            updated_at: string;
            visibility: "all" | "private" | "selected";
            selected_repositories_url: string;
        };
        "codespaces-user-public-key": {
            key_id: string;
            key: string;
        };
        "codespace-export-details": {
            state?: string | null;
            completed_at?: string | null;
            branch?: string | null;
            sha?: string | null;
            id?: string;
            export_url?: string;
            html_url?: string | null;
        };
        "codespace-with-full-repository": {
            id: number;
            name: string;
            display_name?: string | null;
            environment_id: string | null;
            owner: components["schemas"]["simple-user"];
            billable_owner: components["schemas"]["simple-user"];
            repository: components["schemas"]["full-repository"];
            machine: null | components["schemas"]["codespace-machine"];
            devcontainer_path?: string | null;
            prebuild: boolean | null;
            created_at: string;
            updated_at: string;
            last_used_at: string;
            state: "Unknown" | "Created" | "Queued" | "Provisioning" | "Available" | "Awaiting" | "Unavailable" | "Deleted" | "Moved" | "Shutdown" | "Archived" | "Starting" | "ShuttingDown" | "Failed" | "Exporting" | "Updating" | "Rebuilding";
            url: string;
            git_status: {
                ahead?: number;
                behind?: number;
                has_unpushed_changes?: boolean;
                has_uncommitted_changes?: boolean;
                ref?: string;
            };
            location: "EastUs" | "SouthEastAsia" | "WestEurope" | "WestUs2";
            idle_timeout_minutes: number | null;
            web_url: string;
            machines_url: string;
            start_url: string;
            stop_url: string;
            publish_url?: string | null;
            pulls_url: string | null;
            recent_folders: string[];
            runtime_constraints?: {
                allowed_port_privacy_settings?: string[] | null;
            };
            pending_operation?: boolean | null;
            pending_operation_disabled_reason?: string | null;
            idle_timeout_notice?: string | null;
            retention_period_minutes?: number | null;
            retention_expires_at?: string | null;
        };
        email: {
            email: string;
            primary: boolean;
            verified: boolean;
            visibility: string | null;
        };
        "gpg-key": {
            id: number;
            name?: string | null;
            primary_key_id: number | null;
            key_id: string;
            public_key: string;
            emails: {
                email?: string;
                verified?: boolean;
            }[];
            subkeys: ({
                id?: number;
                primary_key_id?: number;
                key_id?: string;
                public_key?: string;
                emails?: {
                    email?: string;
                    verified?: boolean;
                }[];
                subkeys?: unknown[];
                can_sign?: boolean;
                can_encrypt_comms?: boolean;
                can_encrypt_storage?: boolean;
                can_certify?: boolean;
                created_at?: string;
                expires_at?: string | null;
                raw_key?: string | null;
                revoked?: boolean;
            })[];
            can_sign: boolean;
            can_encrypt_comms: boolean;
            can_encrypt_storage: boolean;
            can_certify: boolean;
            created_at: string;
            expires_at: string | null;
            revoked: boolean;
            raw_key: string | null;
        };
        key: {
            key: string;
            id: number;
            url: string;
            title: string;
            created_at: string;
            verified: boolean;
            read_only: boolean;
        };
        "marketplace-account": {
            url: string;
            id: number;
            type: string;
            node_id?: string;
            login: string;
            email?: string | null;
            organization_billing_email?: string | null;
        };
        "user-marketplace-purchase": {
            billing_cycle: string;
            next_billing_date: string | null;
            unit_count: number | null;
            on_free_trial: boolean;
            free_trial_ends_on: string | null;
            updated_at: string | null;
            account: components["schemas"]["marketplace-account"];
            plan: components["schemas"]["marketplace-listing-plan"];
        };
        "social-account": {
            provider: string;
            url: string;
        };
        "ssh-signing-key": {
            key: string;
            id: number;
            title: string;
            created_at: string;
        };
        "starred-repository": {
            starred_at: string;
            repo: components["schemas"]["repository"];
        };
        hovercard: {
            contexts: {
                message: string;
                octicon: string;
            }[];
        };
        "key-simple": {
            id: number;
            key: string;
        };
        "simple-installation": {
            id: number;
            node_id: string;
        };
        "simple-check-suite": {
            after?: string | null;
            app?: components["schemas"]["integration"];
            before?: string | null;
            conclusion?: "success" | "failure" | "neutral" | "cancelled" | "skipped" | "timed_out" | "action_required" | "stale" | "startup_failure" | null;
            created_at?: string;
            head_branch?: string | null;
            head_sha?: string;
            id?: number;
            node_id?: string;
            pull_requests?: components["schemas"]["pull-request-minimal"][];
            repository?: components["schemas"]["minimal-repository"];
            status?: "queued" | "in_progress" | "completed" | "pending" | "waiting";
            updated_at?: string;
            url?: string;
        };
        "check-run-with-simple-check-suite": {
            app: null | components["schemas"]["integration"];
            check_suite: components["schemas"]["simple-check-suite"];
            completed_at: string | null;
            conclusion: "waiting" | "pending" | "startup_failure" | "stale" | "success" | "failure" | "neutral" | "cancelled" | "skipped" | "timed_out" | "action_required" | null;
            deployment?: components["schemas"]["deployment-simple"];
            details_url: string;
            external_id: string;
            head_sha: string;
            html_url: string;
            id: number;
            name: string;
            node_id: string;
            output: {
                annotations_count: number;
                annotations_url: string;
                summary: string | null;
                text: string | null;
                title: string | null;
            };
            pull_requests: components["schemas"]["pull-request-minimal"][];
            started_at: string;
            status: "queued" | "in_progress" | "completed" | "pending";
            url: string;
        };
        discussion: {
            active_lock_reason: string | null;
            answer_chosen_at: string | null;
            answer_chosen_by: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            answer_html_url: string | null;
            author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
            body: string;
            category: {
                created_at: string;
                description: string;
                emoji: string;
                id: number;
                is_answerable: boolean;
                name: string;
                node_id?: string;
                repository_id: number;
                slug: string;
                updated_at: string;
            };
            comments: number;
            created_at: string;
            html_url: string;
            id: number;
            locked: boolean;
            node_id: string;
            number: number;
            reactions?: {
                "+1": number;
                "-1": number;
                confused: number;
                eyes: number;
                heart: number;
                hooray: number;
                laugh: number;
                rocket: number;
                total_count: number;
                url: string;
            };
            repository_url: string;
            state: "open" | "closed" | "locked" | "converting" | "transferring";
            state_reason: "resolved" | "outdated" | "duplicate" | "reopened" | null;
            timeline_url?: string;
            title: string;
            updated_at: string;
            user: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
        };
        "merge-group": {
            head_sha: string;
            head_ref: string;
            base_sha: string;
            base_ref: string;
            head_commit: components["schemas"]["simple-commit"];
        };
        "personal-access-token-request": {
            id: number;
            owner: components["schemas"]["simple-user"];
            permissions_added: {
                organization?: {
                    [key: string]: string;
                };
                repository?: {
                    [key: string]: string;
                };
                other?: {
                    [key: string]: string;
                };
            };
            permissions_upgraded: {
                organization?: {
                    [key: string]: string;
                };
                repository?: {
                    [key: string]: string;
                };
                other?: {
                    [key: string]: string;
                };
            };
            permissions_result: {
                organization?: {
                    [key: string]: string;
                };
                repository?: {
                    [key: string]: string;
                };
                other?: {
                    [key: string]: string;
                };
            };
            repository_selection: "none" | "all" | "subset";
            repository_count: number | null;
            repositories: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[] | null;
            created_at: string;
            token_expired: boolean;
            token_expires_at: string | null;
            token_last_used_at: string | null;
        };
        "projects-v2": {
            id: number;
            node_id: string;
            owner: components["schemas"]["simple-user"];
            creator: components["schemas"]["simple-user"];
            title: string;
            description: string | null;
            public: boolean;
            closed_at: string | null;
            created_at: string;
            updated_at: string;
            number: number;
            short_description: string | null;
            deleted_at: string | null;
            deleted_by: null | components["schemas"]["simple-user"];
        };
        "projects-v2-item-content-type": "Issue" | "PullRequest" | "DraftIssue";
        "projects-v2-item": {
            id: number;
            node_id?: string;
            project_node_id?: string;
            content_node_id: string;
            content_type: components["schemas"]["projects-v2-item-content-type"];
            creator?: components["schemas"]["simple-user"];
            created_at: string;
            updated_at: string;
            archived_at: string | null;
        };
        "secret-scanning-alert-resolution-webhook": "false_positive" | "wont_fix" | "revoked" | "used_in_tests" | "pattern_deleted" | "pattern_edited" | null;
        "secret-scanning-alert-webhook": {
            number?: components["schemas"]["alert-number"];
            created_at?: components["schemas"]["alert-created-at"];
            updated_at?: null | components["schemas"]["alert-updated-at"];
            url?: components["schemas"]["alert-url"];
            html_url?: components["schemas"]["alert-html-url"];
            locations_url?: string;
            resolution?: components["schemas"]["secret-scanning-alert-resolution-webhook"];
            resolved_at?: string | null;
            resolved_by?: null | components["schemas"]["simple-user"];
            resolution_comment?: string | null;
            secret_type?: string;
            push_protection_bypassed?: boolean | null;
            push_protection_bypassed_by?: null | components["schemas"]["simple-user"];
            push_protection_bypassed_at?: string | null;
        };
        "webhook-branch-protection-rule-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            rule: {
                admin_enforced: boolean;
                allow_deletions_enforcement_level: "off" | "non_admins" | "everyone";
                allow_force_pushes_enforcement_level: "off" | "non_admins" | "everyone";
                authorized_actor_names: string[];
                authorized_actors_only: boolean;
                authorized_dismissal_actors_only: boolean;
                create_protected?: boolean;
                created_at: string;
                dismiss_stale_reviews_on_push: boolean;
                id: number;
                ignore_approvals_from_contributors: boolean;
                linear_history_requirement_enforcement_level: "off" | "non_admins" | "everyone";
                merge_queue_enforcement_level: "off" | "non_admins" | "everyone";
                name: string;
                pull_request_reviews_enforcement_level: "off" | "non_admins" | "everyone";
                repository_id: number;
                require_code_owner_review: boolean;
                require_last_push_approval?: boolean;
                required_approving_review_count: number;
                required_conversation_resolution_level: "off" | "non_admins" | "everyone";
                required_deployments_enforcement_level: "off" | "non_admins" | "everyone";
                required_status_checks: string[];
                required_status_checks_enforcement_level: "off" | "non_admins" | "everyone";
                signature_requirement_enforcement_level: "off" | "non_admins" | "everyone";
                strict_required_status_checks_policy: boolean;
                updated_at: string;
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-branch-protection-rule-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            rule: {
                admin_enforced: boolean;
                allow_deletions_enforcement_level: "off" | "non_admins" | "everyone";
                allow_force_pushes_enforcement_level: "off" | "non_admins" | "everyone";
                authorized_actor_names: string[];
                authorized_actors_only: boolean;
                authorized_dismissal_actors_only: boolean;
                create_protected?: boolean;
                created_at: string;
                dismiss_stale_reviews_on_push: boolean;
                id: number;
                ignore_approvals_from_contributors: boolean;
                linear_history_requirement_enforcement_level: "off" | "non_admins" | "everyone";
                merge_queue_enforcement_level: "off" | "non_admins" | "everyone";
                name: string;
                pull_request_reviews_enforcement_level: "off" | "non_admins" | "everyone";
                repository_id: number;
                require_code_owner_review: boolean;
                require_last_push_approval?: boolean;
                required_approving_review_count: number;
                required_conversation_resolution_level: "off" | "non_admins" | "everyone";
                required_deployments_enforcement_level: "off" | "non_admins" | "everyone";
                required_status_checks: string[];
                required_status_checks_enforcement_level: "off" | "non_admins" | "everyone";
                signature_requirement_enforcement_level: "off" | "non_admins" | "everyone";
                strict_required_status_checks_policy: boolean;
                updated_at: string;
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-branch-protection-rule-edited": {
            action: "edited";
            changes?: {
                admin_enforced?: {
                    from: boolean | null;
                };
                authorized_actor_names?: {
                    from: string[];
                };
                authorized_actors_only?: {
                    from: boolean | null;
                };
                authorized_dismissal_actors_only?: {
                    from: boolean | null;
                };
                linear_history_requirement_enforcement_level?: {
                    from: "off" | "non_admins" | "everyone";
                };
                required_status_checks?: {
                    from: string[];
                };
                required_status_checks_enforcement_level?: {
                    from: "off" | "non_admins" | "everyone";
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            rule: {
                admin_enforced: boolean;
                allow_deletions_enforcement_level: "off" | "non_admins" | "everyone";
                allow_force_pushes_enforcement_level: "off" | "non_admins" | "everyone";
                authorized_actor_names: string[];
                authorized_actors_only: boolean;
                authorized_dismissal_actors_only: boolean;
                create_protected?: boolean;
                created_at: string;
                dismiss_stale_reviews_on_push: boolean;
                id: number;
                ignore_approvals_from_contributors: boolean;
                linear_history_requirement_enforcement_level: "off" | "non_admins" | "everyone";
                merge_queue_enforcement_level: "off" | "non_admins" | "everyone";
                name: string;
                pull_request_reviews_enforcement_level: "off" | "non_admins" | "everyone";
                repository_id: number;
                require_code_owner_review: boolean;
                require_last_push_approval?: boolean;
                required_approving_review_count: number;
                required_conversation_resolution_level: "off" | "non_admins" | "everyone";
                required_deployments_enforcement_level: "off" | "non_admins" | "everyone";
                required_status_checks: string[];
                required_status_checks_enforcement_level: "off" | "non_admins" | "everyone";
                signature_requirement_enforcement_level: "off" | "non_admins" | "everyone";
                strict_required_status_checks_policy: boolean;
                updated_at: string;
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-check-run-completed": {
            action?: "completed";
            check_run: components["schemas"]["check-run-with-simple-check-suite"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-check-run-completed-form-encoded": {
            payload: string;
        };
        "webhook-check-run-created": {
            action?: "created";
            check_run: components["schemas"]["check-run-with-simple-check-suite"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-check-run-created-form-encoded": {
            payload: string;
        };
        "webhook-check-run-requested-action": {
            action: "requested_action";
            check_run: components["schemas"]["check-run-with-simple-check-suite"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            requested_action?: {
                identifier?: string;
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-check-run-requested-action-form-encoded": {
            payload: string;
        };
        "webhook-check-run-rerequested": {
            action?: "rerequested";
            check_run: components["schemas"]["check-run-with-simple-check-suite"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-check-run-rerequested-form-encoded": {
            payload: string;
        };
        "webhook-check-suite-completed": {
            action: "completed";
            check_suite: {
                after: string | null;
                app: {
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "merge_group" | "pull_request_review_thread" | "workflow_job" | "merge_queue_entry" | "security_and_analysis" | "projects_v2_item" | "secret_scanning_alert_location")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write" | "admin";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                };
                before: string | null;
                check_runs_url: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null | "skipped" | "startup_failure";
                created_at: string;
                head_branch: string | null;
                head_commit: {
                    author: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    committer: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    id: string;
                    message: string;
                    timestamp: string;
                    tree_id: string;
                };
                head_sha: string;
                id: number;
                latest_check_runs_count: number;
                node_id: string;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                rerequestable?: boolean;
                runs_rerequestable?: boolean;
                status: "requested" | "in_progress" | "completed" | "queued" | null | "pending";
                updated_at: string;
                url: string;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-check-suite-requested": {
            action: "requested";
            check_suite: {
                after: string | null;
                app: {
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "pull_request_review_thread" | "workflow_job" | "merge_queue_entry" | "security_and_analysis" | "secret_scanning_alert_location" | "projects_v2_item" | "merge_group" | "repository_import")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write" | "admin";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                };
                before: string | null;
                check_runs_url: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null | "skipped";
                created_at: string;
                head_branch: string | null;
                head_commit: {
                    author: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    committer: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    id: string;
                    message: string;
                    timestamp: string;
                    tree_id: string;
                };
                head_sha: string;
                id: number;
                latest_check_runs_count: number;
                node_id: string;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                rerequestable?: boolean;
                runs_rerequestable?: boolean;
                status: "requested" | "in_progress" | "completed" | "queued" | null;
                updated_at: string;
                url: string;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-check-suite-rerequested": {
            action: "rerequested";
            check_suite: {
                after: string | null;
                app: {
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "pull_request_review_thread" | "merge_queue_entry" | "workflow_job")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write" | "admin";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                };
                before: string | null;
                check_runs_url: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null;
                created_at: string;
                head_branch: string | null;
                head_commit: {
                    author: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    committer: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    id: string;
                    message: string;
                    timestamp: string;
                    tree_id: string;
                };
                head_sha: string;
                id: number;
                latest_check_runs_count: number;
                node_id: string;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                rerequestable?: boolean;
                runs_rerequestable?: boolean;
                status: "requested" | "in_progress" | "completed" | "queued" | null;
                updated_at: string;
                url: string;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-code-scanning-alert-appeared-in-branch": {
            action: "appeared_in_branch";
            alert: {
                created_at: string;
                dismissed_at: string | null;
                dismissed_by: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                dismissed_reason: "false positive" | "won't fix" | "used in tests" | null;
                html_url: string;
                most_recent_instance?: ({
                    analysis_key: string;
                    category?: string;
                    classifications?: string[];
                    commit_sha?: string;
                    environment: string;
                    location?: {
                        end_column?: number;
                        end_line?: number;
                        path?: string;
                        start_column?: number;
                        start_line?: number;
                    };
                    message?: {
                        text?: string;
                    };
                    ref: string;
                    state: "open" | "dismissed" | "fixed";
                }) | null;
                number: number;
                rule: {
                    description: string;
                    id: string;
                    severity: "none" | "note" | "warning" | "error" | null;
                };
                state: "open" | "dismissed" | "fixed";
                tool: {
                    name: string;
                    version: string | null;
                };
                url: string;
            };
            commit_oid: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            ref: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-code-scanning-alert-closed-by-user": {
            action: "closed_by_user";
            alert: {
                created_at: string;
                dismissed_at: string;
                dismissed_by: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                dismissed_reason: "false positive" | "won't fix" | "used in tests" | null;
                html_url: string;
                most_recent_instance?: ({
                    analysis_key: string;
                    category?: string;
                    classifications?: string[];
                    commit_sha?: string;
                    environment: string;
                    location?: {
                        end_column?: number;
                        end_line?: number;
                        path?: string;
                        start_column?: number;
                        start_line?: number;
                    };
                    message?: {
                        text?: string;
                    };
                    ref: string;
                    state: "open" | "dismissed" | "fixed";
                }) | null;
                number: number;
                rule: {
                    description: string;
                    full_description?: string;
                    help?: string | null;
                    help_uri?: string | null;
                    id: string;
                    name?: string;
                    severity: "none" | "note" | "warning" | "error" | null;
                    tags?: string[] | null;
                };
                state: "dismissed" | "fixed";
                tool: {
                    guid?: string | null;
                    name: string;
                    version: string | null;
                };
                url: string;
            };
            commit_oid: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            ref: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-code-scanning-alert-created": {
            action: "created";
            alert: {
                created_at: string | null;
                dismissed_at: null;
                dismissed_by: null;
                dismissed_comment?: components["schemas"]["code-scanning-alert-dismissed-comment"];
                dismissed_reason: null;
                fixed_at?: null;
                html_url: string;
                instances_url?: string;
                most_recent_instance?: ({
                    analysis_key: string;
                    category?: string;
                    classifications?: string[];
                    commit_sha?: string;
                    environment: string;
                    location?: {
                        end_column?: number;
                        end_line?: number;
                        path?: string;
                        start_column?: number;
                        start_line?: number;
                    };
                    message?: {
                        text?: string;
                    };
                    ref: string;
                    state: "open" | "dismissed" | "fixed";
                }) | null;
                number: number;
                rule: {
                    description: string;
                    full_description?: string;
                    help?: string | null;
                    help_uri?: string | null;
                    id: string;
                    name?: string;
                    severity: "none" | "note" | "warning" | "error" | null;
                    tags?: string[] | null;
                };
                state: "open" | "dismissed";
                tool: ({
                    guid?: string | null;
                    name: string;
                    version: string | null;
                }) | null;
                updated_at?: string | null;
                url: string;
            };
            commit_oid: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            ref: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-code-scanning-alert-fixed": {
            action: "fixed";
            alert: {
                created_at: string;
                dismissed_at: string | null;
                dismissed_by: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                dismissed_reason: "false positive" | "won't fix" | "used in tests" | null;
                html_url: string;
                instances_url?: string;
                most_recent_instance?: ({
                    analysis_key: string;
                    category?: string;
                    classifications?: string[];
                    commit_sha?: string;
                    environment: string;
                    location?: {
                        end_column?: number;
                        end_line?: number;
                        path?: string;
                        start_column?: number;
                        start_line?: number;
                    };
                    message?: {
                        text?: string;
                    };
                    ref: string;
                    state: "open" | "dismissed" | "fixed";
                }) | null;
                number: number;
                rule: {
                    description: string;
                    full_description?: string;
                    help?: string | null;
                    help_uri?: string | null;
                    id: string;
                    name?: string;
                    severity: "none" | "note" | "warning" | "error" | null;
                    tags?: string[] | null;
                };
                state: "fixed";
                tool: {
                    guid?: string | null;
                    name: string;
                    version: string | null;
                };
                url: string;
            };
            commit_oid: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            ref: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-code-scanning-alert-reopened": {
            action: "reopened";
            alert: ({
                created_at: string;
                dismissed_at: string | null;
                dismissed_by: Record<string, never> | null;
                dismissed_reason: string | null;
                html_url: string;
                most_recent_instance?: ({
                    analysis_key: string;
                    category?: string;
                    classifications?: string[];
                    commit_sha?: string;
                    environment: string;
                    location?: {
                        end_column?: number;
                        end_line?: number;
                        path?: string;
                        start_column?: number;
                        start_line?: number;
                    };
                    message?: {
                        text?: string;
                    };
                    ref: string;
                    state: "open" | "dismissed" | "fixed";
                }) | null;
                number: number;
                rule: {
                    description: string;
                    full_description?: string;
                    help?: string | null;
                    help_uri?: string | null;
                    id: string;
                    name?: string;
                    severity: "none" | "note" | "warning" | "error" | null;
                    tags?: string[] | null;
                };
                state: "open" | "dismissed" | "fixed";
                tool: {
                    guid?: string | null;
                    name: string;
                    version: string | null;
                };
                url: string;
            }) | null;
            commit_oid: string | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            ref: string | null;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-code-scanning-alert-reopened-by-user": {
            action: "reopened_by_user";
            alert: {
                created_at: string;
                dismissed_at: null;
                dismissed_by: null;
                dismissed_reason: null;
                html_url: string;
                most_recent_instance?: ({
                    analysis_key: string;
                    category?: string;
                    classifications?: string[];
                    commit_sha?: string;
                    environment: string;
                    location?: {
                        end_column?: number;
                        end_line?: number;
                        path?: string;
                        start_column?: number;
                        start_line?: number;
                    };
                    message?: {
                        text?: string;
                    };
                    ref: string;
                    state: "open" | "dismissed" | "fixed";
                }) | null;
                number: number;
                rule: {
                    description: string;
                    id: string;
                    severity: "none" | "note" | "warning" | "error" | null;
                };
                state: "open" | "fixed";
                tool: {
                    name: string;
                    version: string | null;
                };
                url: string;
            };
            commit_oid: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            ref: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-commit-comment-created": {
            action: "created";
            comment: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                commit_id: string;
                created_at: string;
                html_url: string;
                id: number;
                line: number | null;
                node_id: string;
                path: string | null;
                position: number | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-create": {
            description: string | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            master_branch: string;
            organization?: components["schemas"]["organization-simple"];
            pusher_type: string;
            ref: string;
            ref_type: "tag" | "branch";
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-delete": {
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pusher_type: string;
            ref: string;
            ref_type: "tag" | "branch";
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-dependabot-alert-auto-dismissed": {
            action: "auto_dismissed";
            alert: components["schemas"]["dependabot-alert"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            enterprise?: components["schemas"]["enterprise"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-dependabot-alert-auto-reopened": {
            action: "auto_reopened";
            alert: components["schemas"]["dependabot-alert"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            enterprise?: components["schemas"]["enterprise"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-dependabot-alert-created": {
            action: "created";
            alert: components["schemas"]["dependabot-alert"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            enterprise?: components["schemas"]["enterprise"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-dependabot-alert-dismissed": {
            action: "dismissed";
            alert: components["schemas"]["dependabot-alert"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            enterprise?: components["schemas"]["enterprise"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-dependabot-alert-fixed": {
            action: "fixed";
            alert: components["schemas"]["dependabot-alert"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            enterprise?: components["schemas"]["enterprise"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-dependabot-alert-reintroduced": {
            action: "reintroduced";
            alert: components["schemas"]["dependabot-alert"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            enterprise?: components["schemas"]["enterprise"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-dependabot-alert-reopened": {
            action: "reopened";
            alert: components["schemas"]["dependabot-alert"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            enterprise?: components["schemas"]["enterprise"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-deploy-key-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            key: {
                added_by?: string | null;
                created_at: string;
                id: number;
                key: string;
                last_used?: string | null;
                read_only: boolean;
                title: string;
                url: string;
                verified: boolean;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-deploy-key-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            key: {
                added_by?: string | null;
                created_at: string;
                id: number;
                key: string;
                last_used?: string | null;
                read_only: boolean;
                title: string;
                url: string;
                verified: boolean;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-deployment-created": {
            action: "created";
            deployment: {
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                description: string | null;
                environment: string;
                id: number;
                node_id: string;
                original_environment: string;
                payload: Record<string, never> | string;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "workflow_job" | "pull_request_review_thread" | "merge_queue_entry" | "secret_scanning_alert_location" | "merge_group")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                production_environment?: boolean;
                ref: string;
                repository_url: string;
                sha: string;
                statuses_url: string;
                task: string;
                transient_environment?: boolean;
                updated_at: string;
                url: string;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow: {
                badge_url: string;
                created_at: string;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                path: string;
                state: string;
                updated_at: string;
                url: string;
            } | null;
            workflow_run: ({
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url?: string;
                cancel_url?: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url?: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null;
                created_at: string;
                display_title: string;
                event: string;
                head_branch: string;
                head_commit?: null;
                head_repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url?: string;
                logs_url?: string;
                name: string;
                node_id: string;
                path: string;
                previous_attempt_url?: null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                rerun_url?: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "waiting" | "pending";
                triggering_actor?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url?: string;
            }) | null;
        };
        "webhook-deployment-protection-rule-requested": {
            action?: "requested";
            environment?: string;
            event?: string;
            deployment_callback_url?: string;
            deployment?: components["schemas"]["deployment"];
            pull_requests?: components["schemas"]["pull-request"][];
            repository?: components["schemas"]["repository"];
            organization?: components["schemas"]["organization-simple"];
            installation?: components["schemas"]["simple-installation"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-deployment-review-approved": {
            action: "approved";
            approver?: {
                avatar_url?: string;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id?: number;
                login?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: string;
                url?: string;
            };
            comment?: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            reviewers?: ({
                reviewer?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                type?: "User";
            })[];
            sender: components["schemas"]["simple-user"];
            since: string;
            workflow_job_run?: {
                conclusion: null;
                created_at: string;
                environment: string;
                html_url: string;
                id: number;
                name: null;
                status: string;
                updated_at: string;
            };
            workflow_job_runs?: ({
                conclusion?: null;
                created_at?: string;
                environment?: string;
                html_url?: string;
                id?: number;
                name?: string | null;
                status?: string;
                updated_at?: string;
            })[];
            workflow_run: ({
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url?: string;
                cancel_url?: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url?: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null;
                created_at: string;
                display_title: string;
                event: string;
                head_branch: string;
                head_commit?: Record<string, never> | null;
                head_repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url?: string;
                logs_url?: string;
                name: string;
                node_id: string;
                path: string;
                previous_attempt_url?: string | null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                rerun_url?: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "waiting" | "pending";
                triggering_actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url?: string;
            }) | null;
        };
        "webhook-deployment-review-rejected": {
            action: "rejected";
            approver?: {
                avatar_url?: string;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id?: number;
                login?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: string;
                url?: string;
            };
            comment?: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            reviewers?: ({
                reviewer?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                type?: "User";
            })[];
            sender: components["schemas"]["simple-user"];
            since: string;
            workflow_job_run?: {
                conclusion: null;
                created_at: string;
                environment: string;
                html_url: string;
                id: number;
                name: null;
                status: string;
                updated_at: string;
            };
            workflow_job_runs?: ({
                conclusion?: string | null;
                created_at?: string;
                environment?: string;
                html_url?: string;
                id?: number;
                name?: string | null;
                status?: string;
                updated_at?: string;
            })[];
            workflow_run: ({
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url?: string;
                cancel_url?: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url?: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null;
                created_at: string;
                event: string;
                head_branch: string;
                head_commit?: Record<string, never> | null;
                head_repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url?: string;
                logs_url?: string;
                name: string;
                node_id: string;
                path: string;
                previous_attempt_url?: string | null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                rerun_url?: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "waiting";
                triggering_actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url?: string;
                display_title: string;
            }) | null;
        };
        "webhook-deployment-review-requested": {
            action: "requested";
            enterprise?: components["schemas"]["enterprise"];
            environment: string;
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            requestor: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            reviewers: ({
                reviewer?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login?: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                type?: "User" | "Team";
            })[];
            sender: components["schemas"]["simple-user"];
            since: string;
            workflow_job_run: {
                conclusion: null;
                created_at: string;
                environment: string;
                html_url: string;
                id: number;
                name: string | null;
                status: string;
                updated_at: string;
            };
            workflow_run: ({
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url?: string;
                cancel_url?: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url?: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null;
                created_at: string;
                event: string;
                head_branch: string;
                head_commit?: Record<string, never> | null;
                head_repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url?: string;
                logs_url?: string;
                name: string;
                node_id: string;
                path: string;
                previous_attempt_url?: string | null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                rerun_url?: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "waiting" | "pending";
                triggering_actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url?: string;
                display_title: string;
            }) | null;
        };
        "webhook-deployment-status-created": {
            action: "created";
            check_run?: ({
                completed_at: string | null;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | "skipped" | null;
                details_url: string;
                external_id: string;
                head_sha: string;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                started_at: string;
                status: "queued" | "in_progress" | "completed" | "waiting" | "pending";
                url: string;
            }) | null;
            deployment: {
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                description: string | null;
                environment: string;
                id: number;
                node_id: string;
                original_environment: string;
                payload: string | Record<string, never> | null;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "merge_queue_entry" | "workflow_job" | "pull_request_review_thread" | "secret_scanning_alert_location" | "merge_group")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                production_environment?: boolean;
                ref: string;
                repository_url: string;
                sha: string;
                statuses_url: string;
                task: string;
                transient_environment?: boolean;
                updated_at: string;
                url: string;
            };
            deployment_status: {
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                deployment_url: string;
                description: string;
                environment: string;
                environment_url?: string;
                id: number;
                log_url?: string;
                node_id: string;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "pull_request_review_thread" | "merge_queue_entry" | "workflow_job" | "merge_group" | "secret_scanning_alert_location")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                repository_url: string;
                state: string;
                target_url: string;
                updated_at: string;
                url: string;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow?: {
                badge_url: string;
                created_at: string;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                path: string;
                state: string;
                updated_at: string;
                url: string;
            } | null;
            workflow_run?: ({
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url?: string;
                cancel_url?: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url?: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null | "startup_failure";
                created_at: string;
                display_title: string;
                event: string;
                head_branch: string;
                head_commit?: null;
                head_repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url?: string;
                logs_url?: string;
                name: string;
                node_id: string;
                path: string;
                previous_attempt_url?: null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                rerun_url?: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "waiting" | "pending";
                triggering_actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url?: string;
            }) | null;
        };
        "webhook-discussion-answered": {
            action: "answered";
            answer: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                child_comment_count: number;
                created_at: string;
                discussion_id: number;
                html_url: string;
                id: number;
                node_id: string;
                parent_id: null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                updated_at: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-category-changed": {
            action: "category_changed";
            changes: {
                category: {
                    from: {
                        created_at: string;
                        description: string;
                        emoji: string;
                        id: number;
                        is_answerable: boolean;
                        name: string;
                        node_id?: string;
                        repository_id: number;
                        slug: string;
                        updated_at: string;
                    };
                };
            };
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-closed": {
            action: "closed";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-comment-created": {
            action: "created";
            comment: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                child_comment_count: number;
                created_at: string;
                discussion_id: number;
                html_url: string;
                id: number;
                node_id: string;
                parent_id: number | null;
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                updated_at: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-comment-deleted": {
            action: "deleted";
            comment: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                child_comment_count: number;
                created_at: string;
                discussion_id: number;
                html_url: string;
                id: number;
                node_id: string;
                parent_id: number | null;
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                updated_at: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-comment-edited": {
            action: "edited";
            changes: {
                body: {
                    from: string;
                };
            };
            comment: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                child_comment_count: number;
                created_at: string;
                discussion_id: number;
                html_url: string;
                id: number;
                node_id: string;
                parent_id: number | null;
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                updated_at: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-created": {
            action: "created";
            discussion: ({
                active_lock_reason: string | null;
                answer_chosen_at: string | null;
                answer_chosen_by: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                answer_html_url: string | null;
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                category: {
                    created_at: string;
                    description: string;
                    emoji: string;
                    id: number;
                    is_answerable: boolean;
                    name: string;
                    node_id?: string;
                    repository_id: number;
                    slug: string;
                    updated_at: string;
                };
                comments: number;
                created_at: string;
                html_url: string;
                id: number;
                locked: boolean;
                node_id: string;
                number: number;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state: "open" | "locked" | "converting" | "transferring";
                timeline_url?: string;
                title: string;
                updated_at: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: null;
                answer_chosen_at: null;
                answer_chosen_by: null;
                answer_html_url: string | null;
                author_association?: string;
                body?: string | null;
                category?: {
                    created_at?: string;
                    description?: string;
                    emoji?: string;
                    id?: number;
                    is_answerable?: boolean;
                    name?: string;
                    node_id?: string;
                    repository_id?: number;
                    slug?: string;
                    updated_at?: string;
                };
                comments?: number;
                created_at?: string;
                html_url?: string;
                id?: number;
                locked: false;
                node_id?: string;
                number?: number;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state: "open" | "converting" | "transferring";
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-deleted": {
            action: "deleted";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-edited": {
            action: "edited";
            changes?: {
                body?: {
                    from: string;
                };
                title?: {
                    from: string;
                };
            };
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-labeled": {
            action: "labeled";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            label: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-locked": {
            action: "locked";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-pinned": {
            action: "pinned";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-reopened": {
            action: "reopened";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-transferred": {
            action: "transferred";
            changes: {
                new_discussion: components["schemas"]["discussion"];
                new_repository: components["schemas"]["repository"];
            };
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-unanswered": {
            action: "unanswered";
            discussion: components["schemas"]["discussion"];
            old_answer: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                child_comment_count: number;
                created_at: string;
                discussion_id: number;
                html_url: string;
                id: number;
                node_id: string;
                parent_id: null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                updated_at: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-discussion-unlabeled": {
            action: "unlabeled";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            label: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-unlocked": {
            action: "unlocked";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-discussion-unpinned": {
            action: "unpinned";
            discussion: components["schemas"]["discussion"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-fork": {
            enterprise?: components["schemas"]["enterprise"];
            forkee: ({
                allow_auto_merge?: boolean;
                allow_forking?: boolean;
                allow_merge_commit?: boolean;
                allow_rebase_merge?: boolean;
                allow_squash_merge?: boolean;
                allow_update_branch?: boolean;
                archive_url: string;
                archived: boolean;
                assignees_url: string;
                blobs_url: string;
                branches_url: string;
                clone_url: string;
                collaborators_url: string;
                comments_url: string;
                commits_url: string;
                compare_url: string;
                contents_url: string;
                contributors_url: string;
                created_at: number | string;
                default_branch: string;
                delete_branch_on_merge?: boolean;
                deployments_url: string;
                description: string | null;
                disabled?: boolean;
                downloads_url: string;
                events_url: string;
                fork: boolean;
                forks: number;
                forks_count: number;
                forks_url: string;
                full_name: string;
                git_commits_url: string;
                git_refs_url: string;
                git_tags_url: string;
                git_url: string;
                has_downloads: boolean;
                has_issues: boolean;
                has_pages: boolean;
                has_projects: boolean;
                has_wiki: boolean;
                homepage: string | null;
                hooks_url: string;
                html_url: string;
                id: number;
                is_template?: boolean;
                issue_comment_url: string;
                issue_events_url: string;
                issues_url: string;
                keys_url: string;
                labels_url: string;
                language: string | null;
                languages_url: string;
                license: ({
                    key: string;
                    name: string;
                    node_id: string;
                    spdx_id: string;
                    url: string | null;
                }) | null;
                master_branch?: string;
                merges_url: string;
                milestones_url: string;
                mirror_url: string | null;
                name: string;
                node_id: string;
                notifications_url: string;
                open_issues: number;
                open_issues_count: number;
                organization?: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                permissions?: {
                    admin: boolean;
                    maintain?: boolean;
                    pull: boolean;
                    push: boolean;
                    triage?: boolean;
                };
                private: boolean;
                public?: boolean;
                pulls_url: string;
                pushed_at: number | string | null;
                releases_url: string;
                role_name?: string | null;
                size: number;
                ssh_url: string;
                stargazers?: number;
                stargazers_count: number;
                stargazers_url: string;
                statuses_url: string;
                subscribers_url: string;
                subscription_url: string;
                svn_url: string;
                tags_url: string;
                teams_url: string;
                topics: string[];
                trees_url: string;
                updated_at: string;
                url: string;
                visibility: "public" | "private" | "internal";
                watchers: number;
                watchers_count: number;
                web_commit_signoff_required?: boolean;
            }) & ({
                allow_forking?: boolean;
                archive_url?: string;
                archived?: boolean;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                clone_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                created_at?: string;
                default_branch?: string;
                deployments_url?: string;
                description?: string | null;
                disabled?: boolean;
                downloads_url?: string;
                events_url?: string;
                fork?: true;
                forks?: number;
                forks_count?: number;
                forks_url?: string;
                full_name?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                has_downloads?: boolean;
                has_issues?: boolean;
                has_pages?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                homepage?: string | null;
                hooks_url?: string;
                html_url?: string;
                id?: number;
                is_template?: boolean;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                language?: null;
                languages_url?: string;
                license?: Record<string, never> | null;
                merges_url?: string;
                milestones_url?: string;
                mirror_url?: null;
                name?: string;
                node_id?: string;
                notifications_url?: string;
                open_issues?: number;
                open_issues_count?: number;
                owner?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                private?: boolean;
                public?: boolean;
                pulls_url?: string;
                pushed_at?: string;
                releases_url?: string;
                size?: number;
                ssh_url?: string;
                stargazers_count?: number;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                svn_url?: string;
                tags_url?: string;
                teams_url?: string;
                topics?: null[];
                trees_url?: string;
                updated_at?: string;
                url?: string;
                visibility?: string;
                watchers?: number;
                watchers_count?: number;
            });
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-github-app-authorization-revoked": {
            action: "revoked";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-gollum": {
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pages: ({
                action: "created" | "edited";
                html_url: string;
                page_name: string;
                sha: string;
                summary: string | null;
                title: string;
            })[];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-installation-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["installation"];
            organization?: components["schemas"]["organization-simple"];
            repositories?: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repository?: components["schemas"]["repository"];
            requester?: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            sender: components["schemas"]["simple-user"];
        };
        "webhook-installation-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["installation"];
            organization?: components["schemas"]["organization-simple"];
            repositories?: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repository?: components["schemas"]["repository"];
            requester?: null;
            sender: components["schemas"]["simple-user"];
        };
        "webhook-installation-new-permissions-accepted": {
            action: "new_permissions_accepted";
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["installation"];
            organization?: components["schemas"]["organization-simple"];
            repositories?: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repository?: components["schemas"]["repository"];
            requester?: null;
            sender: components["schemas"]["simple-user"];
        };
        "webhook-installation-repositories-added": {
            action: "added";
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["installation"];
            organization?: components["schemas"]["organization-simple"];
            repositories_added: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repositories_removed: {
                full_name?: string;
                id?: number;
                name?: string;
                node_id?: string;
                private?: boolean;
            }[];
            repository?: components["schemas"]["repository"];
            repository_selection: "all" | "selected";
            requester: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            sender: components["schemas"]["simple-user"];
        };
        "webhook-installation-repositories-removed": {
            action: "removed";
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["installation"];
            organization?: components["schemas"]["organization-simple"];
            repositories_added: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repositories_removed: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repository?: components["schemas"]["repository"];
            repository_selection: "all" | "selected";
            requester: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            sender: components["schemas"]["simple-user"];
        };
        "webhook-installation-suspend": {
            action: "suspend";
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["installation"];
            organization?: components["schemas"]["organization-simple"];
            repositories?: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repository?: components["schemas"]["repository"];
            requester?: null;
            sender: components["schemas"]["simple-user"];
        };
        "webhook-installation-target-renamed": {
            account: {
                archived_at?: string | null;
                avatar_url: string;
                created_at?: string;
                description?: null;
                events_url?: string;
                followers?: number;
                followers_url?: string;
                following?: number;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                has_organization_projects?: boolean;
                has_repository_projects?: boolean;
                hooks_url?: string;
                html_url: string;
                id: number;
                is_verified?: boolean;
                issues_url?: string;
                login?: string;
                members_url?: string;
                name?: string;
                node_id: string;
                organizations_url?: string;
                public_gists?: number;
                public_members_url?: string;
                public_repos?: number;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                slug?: string;
                starred_url?: string;
                subscriptions_url?: string;
                type?: string;
                updated_at?: string;
                url?: string;
                website_url?: null;
            };
            action: "renamed";
            changes: {
                login?: {
                    from: string;
                };
                slug?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
            target_type: string;
        };
        "webhook-installation-unsuspend": {
            action: "unsuspend";
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["installation"];
            organization?: components["schemas"]["organization-simple"];
            repositories?: {
                full_name: string;
                id: number;
                name: string;
                node_id: string;
                private: boolean;
            }[];
            repository?: components["schemas"]["repository"];
            requester?: null;
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issue-comment-created": {
            action: "created";
            comment: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                created_at: string;
                html_url: string;
                id: number;
                issue_url: string;
                node_id: string;
                performed_via_github_app: null | components["schemas"]["integration"];
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder" | "pull_request_review_thread")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write" | "admin";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: string | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url?: string;
                locked: boolean;
                milestone?: Record<string, never> | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state: "open" | "closed";
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issue-comment-deleted": {
            action: "deleted";
            comment: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                created_at: string;
                html_url: string;
                id: number;
                issue_url: string;
                node_id: string;
                performed_via_github_app: null | components["schemas"]["integration"];
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: string | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url?: string;
                locked: boolean;
                milestone?: Record<string, never> | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state: "open" | "closed";
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issue-comment-edited": {
            action: "edited";
            changes: {
                body?: {
                    from: string;
                };
            };
            comment: {
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                created_at: string;
                html_url: string;
                id: number;
                issue_url: string;
                node_id: string;
                performed_via_github_app: null | components["schemas"]["integration"];
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder" | "pull_request_review_thread")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: string | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url?: string;
                locked: boolean;
                milestone?: Record<string, never> | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state: "open" | "closed";
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-assigned": {
            action: "assigned";
            assignee?: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder" | "pull_request_review_thread")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-closed": {
            action: "closed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "security_and_analysis" | "reminder" | "pull_request_review_thread")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: string | null;
                assignee?: Record<string, never> | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels?: (Record<string, never> | null)[];
                labels_url?: string;
                locked?: boolean;
                milestone?: Record<string, never> | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state: "closed" | "open";
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-demilestoned": {
            action: "demilestoned";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: string | null;
                assignee?: Record<string, never> | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels?: (Record<string, never> | null)[];
                labels_url?: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state?: string;
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            milestone?: {
                closed_at: string | null;
                closed_issues: number;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                description: string | null;
                due_on: string | null;
                html_url: string;
                id: number;
                labels_url: string;
                node_id: string;
                number: number;
                open_issues: number;
                state: "open" | "closed";
                title: string;
                updated_at: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-edited": {
            action: "edited";
            changes: {
                body?: {
                    from: string;
                };
                title?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "security_and_analysis" | "pull_request_review_thread" | "reminder")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            label?: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-labeled": {
            action: "labeled";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "pull_request_review_thread" | "reminder")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            label?: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-locked": {
            action: "locked";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder" | "security_and_analysis")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: Record<string, never> | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels?: (Record<string, never> | null)[];
                labels_url?: string;
                locked: true;
                milestone?: Record<string, never> | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state?: string;
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-milestoned": {
            action: "milestoned";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: string | null;
                assignee?: Record<string, never> | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels?: (Record<string, never> | null)[];
                labels_url?: string;
                locked?: boolean;
                milestone: {
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                };
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state?: string;
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            milestone: {
                closed_at: string | null;
                closed_issues: number;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                description: string | null;
                due_on: string | null;
                html_url: string;
                id: number;
                labels_url: string;
                node_id: string;
                number: number;
                open_issues: number;
                state: "open" | "closed";
                title: string;
                updated_at: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-opened": {
            action: "opened";
            changes?: {
                old_issue: ({
                    active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                    assignee?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    assignees: (({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null)[];
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    body: string | null;
                    closed_at: string | null;
                    comments: number;
                    comments_url: string;
                    created_at: string;
                    draft?: boolean;
                    events_url: string;
                    html_url: string;
                    id: number;
                    labels?: ({
                        color: string;
                        default: boolean;
                        description: string | null;
                        id: number;
                        name: string;
                        node_id: string;
                        url: string;
                    })[];
                    labels_url: string;
                    locked?: boolean;
                    milestone: ({
                        closed_at: string | null;
                        closed_issues: number;
                        created_at: string;
                        creator: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        description: string | null;
                        due_on: string | null;
                        html_url: string;
                        id: number;
                        labels_url: string;
                        node_id: string;
                        number: number;
                        open_issues: number;
                        state: "open" | "closed";
                        title: string;
                        updated_at: string;
                        url: string;
                    }) | null;
                    node_id: string;
                    number: number;
                    performed_via_github_app?: ({
                        created_at: string | null;
                        description: string | null;
                        events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                        external_url: string | null;
                        html_url: string;
                        id: number | null;
                        name: string;
                        node_id: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            actions?: "read" | "write";
                            administration?: "read" | "write";
                            checks?: "read" | "write";
                            content_references?: "read" | "write";
                            contents?: "read" | "write";
                            deployments?: "read" | "write";
                            discussions?: "read" | "write";
                            emails?: "read" | "write";
                            environments?: "read" | "write";
                            issues?: "read" | "write";
                            keys?: "read" | "write";
                            members?: "read" | "write";
                            metadata?: "read" | "write";
                            organization_administration?: "read" | "write";
                            organization_hooks?: "read" | "write";
                            organization_packages?: "read" | "write";
                            organization_plan?: "read" | "write";
                            organization_projects?: "read" | "write";
                            organization_secrets?: "read" | "write";
                            organization_self_hosted_runners?: "read" | "write";
                            organization_user_blocking?: "read" | "write";
                            packages?: "read" | "write";
                            pages?: "read" | "write";
                            pull_requests?: "read" | "write";
                            repository_hooks?: "read" | "write";
                            repository_projects?: "read" | "write";
                            secret_scanning_alerts?: "read" | "write";
                            secrets?: "read" | "write";
                            security_events?: "read" | "write";
                            security_scanning_alert?: "read" | "write";
                            single_file?: "read" | "write";
                            statuses?: "read" | "write";
                            team_discussions?: "read" | "write";
                            vulnerability_alerts?: "read" | "write";
                            workflows?: "read" | "write";
                        };
                        slug?: string;
                        updated_at: string | null;
                    }) | null;
                    pull_request?: {
                        diff_url?: string;
                        html_url?: string;
                        merged_at?: string | null;
                        patch_url?: string;
                        url?: string;
                    };
                    reactions: {
                        "+1": number;
                        "-1": number;
                        confused: number;
                        eyes: number;
                        heart: number;
                        hooray: number;
                        laugh: number;
                        rocket: number;
                        total_count: number;
                        url: string;
                    };
                    repository_url: string;
                    state?: "open" | "closed";
                    state_reason?: string | null;
                    timeline_url?: string;
                    title: string;
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                }) | null;
                old_repository: {
                    allow_auto_merge?: boolean;
                    allow_forking?: boolean;
                    allow_merge_commit?: boolean;
                    allow_rebase_merge?: boolean;
                    allow_squash_merge?: boolean;
                    allow_update_branch?: boolean;
                    archive_url: string;
                    archived: boolean;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    clone_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    created_at: number | string;
                    default_branch: string;
                    delete_branch_on_merge?: boolean;
                    deployments_url: string;
                    description: string | null;
                    disabled?: boolean;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks: number;
                    forks_count: number;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    git_url: string;
                    has_downloads: boolean;
                    has_issues: boolean;
                    has_pages: boolean;
                    has_projects: boolean;
                    has_wiki: boolean;
                    homepage: string | null;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    is_template?: boolean;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    language: string | null;
                    languages_url: string;
                    license: ({
                        key: string;
                        name: string;
                        node_id: string;
                        spdx_id: string;
                        url: string | null;
                    }) | null;
                    master_branch?: string;
                    merges_url: string;
                    milestones_url: string;
                    mirror_url: string | null;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    open_issues: number;
                    open_issues_count: number;
                    organization?: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        admin: boolean;
                        maintain?: boolean;
                        pull: boolean;
                        push: boolean;
                        triage?: boolean;
                    };
                    private: boolean;
                    public?: boolean;
                    pulls_url: string;
                    pushed_at: number | string | null;
                    releases_url: string;
                    role_name?: string | null;
                    size: number;
                    ssh_url: string;
                    stargazers?: number;
                    stargazers_count: number;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    svn_url: string;
                    tags_url: string;
                    teams_url: string;
                    topics: string[];
                    trees_url: string;
                    updated_at: string;
                    url: string;
                    visibility: "public" | "private" | "internal";
                    watchers: number;
                    watchers_count: number;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "security_and_analysis" | "pull_request_review_thread" | "reminder")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-pinned": {
            action: "pinned";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-reopened": {
            action: "reopened";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "pull_request_review_thread" | "reminder")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write" | "admin";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason?: string | null;
                assignee?: Record<string, never> | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels?: (Record<string, never> | null)[];
                labels_url?: string;
                locked?: boolean;
                milestone?: Record<string, never> | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: Record<string, never> | null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state: "open" | "closed";
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-transferred": {
            action: "transferred";
            changes: {
                new_issue: {
                    active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                    assignee?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    assignees: (({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null)[];
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    body: string | null;
                    closed_at: string | null;
                    comments: number;
                    comments_url: string;
                    created_at: string;
                    draft?: boolean;
                    events_url: string;
                    html_url: string;
                    id: number;
                    labels?: ({
                        color: string;
                        default: boolean;
                        description: string | null;
                        id: number;
                        name: string;
                        node_id: string;
                        url: string;
                    })[];
                    labels_url: string;
                    locked?: boolean;
                    milestone: ({
                        closed_at: string | null;
                        closed_issues: number;
                        created_at: string;
                        creator: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        description: string | null;
                        due_on: string | null;
                        html_url: string;
                        id: number;
                        labels_url: string;
                        node_id: string;
                        number: number;
                        open_issues: number;
                        state: "open" | "closed";
                        title: string;
                        updated_at: string;
                        url: string;
                    }) | null;
                    node_id: string;
                    number: number;
                    performed_via_github_app?: ({
                        created_at: string | null;
                        description: string | null;
                        events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                        external_url: string | null;
                        html_url: string;
                        id: number | null;
                        name: string;
                        node_id: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            actions?: "read" | "write";
                            administration?: "read" | "write";
                            checks?: "read" | "write";
                            content_references?: "read" | "write";
                            contents?: "read" | "write";
                            deployments?: "read" | "write";
                            discussions?: "read" | "write";
                            emails?: "read" | "write";
                            environments?: "read" | "write";
                            issues?: "read" | "write";
                            keys?: "read" | "write";
                            members?: "read" | "write";
                            metadata?: "read" | "write";
                            organization_administration?: "read" | "write";
                            organization_hooks?: "read" | "write";
                            organization_packages?: "read" | "write";
                            organization_plan?: "read" | "write";
                            organization_projects?: "read" | "write";
                            organization_secrets?: "read" | "write";
                            organization_self_hosted_runners?: "read" | "write";
                            organization_user_blocking?: "read" | "write";
                            packages?: "read" | "write";
                            pages?: "read" | "write";
                            pull_requests?: "read" | "write";
                            repository_hooks?: "read" | "write";
                            repository_projects?: "read" | "write";
                            secret_scanning_alerts?: "read" | "write";
                            secrets?: "read" | "write";
                            security_events?: "read" | "write";
                            security_scanning_alert?: "read" | "write";
                            single_file?: "read" | "write";
                            statuses?: "read" | "write";
                            team_discussions?: "read" | "write";
                            vulnerability_alerts?: "read" | "write";
                            workflows?: "read" | "write";
                        };
                        slug?: string;
                        updated_at: string | null;
                    }) | null;
                    pull_request?: {
                        diff_url?: string;
                        html_url?: string;
                        merged_at?: string | null;
                        patch_url?: string;
                        url?: string;
                    };
                    reactions: {
                        "+1": number;
                        "-1": number;
                        confused: number;
                        eyes: number;
                        heart: number;
                        hooray: number;
                        laugh: number;
                        rocket: number;
                        total_count: number;
                        url: string;
                    };
                    repository_url: string;
                    state?: "open" | "closed";
                    state_reason?: string | null;
                    timeline_url?: string;
                    title: string;
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                new_repository: {
                    allow_auto_merge?: boolean;
                    allow_forking?: boolean;
                    allow_merge_commit?: boolean;
                    allow_rebase_merge?: boolean;
                    allow_squash_merge?: boolean;
                    allow_update_branch?: boolean;
                    archive_url: string;
                    archived: boolean;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    clone_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    created_at: number | string;
                    default_branch: string;
                    delete_branch_on_merge?: boolean;
                    deployments_url: string;
                    description: string | null;
                    disabled?: boolean;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks: number;
                    forks_count: number;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    git_url: string;
                    has_downloads: boolean;
                    has_issues: boolean;
                    has_pages: boolean;
                    has_projects: boolean;
                    has_wiki: boolean;
                    has_discussions: boolean;
                    homepage: string | null;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    is_template?: boolean;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    language: string | null;
                    languages_url: string;
                    license: ({
                        key: string;
                        name: string;
                        node_id: string;
                        spdx_id: string;
                        url: string | null;
                    }) | null;
                    master_branch?: string;
                    merges_url: string;
                    milestones_url: string;
                    mirror_url: string | null;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    open_issues: number;
                    open_issues_count: number;
                    organization?: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        admin: boolean;
                        maintain?: boolean;
                        pull: boolean;
                        push: boolean;
                        triage?: boolean;
                    };
                    private: boolean;
                    public?: boolean;
                    pulls_url: string;
                    pushed_at: number | string | null;
                    releases_url: string;
                    role_name?: string | null;
                    size: number;
                    ssh_url: string;
                    stargazers?: number;
                    stargazers_count: number;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    svn_url: string;
                    tags_url: string;
                    teams_url: string;
                    topics: string[];
                    trees_url: string;
                    updated_at: string;
                    url: string;
                    visibility: "public" | "private" | "internal";
                    watchers: number;
                    watchers_count: number;
                    web_commit_signoff_required?: boolean;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-unassigned": {
            action: "unassigned";
            assignee?: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization" | "Mannequin";
                url?: string;
            }) | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder" | "pull_request_review_thread")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-unlabeled": {
            action: "unlabeled";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run" | "reminder" | "pull_request_review_thread")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write" | "admin";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            label?: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-unlocked": {
            action: "unlocked";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: ({
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            }) & ({
                active_lock_reason: null;
                assignee?: Record<string, never> | null;
                assignees?: (Record<string, never> | null)[];
                author_association?: string;
                body?: string | null;
                closed_at?: string | null;
                comments?: number;
                comments_url?: string;
                created_at?: string;
                events_url?: string;
                html_url?: string;
                id?: number;
                labels?: (Record<string, never> | null)[];
                labels_url?: string;
                locked: false;
                milestone?: Record<string, never> | null;
                node_id?: string;
                number?: number;
                performed_via_github_app?: null;
                reactions?: {
                    "+1"?: number;
                    "-1"?: number;
                    confused?: number;
                    eyes?: number;
                    heart?: number;
                    hooray?: number;
                    laugh?: number;
                    rocket?: number;
                    total_count?: number;
                    url?: string;
                };
                repository_url?: string;
                state?: string;
                timeline_url?: string;
                title?: string;
                updated_at?: string;
                url?: string;
                user?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
            });
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-issues-unpinned": {
            action: "unpinned";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            issue: {
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                closed_at: string | null;
                comments: number;
                comments_url: string;
                created_at: string;
                draft?: boolean;
                events_url: string;
                html_url: string;
                id: number;
                labels?: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                labels_url: string;
                locked?: boolean;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                performed_via_github_app?: ({
                    created_at: string | null;
                    description: string | null;
                    events?: ("branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "content_reference" | "create" | "delete" | "deployment" | "deployment_review" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "milestone" | "organization" | "org_block" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "push" | "registry_package" | "release" | "repository" | "repository_dispatch" | "secret_scanning_alert" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_dispatch" | "workflow_run")[];
                    external_url: string | null;
                    html_url: string;
                    id: number | null;
                    name: string;
                    node_id: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    permissions?: {
                        actions?: "read" | "write";
                        administration?: "read" | "write";
                        checks?: "read" | "write";
                        content_references?: "read" | "write";
                        contents?: "read" | "write";
                        deployments?: "read" | "write";
                        discussions?: "read" | "write";
                        emails?: "read" | "write";
                        environments?: "read" | "write";
                        issues?: "read" | "write";
                        keys?: "read" | "write";
                        members?: "read" | "write";
                        metadata?: "read" | "write";
                        organization_administration?: "read" | "write";
                        organization_hooks?: "read" | "write";
                        organization_packages?: "read" | "write";
                        organization_plan?: "read" | "write";
                        organization_projects?: "read" | "write";
                        organization_secrets?: "read" | "write";
                        organization_self_hosted_runners?: "read" | "write";
                        organization_user_blocking?: "read" | "write";
                        packages?: "read" | "write";
                        pages?: "read" | "write";
                        pull_requests?: "read" | "write";
                        repository_hooks?: "read" | "write";
                        repository_projects?: "read" | "write";
                        secret_scanning_alerts?: "read" | "write";
                        secrets?: "read" | "write";
                        security_events?: "read" | "write";
                        security_scanning_alert?: "read" | "write";
                        single_file?: "read" | "write";
                        statuses?: "read" | "write";
                        team_discussions?: "read" | "write";
                        vulnerability_alerts?: "read" | "write";
                        workflows?: "read" | "write";
                    };
                    slug?: string;
                    updated_at: string | null;
                }) | null;
                pull_request?: {
                    diff_url?: string;
                    html_url?: string;
                    merged_at?: string | null;
                    patch_url?: string;
                    url?: string;
                };
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                repository_url: string;
                state?: "open" | "closed";
                state_reason?: string | null;
                timeline_url?: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-label-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            label: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-label-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            label: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-label-edited": {
            action: "edited";
            changes?: {
                color?: {
                    from: string;
                };
                description?: {
                    from: string;
                };
                name?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            label: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-marketplace-purchase-cancelled": {
            action: "cancelled";
            effective_date: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            marketplace_purchase: ({
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: string | null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            }) & ({
                account?: {
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organization_billing_email?: string | null;
                    type?: string;
                };
                billing_cycle?: string;
                free_trial_ends_on?: string | null;
                next_billing_date: string | null;
                on_free_trial?: boolean;
                plan?: {
                    bullets?: (string | null)[];
                    description?: string;
                    has_free_trial?: boolean;
                    id?: number;
                    monthly_price_in_cents?: number;
                    name?: string;
                    price_model?: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name?: string | null;
                    yearly_price_in_cents?: number;
                };
                unit_count?: number;
            });
            organization?: components["schemas"]["organization-simple"];
            previous_marketplace_purchase?: {
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-marketplace-purchase-changed": {
            action: "changed";
            effective_date: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            marketplace_purchase: ({
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: string | null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            }) & ({
                account?: {
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organization_billing_email?: string | null;
                    type?: string;
                };
                billing_cycle?: string;
                free_trial_ends_on?: string | null;
                next_billing_date: string | null;
                on_free_trial?: boolean;
                plan?: {
                    bullets?: (string | null)[];
                    description?: string;
                    has_free_trial?: boolean;
                    id?: number;
                    monthly_price_in_cents?: number;
                    name?: string;
                    price_model?: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name?: string | null;
                    yearly_price_in_cents?: number;
                };
                unit_count?: number;
            });
            organization?: components["schemas"]["organization-simple"];
            previous_marketplace_purchase?: {
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: string | null;
                next_billing_date?: string | null;
                on_free_trial: boolean | null;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-marketplace-purchase-pending-change": {
            action: "pending_change";
            effective_date: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            marketplace_purchase: ({
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: string | null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            }) & ({
                account?: {
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organization_billing_email?: string | null;
                    type?: string;
                };
                billing_cycle?: string;
                free_trial_ends_on?: string | null;
                next_billing_date: string | null;
                on_free_trial?: boolean;
                plan?: {
                    bullets?: (string | null)[];
                    description?: string;
                    has_free_trial?: boolean;
                    id?: number;
                    monthly_price_in_cents?: number;
                    name?: string;
                    price_model?: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name?: string | null;
                    yearly_price_in_cents?: number;
                };
                unit_count?: number;
            });
            organization?: components["schemas"]["organization-simple"];
            previous_marketplace_purchase?: {
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: string | null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-marketplace-purchase-pending-change-cancelled": {
            action: "pending_change_cancelled";
            effective_date: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            marketplace_purchase: ({
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            }) & {
                next_billing_date: string;
            };
            organization?: components["schemas"]["organization-simple"];
            previous_marketplace_purchase?: {
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-marketplace-purchase-purchased": {
            action: "purchased";
            effective_date: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            marketplace_purchase: ({
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: string | null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            }) & ({
                account?: {
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organization_billing_email?: string | null;
                    type?: string;
                };
                billing_cycle?: string;
                free_trial_ends_on?: string | null;
                next_billing_date: string | null;
                on_free_trial?: boolean;
                plan?: {
                    bullets?: (string | null)[];
                    description?: string;
                    has_free_trial?: boolean;
                    id?: number;
                    monthly_price_in_cents?: number;
                    name?: string;
                    price_model?: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name?: string | null;
                    yearly_price_in_cents?: number;
                };
                unit_count?: number;
            });
            organization?: components["schemas"]["organization-simple"];
            previous_marketplace_purchase?: {
                account: {
                    id: number;
                    login: string;
                    node_id: string;
                    organization_billing_email: string | null;
                    type: string;
                };
                billing_cycle: string;
                free_trial_ends_on: null;
                next_billing_date?: string | null;
                on_free_trial: boolean;
                plan: {
                    bullets: string[];
                    description: string;
                    has_free_trial: boolean;
                    id: number;
                    monthly_price_in_cents: number;
                    name: string;
                    price_model: "FREE" | "FLAT_RATE" | "PER_UNIT";
                    unit_name: string | null;
                    yearly_price_in_cents: number;
                };
                unit_count: number;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-member-added": {
            action: "added";
            changes?: {
                permission?: {
                    to: "write" | "admin" | "read";
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            member: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-member-edited": {
            action: "edited";
            changes: {
                old_permission?: {
                    from: string;
                };
                permission?: {
                    from?: string | null;
                    to?: string | null;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            member: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-member-removed": {
            action: "removed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            member: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-membership-added": {
            action: "added";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            member: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            scope: "team";
            sender: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-membership-removed": {
            action: "removed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            member: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            scope: "team" | "organization";
            sender: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-merge-group-checks-requested": {
            action: "checks_requested";
            installation?: components["schemas"]["simple-installation"];
            merge_group: components["schemas"]["merge-group"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-merge-group-destroyed": {
            action: "destroyed";
            reason?: "merged" | "invalidated" | "dequeued";
            installation?: components["schemas"]["simple-installation"];
            merge_group: components["schemas"]["merge-group"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-meta-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            hook: {
                active: boolean;
                config: {
                    content_type: "json" | "form";
                    insecure_ssl: string;
                    secret?: string;
                    url: string;
                };
                created_at: string;
                events: ("*" | "branch_protection_rule" | "check_run" | "check_suite" | "code_scanning_alert" | "commit_comment" | "create" | "delete" | "deployment" | "deployment_status" | "deploy_key" | "discussion" | "discussion_comment" | "fork" | "gollum" | "issues" | "issue_comment" | "label" | "member" | "membership" | "meta" | "milestone" | "organization" | "org_block" | "package" | "page_build" | "project" | "project_card" | "project_column" | "public" | "pull_request" | "pull_request_review" | "pull_request_review_comment" | "pull_request_review_thread" | "push" | "registry_package" | "release" | "repository" | "repository_import" | "repository_vulnerability_alert" | "secret_scanning_alert" | "secret_scanning_alert_location" | "security_and_analysis" | "star" | "status" | "team" | "team_add" | "watch" | "workflow_job" | "workflow_run" | "repository_dispatch" | "projects_v2_item")[];
                id: number;
                name: string;
                type: string;
                updated_at: string;
            };
            hook_id: number;
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: null | components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-milestone-closed": {
            action: "closed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            milestone: {
                closed_at: string | null;
                closed_issues: number;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                description: string | null;
                due_on: string | null;
                html_url: string;
                id: number;
                labels_url: string;
                node_id: string;
                number: number;
                open_issues: number;
                state: "open" | "closed";
                title: string;
                updated_at: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-milestone-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            milestone: {
                closed_at: string | null;
                closed_issues: number;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                description: string | null;
                due_on: string | null;
                html_url: string;
                id: number;
                labels_url: string;
                node_id: string;
                number: number;
                open_issues: number;
                state: "open" | "closed";
                title: string;
                updated_at: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-milestone-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            milestone: {
                closed_at: string | null;
                closed_issues: number;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                description: string | null;
                due_on: string | null;
                html_url: string;
                id: number;
                labels_url: string;
                node_id: string;
                number: number;
                open_issues: number;
                state: "open" | "closed";
                title: string;
                updated_at: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-milestone-edited": {
            action: "edited";
            changes: {
                description?: {
                    from: string;
                };
                due_on?: {
                    from: string;
                };
                title?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            milestone: {
                closed_at: string | null;
                closed_issues: number;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                description: string | null;
                due_on: string | null;
                html_url: string;
                id: number;
                labels_url: string;
                node_id: string;
                number: number;
                open_issues: number;
                state: "open" | "closed";
                title: string;
                updated_at: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-milestone-opened": {
            action: "opened";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            milestone: {
                closed_at: string | null;
                closed_issues: number;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                description: string | null;
                due_on: string | null;
                html_url: string;
                id: number;
                labels_url: string;
                node_id: string;
                number: number;
                open_issues: number;
                state: "open" | "closed";
                title: string;
                updated_at: string;
                url: string;
            };
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-org-block-blocked": {
            action: "blocked";
            blocked_user: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-org-block-unblocked": {
            action: "unblocked";
            blocked_user: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-organization-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            membership?: {
                organization_url: string;
                role: string;
                state: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-organization-member-added": {
            action: "member_added";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            membership: {
                organization_url: string;
                role: string;
                state: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-organization-member-invited": {
            action: "member_invited";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            invitation: {
                created_at: string;
                email: string | null;
                failed_at: string | null;
                failed_reason: string | null;
                id: number;
                invitation_teams_url: string;
                inviter: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                login: string | null;
                node_id: string;
                role: string;
                team_count: number;
                invitation_source?: string;
            };
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            user?: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
        };
        "webhook-organization-member-removed": {
            action: "member_removed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            membership: {
                organization_url: string;
                role: string;
                state: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-organization-renamed": {
            action: "renamed";
            changes?: {
                login?: {
                    from?: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            membership?: {
                organization_url: string;
                role: string;
                state: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            organization: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-rubygems-metadata": {
            name?: string;
            description?: string;
            readme?: string;
            homepage?: string;
            version_info?: {
                version?: string;
            };
            platform?: string;
            metadata?: {
                [key: string]: string;
            };
            repo?: string;
            dependencies?: {
                [key: string]: string;
            }[];
            commit_oid?: string;
        };
        "webhook-package-published": {
            action: "published";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            package: {
                created_at: string | null;
                description: string | null;
                ecosystem: string;
                html_url: string;
                id: number;
                name: string;
                namespace: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                package_type: string;
                package_version: ({
                    author?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    body?: string | Record<string, never>;
                    body_html?: string;
                    container_metadata?: ({
                        labels?: Record<string, never> | null;
                        manifest?: Record<string, never> | null;
                        tag?: {
                            digest?: string;
                            name?: string;
                        };
                    }) | null;
                    created_at?: string;
                    description: string;
                    docker_metadata?: {
                        tags?: string[];
                    }[];
                    draft?: boolean;
                    html_url: string;
                    id: number;
                    installation_command: string;
                    manifest?: string;
                    metadata: {
                        [key: string]: unknown;
                    }[];
                    name: string;
                    npm_metadata?: ({
                        name?: string;
                        version?: string;
                        npm_user?: string;
                        author?: Record<string, never> | null;
                        bugs?: Record<string, never> | null;
                        dependencies?: Record<string, never>;
                        dev_dependencies?: Record<string, never>;
                        peer_dependencies?: Record<string, never>;
                        optional_dependencies?: Record<string, never>;
                        description?: string;
                        dist?: Record<string, never> | null;
                        git_head?: string;
                        homepage?: string;
                        license?: string;
                        main?: string;
                        repository?: Record<string, never> | null;
                        scripts?: Record<string, never>;
                        id?: string;
                        node_version?: string;
                        npm_version?: string;
                        has_shrinkwrap?: boolean;
                        maintainers?: Record<string, never>[];
                        contributors?: Record<string, never>[];
                        engines?: Record<string, never>;
                        keywords?: string[];
                        files?: string[];
                        bin?: Record<string, never>;
                        man?: Record<string, never>;
                        directories?: Record<string, never> | null;
                        os?: string[];
                        cpu?: string[];
                        readme?: string;
                        installation_command?: string;
                        release_id?: number;
                        commit_oid?: string;
                        published_via_actions?: boolean;
                        deleted_by_id?: number;
                    }) | null;
                    nuget_metadata?: (({
                        id?: number | string;
                        name?: string;
                        value?: OneOf<[
                            boolean,
                            string,
                            number,
                            {
                                url?: string;
                                branch?: string;
                                commit?: string;
                                type?: string;
                            }
                        ]>;
                    })[]) | null;
                    package_files: ({
                        content_type: string;
                        created_at: string;
                        download_url: string;
                        id: number;
                        md5: string | null;
                        name: string;
                        sha1: string | null;
                        sha256: string | null;
                        size: number;
                        state: string | null;
                        updated_at: string;
                    })[];
                    package_url?: string;
                    prerelease?: boolean;
                    release?: {
                        author: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        created_at: string;
                        draft: boolean;
                        html_url: string;
                        id: number;
                        name: string | null;
                        prerelease: boolean;
                        published_at: string;
                        tag_name: string;
                        target_commitish: string;
                        url: string;
                    };
                    rubygems_metadata?: components["schemas"]["webhook-rubygems-metadata"][];
                    source_url?: string;
                    summary: string;
                    tag_name?: string;
                    target_commitish?: string;
                    target_oid?: string;
                    updated_at?: string;
                    version: string;
                }) | null;
                registry: {
                    about_url: string;
                    name: string;
                    type: string;
                    url: string;
                    vendor: string;
                } | null;
                updated_at: string | null;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-package-updated": {
            action: "updated";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            package: {
                created_at: string;
                description: string | null;
                ecosystem: string;
                html_url: string;
                id: number;
                name: string;
                namespace: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                package_type: string;
                package_version: {
                    author: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    body: string;
                    body_html: string;
                    created_at: string;
                    description: string;
                    docker_metadata?: {
                        tags?: string[];
                    }[];
                    draft?: boolean;
                    html_url: string;
                    id: number;
                    installation_command: string;
                    manifest?: string;
                    metadata: {
                        [key: string]: unknown;
                    }[];
                    name: string;
                    package_files: ({
                        content_type: string;
                        created_at: string;
                        download_url: string;
                        id: number;
                        md5: string | null;
                        name: string;
                        sha1: string | null;
                        sha256: string;
                        size: number;
                        state: string;
                        updated_at: string;
                    })[];
                    package_url?: string;
                    prerelease?: boolean;
                    release?: {
                        author: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        created_at: string;
                        draft: boolean;
                        html_url: string;
                        id: number;
                        name: string;
                        prerelease: boolean;
                        published_at: string;
                        tag_name: string;
                        target_commitish: string;
                        url: string;
                    };
                    rubygems_metadata?: components["schemas"]["webhook-rubygems-metadata"][];
                    source_url?: string;
                    summary: string;
                    tag_name?: string;
                    target_commitish: string;
                    target_oid: string;
                    updated_at: string;
                    version: string;
                };
                registry: {
                    about_url: string;
                    name: string;
                    type: string;
                    url: string;
                    vendor: string;
                } | null;
                updated_at: string;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-page-build": {
            build: {
                commit: string | null;
                created_at: string;
                duration: number;
                error: {
                    message: string | null;
                };
                pusher: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                status: string;
                updated_at: string;
                url: string;
            };
            enterprise?: components["schemas"]["enterprise"];
            id: number;
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-personal-access-token-request-approved": {
            action: "approved";
            personal_access_token_request: components["schemas"]["personal-access-token-request"];
            organization: components["schemas"]["organization-simple"];
            sender: components["schemas"]["simple-user"];
            installation: components["schemas"]["simple-installation"];
        };
        "webhook-personal-access-token-request-cancelled": {
            action: "cancelled";
            personal_access_token_request: components["schemas"]["personal-access-token-request"];
            organization: components["schemas"]["organization-simple"];
            sender: components["schemas"]["simple-user"];
            installation: components["schemas"]["simple-installation"];
        };
        "webhook-personal-access-token-request-created": {
            action: "created";
            personal_access_token_request: components["schemas"]["personal-access-token-request"];
            organization: components["schemas"]["organization-simple"];
            sender: components["schemas"]["simple-user"];
            installation: components["schemas"]["simple-installation"];
        };
        "webhook-personal-access-token-request-denied": {
            action: "denied";
            personal_access_token_request: components["schemas"]["personal-access-token-request"];
            organization: components["schemas"]["organization-simple"];
            sender: components["schemas"]["simple-user"];
            installation: components["schemas"]["simple-installation"];
        };
        "webhook-ping": {
            hook?: {
                active: boolean;
                app_id?: number;
                config: {
                    content_type?: components["schemas"]["webhook-config-content-type"];
                    insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                    secret?: components["schemas"]["webhook-config-secret"];
                    url?: components["schemas"]["webhook-config-url"];
                };
                created_at: string;
                deliveries_url?: string;
                events: string[];
                id: number;
                last_response?: components["schemas"]["hook-response"];
                name: "web";
                ping_url?: string;
                test_url?: string;
                type: string;
                updated_at: string;
                url?: string;
            };
            hook_id?: number;
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
            zen?: string;
        };
        "webhook-ping-form-encoded": {
            payload: string;
        };
        "webhook-project-card-converted": {
            action: "converted";
            changes: {
                note: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_card: {
                after_id?: number | null;
                archived: boolean;
                column_id: number;
                column_url: string;
                content_url?: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                id: number;
                node_id: string;
                note: string | null;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-card-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_card: {
                after_id?: number | null;
                archived: boolean;
                column_id: number;
                column_url: string;
                content_url?: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                id: number;
                node_id: string;
                note: string | null;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-card-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_card: {
                after_id?: number | null;
                archived: boolean;
                column_id: number | null;
                column_url: string;
                content_url?: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                id: number;
                node_id: string;
                note: string | null;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: null | components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-card-edited": {
            action: "edited";
            changes: {
                note: {
                    from: string | null;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_card: {
                after_id?: number | null;
                archived: boolean;
                column_id: number;
                column_url: string;
                content_url?: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                id: number;
                node_id: string;
                note: string | null;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-card-moved": {
            action: "moved";
            changes?: {
                column_id: {
                    from: number;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_card: ({
                after_id?: number | null;
                archived: boolean;
                column_id: number;
                column_url: string;
                content_url?: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                id: number;
                node_id: string;
                note: string | null;
                project_url: string;
                updated_at: string;
                url: string;
            }) & ({
                after_id: number | null;
                archived?: boolean;
                column_id?: number;
                column_url?: string;
                created_at?: string;
                creator?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                } | null;
                id?: number;
                node_id?: string;
                note?: string | null;
                project_url?: string;
                updated_at?: string;
                url?: string;
            });
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-closed": {
            action: "closed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project: {
                body: string | null;
                columns_url: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                number: number;
                owner_url: string;
                state: "open" | "closed";
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-column-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_column: {
                after_id?: number | null;
                cards_url: string;
                created_at: string;
                id: number;
                name: string;
                node_id: string;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-project-column-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_column: {
                after_id?: number | null;
                cards_url: string;
                created_at: string;
                id: number;
                name: string;
                node_id: string;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: null | components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-project-column-edited": {
            action: "edited";
            changes: {
                name?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_column: {
                after_id?: number | null;
                cards_url: string;
                created_at: string;
                id: number;
                name: string;
                node_id: string;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-project-column-moved": {
            action: "moved";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project_column: {
                after_id?: number | null;
                cards_url: string;
                created_at: string;
                id: number;
                name: string;
                node_id: string;
                project_url: string;
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project: {
                body: string | null;
                columns_url: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                number: number;
                owner_url: string;
                state: "open" | "closed";
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-project-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project: {
                body: string | null;
                columns_url: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                number: number;
                owner_url: string;
                state: "open" | "closed";
                updated_at: string;
                url: string;
            };
            repository?: null | components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-project-edited": {
            action: "edited";
            changes?: {
                body?: {
                    from: string;
                };
                name?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project: {
                body: string | null;
                columns_url: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                number: number;
                owner_url: string;
                state: "open" | "closed";
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-project-reopened": {
            action: "reopened";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            project: {
                body: string | null;
                columns_url: string;
                created_at: string;
                creator: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                number: number;
                owner_url: string;
                state: "open" | "closed";
                updated_at: string;
                url: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-project-closed": {
            action: "closed";
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2: components["schemas"]["projects-v2"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-project-created": {
            action: "created";
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2: components["schemas"]["projects-v2"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-project-deleted": {
            action: "deleted";
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2: components["schemas"]["projects-v2"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-project-edited": {
            action: "edited";
            changes: {
                description?: {
                    from?: string | null;
                    to?: string | null;
                };
                public?: {
                    from?: boolean;
                    to?: boolean;
                };
                short_description?: {
                    from?: string | null;
                    to?: string | null;
                };
                title?: {
                    from?: string;
                    to?: string;
                };
            };
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2: components["schemas"]["projects-v2"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-item-archived": {
            action: "archived";
            changes: {
                archived_at?: {
                    from?: string | null;
                    to?: string | null;
                };
            };
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2_item: components["schemas"]["projects-v2-item"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-item-converted": {
            action: "converted";
            changes: {
                content_type?: {
                    from?: string | null;
                    to?: string;
                };
            };
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2_item: components["schemas"]["projects-v2-item"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-item-created": {
            action: "created";
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2_item: components["schemas"]["projects-v2-item"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-item-deleted": {
            action: "deleted";
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2_item: components["schemas"]["projects-v2-item"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-item-edited": {
            action: "edited";
            changes?: OneOf<[
                {
                    field_value: {
                        field_node_id?: string;
                        field_type?: string;
                    };
                },
                {
                    body: {
                        from?: string | null;
                        to?: string | null;
                    };
                }
            ]>;
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2_item: components["schemas"]["projects-v2-item"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-item-reordered": {
            action: "reordered";
            changes: {
                previous_projects_v2_item_node_id?: {
                    from?: string | null;
                    to?: string | null;
                };
            };
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2_item: components["schemas"]["projects-v2-item"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-item-restored": {
            action: "restored";
            changes: {
                archived_at?: {
                    from?: string | null;
                    to?: string | null;
                };
            };
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2_item: components["schemas"]["projects-v2-item"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-projects-v2-project-reopened": {
            action: "reopened";
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            projects_v2: components["schemas"]["projects-v2"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-public": {
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-assigned": {
            action: "assigned";
            assignee: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization";
                url?: string;
            }) | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string | null;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-auto-merge-disabled": {
            action: "auto_merge_disabled";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_discussions: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            reason: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-auto-merge-enabled": {
            action: "auto_merge_enabled";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            reason?: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-closed": {
            action: "closed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: components["schemas"]["pull-request"] & ({
                allow_auto_merge?: boolean;
                allow_update_branch?: boolean;
                delete_branch_on_merge?: boolean;
                merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                use_squash_pr_title_as_default?: boolean;
            });
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-converted-to-draft": {
            action: "converted_to_draft";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: components["schemas"]["pull-request"] & ({
                allow_auto_merge?: boolean;
                allow_update_branch?: boolean;
                delete_branch_on_merge?: boolean;
                merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                use_squash_pr_title_as_default?: boolean;
            });
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-demilestoned": {
            action: "demilestoned";
            enterprise?: components["schemas"]["enterprise"];
            milestone?: components["schemas"]["milestone"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-dequeued": {
            action: "dequeued";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            reason: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-edited": {
            action: "edited";
            changes: {
                base?: {
                    ref: {
                        from: string;
                    };
                    sha: {
                        from: string;
                    };
                };
                body?: {
                    from: string;
                };
                title?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: components["schemas"]["pull-request"] & ({
                allow_auto_merge?: boolean;
                allow_update_branch?: boolean;
                delete_branch_on_merge?: boolean;
                merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                use_squash_pr_title_as_default?: boolean;
            });
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-enqueued": {
            action: "enqueued";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-labeled": {
            action: "labeled";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            label?: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string | null;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-locked": {
            action: "locked";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string | null;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-milestoned": {
            action: "milestoned";
            enterprise?: components["schemas"]["enterprise"];
            milestone?: components["schemas"]["milestone"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-opened": {
            action: "opened";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: components["schemas"]["pull-request"] & ({
                allow_auto_merge?: boolean;
                allow_update_branch?: boolean;
                delete_branch_on_merge?: boolean;
                merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                use_squash_pr_title_as_default?: boolean;
            });
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-ready-for-review": {
            action: "ready_for_review";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: components["schemas"]["pull-request"] & ({
                allow_auto_merge?: boolean;
                allow_update_branch?: boolean;
                delete_branch_on_merge?: boolean;
                merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                use_squash_pr_title_as_default?: boolean;
            });
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-reopened": {
            action: "reopened";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: components["schemas"]["pull-request"] & ({
                allow_auto_merge?: boolean;
                allow_update_branch?: boolean;
                delete_branch_on_merge?: boolean;
                merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                use_squash_pr_title_as_default?: boolean;
            });
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-review-comment-created": {
            action: "created";
            comment: {
                _links: {
                    html: {
                        href: string;
                    };
                    pull_request: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                };
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                commit_id: string;
                created_at: string;
                diff_hunk: string;
                html_url: string;
                id: number;
                in_reply_to_id?: number;
                line: number | null;
                node_id: string;
                original_commit_id: string;
                original_line: number | null;
                original_position: number;
                original_start_line: number | null;
                path: string;
                position: number | null;
                pull_request_review_id: number | null;
                pull_request_url: string;
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                side: "LEFT" | "RIGHT";
                start_line: number | null;
                start_side: "LEFT" | "RIGHT" | null;
                subject_type?: "line" | "file";
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge?: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft?: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions?: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-review-comment-deleted": {
            action: "deleted";
            comment: {
                _links: {
                    html: {
                        href: string;
                    };
                    pull_request: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                };
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                commit_id: string;
                created_at: string;
                diff_hunk: string;
                html_url: string;
                id: number;
                in_reply_to_id?: number;
                line: number | null;
                node_id: string;
                original_commit_id: string;
                original_line: number;
                original_position: number;
                original_start_line: number | null;
                path: string;
                position: number | null;
                pull_request_review_id: number | null;
                pull_request_url: string;
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                side: "LEFT" | "RIGHT";
                start_line: number | null;
                start_side: "LEFT" | "RIGHT" | null;
                subject_type?: "line" | "file";
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge?: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft?: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-review-comment-edited": {
            action: "edited";
            changes: {
                body?: {
                    from: string;
                };
            };
            comment: {
                _links: {
                    html: {
                        href: string;
                    };
                    pull_request: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                };
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string;
                commit_id: string;
                created_at: string;
                diff_hunk: string;
                html_url: string;
                id: number;
                in_reply_to_id?: number;
                line: number | null;
                node_id: string;
                original_commit_id: string;
                original_line: number;
                original_position: number;
                original_start_line: number | null;
                path: string;
                position: number | null;
                pull_request_review_id: number | null;
                pull_request_url: string;
                reactions: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                side: "LEFT" | "RIGHT";
                start_line: number | null;
                start_side: "LEFT" | "RIGHT" | null;
                subject_type?: "line" | "file";
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge?: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft?: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-review-dismissed": {
            action: "dismissed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            review: {
                _links: {
                    html: {
                        href: string;
                    };
                    pull_request: {
                        href: string;
                    };
                };
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                commit_id: string;
                html_url: string;
                id: number;
                node_id: string;
                pull_request_url: string;
                state: "dismissed" | "approved" | "changes_requested";
                submitted_at: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-review-edited": {
            action: "edited";
            changes: {
                body?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            review: {
                _links: {
                    html: {
                        href: string;
                    };
                    pull_request: {
                        href: string;
                    };
                };
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                commit_id: string;
                html_url: string;
                id: number;
                node_id: string;
                pull_request_url: string;
                state: string;
                submitted_at: string | null;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-review-request-removed": OneOf<[
            {
                action: "review_request_removed";
                enterprise?: components["schemas"]["enterprise"];
                installation?: components["schemas"]["simple-installation"];
                number: number;
                organization?: components["schemas"]["organization-simple"];
                pull_request: {
                    _links: {
                        comments: {
                            href: string;
                        };
                        commits: {
                            href: string;
                        };
                        html: {
                            href: string;
                        };
                        issue: {
                            href: string;
                        };
                        review_comment: {
                            href: string;
                        };
                        review_comments: {
                            href: string;
                        };
                        self: {
                            href: string;
                        };
                        statuses: {
                            href: string;
                        };
                    };
                    active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                    additions?: number;
                    assignee: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    assignees: (({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null)[];
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    auto_merge: ({
                        commit_message: string | null;
                        commit_title: string | null;
                        enabled_by: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        merge_method: "merge" | "squash" | "rebase";
                    }) | null;
                    base: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    body: string | null;
                    changed_files?: number;
                    closed_at: string | null;
                    comments?: number;
                    comments_url: string;
                    commits?: number;
                    commits_url: string;
                    created_at: string;
                    deletions?: number;
                    diff_url: string;
                    draft: boolean;
                    head: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    html_url: string;
                    id: number;
                    issue_url: string;
                    labels: ({
                        color: string;
                        default: boolean;
                        description: string | null;
                        id: number;
                        name: string;
                        node_id: string;
                        url: string;
                    })[];
                    locked: boolean;
                    maintainer_can_modify?: boolean;
                    merge_commit_sha: string | null;
                    mergeable?: boolean | null;
                    mergeable_state?: string;
                    merged?: boolean | null;
                    merged_at: string | null;
                    merged_by?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    milestone: ({
                        closed_at: string | null;
                        closed_issues: number;
                        created_at: string;
                        creator: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        description: string | null;
                        due_on: string | null;
                        html_url: string;
                        id: number;
                        labels_url: string;
                        node_id: string;
                        number: number;
                        open_issues: number;
                        state: "open" | "closed";
                        title: string;
                        updated_at: string;
                        url: string;
                    }) | null;
                    node_id: string;
                    number: number;
                    patch_url: string;
                    rebaseable?: boolean | null;
                    requested_reviewers: (OneOf<[
                        ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null,
                        {
                            deleted?: boolean;
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            parent?: ({
                                description: string | null;
                                html_url: string;
                                id: number;
                                members_url: string;
                                name: string;
                                node_id: string;
                                permission: string;
                                privacy: "open" | "closed" | "secret";
                                repositories_url: string;
                                slug: string;
                                url: string;
                            }) | null;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }
                    ]>)[];
                    requested_teams: ({
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    })[];
                    review_comment_url: string;
                    review_comments?: number;
                    review_comments_url: string;
                    state: "open" | "closed";
                    statuses_url: string;
                    title: string;
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                repository: components["schemas"]["repository"];
                requested_reviewer: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                sender: components["schemas"]["simple-user"];
            },
            {
                action: "review_request_removed";
                enterprise?: components["schemas"]["enterprise"];
                installation?: components["schemas"]["simple-installation"];
                number: number;
                organization?: components["schemas"]["organization-simple"];
                pull_request: {
                    _links: {
                        comments: {
                            href: string;
                        };
                        commits: {
                            href: string;
                        };
                        html: {
                            href: string;
                        };
                        issue: {
                            href: string;
                        };
                        review_comment: {
                            href: string;
                        };
                        review_comments: {
                            href: string;
                        };
                        self: {
                            href: string;
                        };
                        statuses: {
                            href: string;
                        };
                    };
                    active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                    additions?: number;
                    assignee: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    assignees: (({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null)[];
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    auto_merge: ({
                        commit_message: string | null;
                        commit_title: string | null;
                        enabled_by: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        merge_method: "merge" | "squash" | "rebase";
                    }) | null;
                    base: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    body: string | null;
                    changed_files?: number;
                    closed_at: string | null;
                    comments?: number;
                    comments_url: string;
                    commits?: number;
                    commits_url: string;
                    created_at: string;
                    deletions?: number;
                    diff_url: string;
                    draft: boolean;
                    head: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    html_url: string;
                    id: number;
                    issue_url: string;
                    labels: ({
                        color: string;
                        default: boolean;
                        description: string | null;
                        id: number;
                        name: string;
                        node_id: string;
                        url: string;
                    })[];
                    locked: boolean;
                    maintainer_can_modify?: boolean;
                    merge_commit_sha: string | null;
                    mergeable?: boolean | null;
                    mergeable_state?: string;
                    merged?: boolean | null;
                    merged_at: string | null;
                    merged_by?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    milestone: ({
                        closed_at: string | null;
                        closed_issues: number;
                        created_at: string;
                        creator: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        description: string | null;
                        due_on: string | null;
                        html_url: string;
                        id: number;
                        labels_url: string;
                        node_id: string;
                        number: number;
                        open_issues: number;
                        state: "open" | "closed";
                        title: string;
                        updated_at: string;
                        url: string;
                    }) | null;
                    node_id: string;
                    number: number;
                    patch_url: string;
                    rebaseable?: boolean | null;
                    requested_reviewers: (OneOf<[
                        ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null,
                        {
                            deleted?: boolean;
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            parent?: ({
                                description: string | null;
                                html_url: string;
                                id: number;
                                members_url: string;
                                name: string;
                                node_id: string;
                                permission: string;
                                privacy: "open" | "closed" | "secret";
                                repositories_url: string;
                                slug: string;
                                url: string;
                            }) | null;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }
                    ]>)[];
                    requested_teams: ({
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    })[];
                    review_comment_url: string;
                    review_comments?: number;
                    review_comments_url: string;
                    state: "open" | "closed";
                    statuses_url: string;
                    title: string;
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                repository: components["schemas"]["repository"];
                requested_team: {
                    deleted?: boolean;
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    repositories_url: string;
                    slug: string;
                    url: string;
                };
                sender: components["schemas"]["simple-user"];
            }
        ]>;
        "webhook-pull-request-review-requested": OneOf<[
            {
                action: "review_requested";
                enterprise?: components["schemas"]["enterprise"];
                installation?: components["schemas"]["simple-installation"];
                number: number;
                organization?: components["schemas"]["organization-simple"];
                pull_request: {
                    _links: {
                        comments: {
                            href: string;
                        };
                        commits: {
                            href: string;
                        };
                        html: {
                            href: string;
                        };
                        issue: {
                            href: string;
                        };
                        review_comment: {
                            href: string;
                        };
                        review_comments: {
                            href: string;
                        };
                        self: {
                            href: string;
                        };
                        statuses: {
                            href: string;
                        };
                    };
                    active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                    additions?: number;
                    assignee: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    assignees: (({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null)[];
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    auto_merge: ({
                        commit_message: string | null;
                        commit_title: string | null;
                        enabled_by: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        merge_method: "merge" | "squash" | "rebase";
                    }) | null;
                    base: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    body: string | null;
                    changed_files?: number;
                    closed_at: string | null;
                    comments?: number;
                    comments_url: string;
                    commits?: number;
                    commits_url: string;
                    created_at: string;
                    deletions?: number;
                    diff_url: string;
                    draft: boolean;
                    head: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    html_url: string;
                    id: number;
                    issue_url: string;
                    labels: ({
                        color: string;
                        default: boolean;
                        description: string | null;
                        id: number;
                        name: string;
                        node_id: string;
                        url: string;
                    })[];
                    locked: boolean;
                    maintainer_can_modify?: boolean;
                    merge_commit_sha: string | null;
                    mergeable?: boolean | null;
                    mergeable_state?: string;
                    merged?: boolean | null;
                    merged_at: string | null;
                    merged_by?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    milestone: ({
                        closed_at: string | null;
                        closed_issues: number;
                        created_at: string;
                        creator: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization" | "Mannequin";
                            url?: string;
                        }) | null;
                        description: string | null;
                        due_on: string | null;
                        html_url: string;
                        id: number;
                        labels_url: string;
                        node_id: string;
                        number: number;
                        open_issues: number;
                        state: "open" | "closed";
                        title: string;
                        updated_at: string;
                        url: string;
                    }) | null;
                    node_id: string;
                    number: number;
                    patch_url: string;
                    rebaseable?: boolean | null;
                    requested_reviewers: (OneOf<[
                        ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null,
                        {
                            deleted?: boolean;
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            parent?: ({
                                description: string | null;
                                html_url: string;
                                id: number;
                                members_url: string;
                                name: string;
                                node_id: string;
                                permission: string;
                                privacy: "open" | "closed" | "secret";
                                repositories_url: string;
                                slug: string;
                                url: string;
                            }) | null;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }
                    ]>)[];
                    requested_teams: ({
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    })[];
                    review_comment_url: string;
                    review_comments?: number;
                    review_comments_url: string;
                    state: "open" | "closed";
                    statuses_url: string;
                    title: string;
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                };
                repository: components["schemas"]["repository"];
                requested_reviewer: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                sender: components["schemas"]["simple-user"];
            },
            {
                action: "review_requested";
                enterprise?: components["schemas"]["enterprise"];
                installation?: components["schemas"]["simple-installation"];
                number: number;
                organization?: components["schemas"]["organization-simple"];
                pull_request: {
                    _links: {
                        comments: {
                            href: string;
                        };
                        commits: {
                            href: string;
                        };
                        html: {
                            href: string;
                        };
                        issue: {
                            href: string;
                        };
                        review_comment: {
                            href: string;
                        };
                        review_comments: {
                            href: string;
                        };
                        self: {
                            href: string;
                        };
                        statuses: {
                            href: string;
                        };
                    };
                    active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                    additions?: number;
                    assignee: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    assignees: (({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null)[];
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    auto_merge: ({
                        commit_message: string | null;
                        commit_title: string | null;
                        enabled_by: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        merge_method: "merge" | "squash" | "rebase";
                    }) | null;
                    base: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    body: string | null;
                    changed_files?: number;
                    closed_at: string | null;
                    comments?: number;
                    comments_url: string;
                    commits?: number;
                    commits_url: string;
                    created_at: string;
                    deletions?: number;
                    diff_url: string;
                    draft: boolean;
                    head: {
                        label: string;
                        ref: string;
                        repo: {
                            allow_auto_merge?: boolean;
                            allow_forking?: boolean;
                            allow_merge_commit?: boolean;
                            allow_rebase_merge?: boolean;
                            allow_squash_merge?: boolean;
                            allow_update_branch?: boolean;
                            archive_url: string;
                            archived: boolean;
                            assignees_url: string;
                            blobs_url: string;
                            branches_url: string;
                            clone_url: string;
                            collaborators_url: string;
                            comments_url: string;
                            commits_url: string;
                            compare_url: string;
                            contents_url: string;
                            contributors_url: string;
                            created_at: number | string;
                            default_branch: string;
                            delete_branch_on_merge?: boolean;
                            deployments_url: string;
                            description: string | null;
                            disabled?: boolean;
                            downloads_url: string;
                            events_url: string;
                            fork: boolean;
                            forks: number;
                            forks_count: number;
                            forks_url: string;
                            full_name: string;
                            git_commits_url: string;
                            git_refs_url: string;
                            git_tags_url: string;
                            git_url: string;
                            has_downloads: boolean;
                            has_issues: boolean;
                            has_pages: boolean;
                            has_projects: boolean;
                            has_wiki: boolean;
                            has_discussions: boolean;
                            homepage: string | null;
                            hooks_url: string;
                            html_url: string;
                            id: number;
                            is_template?: boolean;
                            issue_comment_url: string;
                            issue_events_url: string;
                            issues_url: string;
                            keys_url: string;
                            labels_url: string;
                            language: string | null;
                            languages_url: string;
                            license: ({
                                key: string;
                                name: string;
                                node_id: string;
                                spdx_id: string;
                                url: string | null;
                            }) | null;
                            master_branch?: string;
                            merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                            merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                            merges_url: string;
                            milestones_url: string;
                            mirror_url: string | null;
                            name: string;
                            node_id: string;
                            notifications_url: string;
                            open_issues: number;
                            open_issues_count: number;
                            organization?: string;
                            owner: ({
                                avatar_url?: string;
                                deleted?: boolean;
                                email?: string | null;
                                events_url?: string;
                                followers_url?: string;
                                following_url?: string;
                                gists_url?: string;
                                gravatar_id?: string;
                                html_url?: string;
                                id: number;
                                login: string;
                                name?: string;
                                node_id?: string;
                                organizations_url?: string;
                                received_events_url?: string;
                                repos_url?: string;
                                site_admin?: boolean;
                                starred_url?: string;
                                subscriptions_url?: string;
                                type?: "Bot" | "User" | "Organization";
                                url?: string;
                            }) | null;
                            permissions?: {
                                admin: boolean;
                                maintain?: boolean;
                                pull: boolean;
                                push: boolean;
                                triage?: boolean;
                            };
                            private: boolean;
                            public?: boolean;
                            pulls_url: string;
                            pushed_at: number | string | null;
                            releases_url: string;
                            role_name?: string | null;
                            size: number;
                            squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                            squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                            ssh_url: string;
                            stargazers?: number;
                            stargazers_count: number;
                            stargazers_url: string;
                            statuses_url: string;
                            subscribers_url: string;
                            subscription_url: string;
                            svn_url: string;
                            tags_url: string;
                            teams_url: string;
                            topics: string[];
                            trees_url: string;
                            updated_at: string;
                            url: string;
                            use_squash_pr_title_as_default?: boolean;
                            visibility: "public" | "private" | "internal";
                            watchers: number;
                            watchers_count: number;
                            web_commit_signoff_required?: boolean;
                        };
                        sha: string;
                        user: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                    html_url: string;
                    id: number;
                    issue_url: string;
                    labels: ({
                        color: string;
                        default: boolean;
                        description: string | null;
                        id: number;
                        name: string;
                        node_id: string;
                        url: string;
                    })[];
                    locked: boolean;
                    maintainer_can_modify?: boolean;
                    merge_commit_sha: string | null;
                    mergeable?: boolean | null;
                    mergeable_state?: string;
                    merged?: boolean | null;
                    merged_at: string | null;
                    merged_by?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    milestone: ({
                        closed_at: string | null;
                        closed_issues: number;
                        created_at: string;
                        creator: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization" | "Mannequin";
                            url?: string;
                        }) | null;
                        description: string | null;
                        due_on: string | null;
                        html_url: string;
                        id: number;
                        labels_url: string;
                        node_id: string;
                        number: number;
                        open_issues: number;
                        state: "open" | "closed";
                        title: string;
                        updated_at: string;
                        url: string;
                    }) | null;
                    node_id: string;
                    number: number;
                    patch_url: string;
                    rebaseable?: boolean | null;
                    requested_reviewers: (OneOf<[
                        ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null,
                        {
                            deleted?: boolean;
                            description?: string | null;
                            html_url?: string;
                            id: number;
                            members_url?: string;
                            name: string;
                            node_id?: string;
                            parent?: ({
                                description: string | null;
                                html_url: string;
                                id: number;
                                members_url: string;
                                name: string;
                                node_id: string;
                                permission: string;
                                privacy: "open" | "closed" | "secret";
                                repositories_url: string;
                                slug: string;
                                url: string;
                            }) | null;
                            permission?: string;
                            privacy?: "open" | "closed" | "secret";
                            repositories_url?: string;
                            slug?: string;
                            url?: string;
                        }
                    ]>)[];
                    requested_teams: ({
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    })[];
                    review_comment_url: string;
                    review_comments?: number;
                    review_comments_url: string;
                    state: "open" | "closed";
                    statuses_url: string;
                    title: string;
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                };
                repository: components["schemas"]["repository"];
                requested_team: {
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                };
                sender: components["schemas"]["simple-user"];
            }
        ]>;
        "webhook-pull-request-review-submitted": {
            action: "submitted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string | null;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            review: {
                _links: {
                    html: {
                        href: string;
                    };
                    pull_request: {
                        href: string;
                    };
                };
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                body: string | null;
                commit_id: string;
                html_url: string;
                id: number;
                node_id: string;
                pull_request_url: string;
                state: string;
                submitted_at: string | null;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-review-thread-resolved": {
            action: "resolved";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string | null;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
            thread: {
                comments: ({
                    _links: {
                        html: {
                            href: string;
                        };
                        pull_request: {
                            href: string;
                        };
                        self: {
                            href: string;
                        };
                    };
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    body: string;
                    commit_id: string;
                    created_at: string;
                    diff_hunk: string;
                    html_url: string;
                    id: number;
                    in_reply_to_id?: number;
                    line: number | null;
                    node_id: string;
                    original_commit_id: string;
                    original_line: number | null;
                    original_position: number;
                    original_start_line: number | null;
                    path: string;
                    position: number | null;
                    pull_request_review_id: number | null;
                    pull_request_url: string;
                    reactions: {
                        "+1": number;
                        "-1": number;
                        confused: number;
                        eyes: number;
                        heart: number;
                        hooray: number;
                        laugh: number;
                        rocket: number;
                        total_count: number;
                        url: string;
                    };
                    side: "LEFT" | "RIGHT";
                    start_line: number | null;
                    start_side: "LEFT" | "RIGHT" | null;
                    subject_type?: "line" | "file";
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                })[];
                node_id: string;
            };
        };
        "webhook-pull-request-review-thread-unresolved": {
            action: "unresolved";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                closed_at: string | null;
                comments_url: string;
                commits_url: string;
                created_at: string;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                merge_commit_sha: string | null;
                merged_at: string | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
            thread: {
                comments: ({
                    _links: {
                        html: {
                            href: string;
                        };
                        pull_request: {
                            href: string;
                        };
                        self: {
                            href: string;
                        };
                    };
                    author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                    body: string;
                    commit_id: string;
                    created_at: string;
                    diff_hunk: string;
                    html_url: string;
                    id: number;
                    in_reply_to_id?: number;
                    line: number | null;
                    node_id: string;
                    original_commit_id: string;
                    original_line: number;
                    original_position: number;
                    original_start_line: number | null;
                    path: string;
                    position: number | null;
                    pull_request_review_id: number | null;
                    pull_request_url: string;
                    reactions: {
                        "+1": number;
                        "-1": number;
                        confused: number;
                        eyes: number;
                        heart: number;
                        hooray: number;
                        laugh: number;
                        rocket: number;
                        total_count: number;
                        url: string;
                    };
                    side: "LEFT" | "RIGHT";
                    start_line: number | null;
                    start_side: "LEFT" | "RIGHT" | null;
                    subject_type?: "line" | "file";
                    updated_at: string;
                    url: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                })[];
                node_id: string;
            };
        };
        "webhook-pull-request-synchronize": {
            action: "synchronize";
            after: string;
            before: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-unassigned": {
            action: "unassigned";
            assignee?: ({
                avatar_url?: string;
                deleted?: boolean;
                email?: string | null;
                events_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                gravatar_id?: string;
                html_url?: string;
                id: number;
                login: string;
                name?: string;
                node_id?: string;
                organizations_url?: string;
                received_events_url?: string;
                repos_url?: string;
                site_admin?: boolean;
                starred_url?: string;
                subscriptions_url?: string;
                type?: "Bot" | "User" | "Organization" | "Mannequin";
                url?: string;
            }) | null;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string | null;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string | null;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-unlabeled": {
            action: "unlabeled";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            label?: {
                color: string;
                default: boolean;
                description: string | null;
                id: number;
                name: string;
                node_id: string;
                url: string;
            };
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string | null;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string | null;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization" | "Mannequin";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization" | "Mannequin";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-pull-request-unlocked": {
            action: "unlocked";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            number: number;
            organization?: components["schemas"]["organization-simple"];
            pull_request: {
                _links: {
                    comments: {
                        href: string;
                    };
                    commits: {
                        href: string;
                    };
                    html: {
                        href: string;
                    };
                    issue: {
                        href: string;
                    };
                    review_comment: {
                        href: string;
                    };
                    review_comments: {
                        href: string;
                    };
                    self: {
                        href: string;
                    };
                    statuses: {
                        href: string;
                    };
                };
                active_lock_reason: "resolved" | "off-topic" | "too heated" | "spam" | null;
                additions?: number;
                assignee: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                assignees: (({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null)[];
                author_association: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
                auto_merge: ({
                    commit_message: string | null;
                    commit_title: string;
                    enabled_by: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    merge_method: "merge" | "squash" | "rebase";
                }) | null;
                base: {
                    label: string;
                    ref: string;
                    repo: {
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    };
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                body: string | null;
                changed_files?: number;
                closed_at: string | null;
                comments?: number;
                comments_url: string;
                commits?: number;
                commits_url: string;
                created_at: string;
                deletions?: number;
                diff_url: string;
                draft: boolean;
                head: {
                    label: string;
                    ref: string;
                    repo: ({
                        allow_auto_merge?: boolean;
                        allow_forking?: boolean;
                        allow_merge_commit?: boolean;
                        allow_rebase_merge?: boolean;
                        allow_squash_merge?: boolean;
                        allow_update_branch?: boolean;
                        archive_url: string;
                        archived: boolean;
                        assignees_url: string;
                        blobs_url: string;
                        branches_url: string;
                        clone_url: string;
                        collaborators_url: string;
                        comments_url: string;
                        commits_url: string;
                        compare_url: string;
                        contents_url: string;
                        contributors_url: string;
                        created_at: number | string;
                        default_branch: string;
                        delete_branch_on_merge?: boolean;
                        deployments_url: string;
                        description: string | null;
                        disabled?: boolean;
                        downloads_url: string;
                        events_url: string;
                        fork: boolean;
                        forks: number;
                        forks_count: number;
                        forks_url: string;
                        full_name: string;
                        git_commits_url: string;
                        git_refs_url: string;
                        git_tags_url: string;
                        git_url: string;
                        has_downloads: boolean;
                        has_issues: boolean;
                        has_pages: boolean;
                        has_projects: boolean;
                        has_wiki: boolean;
                        has_discussions: boolean;
                        homepage: string | null;
                        hooks_url: string;
                        html_url: string;
                        id: number;
                        is_template?: boolean;
                        issue_comment_url: string;
                        issue_events_url: string;
                        issues_url: string;
                        keys_url: string;
                        labels_url: string;
                        language: string | null;
                        languages_url: string;
                        license: ({
                            key: string;
                            name: string;
                            node_id: string;
                            spdx_id: string;
                            url: string | null;
                        }) | null;
                        master_branch?: string;
                        merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                        merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                        merges_url: string;
                        milestones_url: string;
                        mirror_url: string | null;
                        name: string;
                        node_id: string;
                        notifications_url: string;
                        open_issues: number;
                        open_issues_count: number;
                        organization?: string;
                        owner: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                        permissions?: {
                            admin: boolean;
                            maintain?: boolean;
                            pull: boolean;
                            push: boolean;
                            triage?: boolean;
                        };
                        private: boolean;
                        public?: boolean;
                        pulls_url: string;
                        pushed_at: number | string | null;
                        releases_url: string;
                        role_name?: string | null;
                        size: number;
                        squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                        squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                        ssh_url: string;
                        stargazers?: number;
                        stargazers_count: number;
                        stargazers_url: string;
                        statuses_url: string;
                        subscribers_url: string;
                        subscription_url: string;
                        svn_url: string;
                        tags_url: string;
                        teams_url: string;
                        topics: string[];
                        trees_url: string;
                        updated_at: string;
                        url: string;
                        use_squash_pr_title_as_default?: boolean;
                        visibility: "public" | "private" | "internal";
                        watchers: number;
                        watchers_count: number;
                        web_commit_signoff_required?: boolean;
                    }) | null;
                    sha: string;
                    user: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                };
                html_url: string;
                id: number;
                issue_url: string;
                labels: ({
                    color: string;
                    default: boolean;
                    description: string | null;
                    id: number;
                    name: string;
                    node_id: string;
                    url: string;
                })[];
                locked: boolean;
                maintainer_can_modify?: boolean;
                merge_commit_sha: string | null;
                mergeable?: boolean | null;
                mergeable_state?: string;
                merged?: boolean | null;
                merged_at: string | null;
                merged_by?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                milestone: ({
                    closed_at: string | null;
                    closed_issues: number;
                    created_at: string;
                    creator: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    description: string | null;
                    due_on: string | null;
                    html_url: string;
                    id: number;
                    labels_url: string;
                    node_id: string;
                    number: number;
                    open_issues: number;
                    state: "open" | "closed";
                    title: string;
                    updated_at: string;
                    url: string;
                }) | null;
                node_id: string;
                number: number;
                patch_url: string;
                rebaseable?: boolean | null;
                requested_reviewers: (OneOf<[
                    ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null,
                    {
                        deleted?: boolean;
                        description?: string | null;
                        html_url?: string;
                        id: number;
                        members_url?: string;
                        name: string;
                        node_id?: string;
                        parent?: ({
                            description: string | null;
                            html_url: string;
                            id: number;
                            members_url: string;
                            name: string;
                            node_id: string;
                            permission: string;
                            privacy: "open" | "closed" | "secret";
                            repositories_url: string;
                            slug: string;
                            url: string;
                        }) | null;
                        permission?: string;
                        privacy?: "open" | "closed" | "secret";
                        repositories_url?: string;
                        slug?: string;
                        url?: string;
                    }
                ]>)[];
                requested_teams: ({
                    deleted?: boolean;
                    description?: string | null;
                    html_url?: string;
                    id: number;
                    members_url?: string;
                    name: string;
                    node_id?: string;
                    parent?: ({
                        description: string | null;
                        html_url: string;
                        id: number;
                        members_url: string;
                        name: string;
                        node_id: string;
                        permission: string;
                        privacy: "open" | "closed" | "secret";
                        repositories_url: string;
                        slug: string;
                        url: string;
                    }) | null;
                    permission?: string;
                    privacy?: "open" | "closed" | "secret";
                    repositories_url?: string;
                    slug?: string;
                    url?: string;
                })[];
                review_comment_url: string;
                review_comments?: number;
                review_comments_url: string;
                state: "open" | "closed";
                statuses_url: string;
                title: string;
                updated_at: string;
                url: string;
                user: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-push": {
            after: string;
            base_ref: string | null;
            before: string;
            commits: ({
                added?: string[];
                author: {
                    date?: string;
                    email: string | null;
                    name: string;
                    username?: string;
                };
                committer: {
                    date?: string;
                    email: string | null;
                    name: string;
                    username?: string;
                };
                distinct: boolean;
                id: string;
                message: string;
                modified?: string[];
                removed?: string[];
                timestamp: string;
                tree_id: string;
                url: string;
            })[];
            compare: string;
            created: boolean;
            deleted: boolean;
            enterprise?: components["schemas"]["enterprise"];
            forced: boolean;
            head_commit: ({
                added?: string[];
                author: {
                    date?: string;
                    email: string | null;
                    name: string;
                    username?: string;
                };
                committer: {
                    date?: string;
                    email: string | null;
                    name: string;
                    username?: string;
                };
                distinct: boolean;
                id: string;
                message: string;
                modified?: string[];
                removed?: string[];
                timestamp: string;
                tree_id: string;
                url: string;
            }) | null;
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            pusher: {
                date?: string;
                email?: string | null;
                name: string;
                username?: string;
            };
            ref: string;
            repository: {
                allow_auto_merge?: boolean;
                allow_forking?: boolean;
                allow_merge_commit?: boolean;
                allow_rebase_merge?: boolean;
                allow_squash_merge?: boolean;
                allow_update_branch?: boolean;
                archive_url: string;
                archived: boolean;
                assignees_url: string;
                blobs_url: string;
                branches_url: string;
                clone_url: string;
                collaborators_url: string;
                comments_url: string;
                commits_url: string;
                compare_url: string;
                contents_url: string;
                contributors_url: string;
                created_at: number | string;
                default_branch: string;
                delete_branch_on_merge?: boolean;
                deployments_url: string;
                description: string | null;
                disabled?: boolean;
                downloads_url: string;
                events_url: string;
                fork: boolean;
                forks: number;
                forks_count: number;
                forks_url: string;
                full_name: string;
                git_commits_url: string;
                git_refs_url: string;
                git_tags_url: string;
                git_url: string;
                has_downloads: boolean;
                has_issues: boolean;
                has_pages: boolean;
                has_projects: boolean;
                has_wiki: boolean;
                has_discussions: boolean;
                homepage: string | null;
                hooks_url: string;
                html_url: string;
                id: number;
                is_template?: boolean;
                issue_comment_url: string;
                issue_events_url: string;
                issues_url: string;
                keys_url: string;
                labels_url: string;
                language: string | null;
                languages_url: string;
                license: ({
                    key: string;
                    name: string;
                    node_id: string;
                    spdx_id: string;
                    url: string | null;
                }) | null;
                master_branch?: string;
                merges_url: string;
                milestones_url: string;
                mirror_url: string | null;
                name: string;
                node_id: string;
                notifications_url: string;
                open_issues: number;
                open_issues_count: number;
                organization?: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                permissions?: {
                    admin: boolean;
                    maintain?: boolean;
                    pull: boolean;
                    push: boolean;
                    triage?: boolean;
                };
                private: boolean;
                public?: boolean;
                pulls_url: string;
                pushed_at: number | string | null;
                releases_url: string;
                role_name?: string | null;
                size: number;
                ssh_url: string;
                stargazers?: number;
                stargazers_count: number;
                stargazers_url: string;
                statuses_url: string;
                subscribers_url: string;
                subscription_url: string;
                svn_url: string;
                tags_url: string;
                teams_url: string;
                topics: string[];
                trees_url: string;
                updated_at: string;
                url: string;
                visibility: "public" | "private" | "internal";
                watchers: number;
                watchers_count: number;
                web_commit_signoff_required?: boolean;
            };
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-registry-package-published": {
            action: "published";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            registry_package: {
                created_at: string | null;
                description: string | null;
                ecosystem: string;
                html_url: string;
                id: number;
                name: string;
                namespace: string;
                owner: {
                    avatar_url: string;
                    events_url: string;
                    followers_url: string;
                    following_url: string;
                    gists_url: string;
                    gravatar_id: string;
                    html_url: string;
                    id: number;
                    login: string;
                    node_id: string;
                    organizations_url: string;
                    received_events_url: string;
                    repos_url: string;
                    site_admin: boolean;
                    starred_url: string;
                    subscriptions_url: string;
                    type: string;
                    url: string;
                };
                package_type: string;
                package_version: ({
                    author?: {
                        avatar_url: string;
                        events_url: string;
                        followers_url: string;
                        following_url: string;
                        gists_url: string;
                        gravatar_id: string;
                        html_url: string;
                        id: number;
                        login: string;
                        node_id: string;
                        organizations_url: string;
                        received_events_url: string;
                        repos_url: string;
                        site_admin: boolean;
                        starred_url: string;
                        subscriptions_url: string;
                        type: string;
                        url: string;
                    };
                    body?: string | Record<string, never>;
                    body_html?: string;
                    container_metadata?: {
                        labels?: Record<string, never> | null;
                        manifest?: Record<string, never> | null;
                        tag?: {
                            digest?: string;
                            name?: string;
                        };
                    };
                    created_at?: string;
                    description: string;
                    docker_metadata?: {
                        tags?: string[];
                    }[];
                    draft?: boolean;
                    html_url: string;
                    id: number;
                    installation_command: string;
                    manifest?: string;
                    metadata: {
                        [key: string]: unknown;
                    }[];
                    name: string;
                    npm_metadata?: ({
                        name?: string;
                        version?: string;
                        npm_user?: string;
                        author?: string | Record<string, never> | null;
                        bugs?: string | Record<string, never> | null;
                        dependencies?: Record<string, never>;
                        dev_dependencies?: Record<string, never>;
                        peer_dependencies?: Record<string, never>;
                        optional_dependencies?: Record<string, never>;
                        description?: string;
                        dist?: string | Record<string, never> | null;
                        git_head?: string;
                        homepage?: string;
                        license?: string;
                        main?: string;
                        repository?: string | Record<string, never> | null;
                        scripts?: Record<string, never>;
                        id?: string;
                        node_version?: string;
                        npm_version?: string;
                        has_shrinkwrap?: boolean;
                        maintainers?: string[];
                        contributors?: string[];
                        engines?: Record<string, never>;
                        keywords?: string[];
                        files?: string[];
                        bin?: Record<string, never>;
                        man?: Record<string, never>;
                        directories?: string | Record<string, never> | null;
                        os?: string[];
                        cpu?: string[];
                        readme?: string;
                        installation_command?: string;
                        release_id?: number;
                        commit_oid?: string;
                        published_via_actions?: boolean;
                        deleted_by_id?: number;
                    }) | null;
                    nuget_metadata?: (({
                        id?: string | Record<string, never> | number | null;
                        name?: string;
                        value?: OneOf<[
                            boolean,
                            string,
                            number,
                            {
                                url?: string;
                                branch?: string;
                                commit?: string;
                                type?: string;
                            }
                        ]>;
                    })[]) | null;
                    package_files: ({
                        content_type: string;
                        created_at: string;
                        download_url: string;
                        id: number;
                        md5: string | null;
                        name: string;
                        sha1: string | null;
                        sha256: string | null;
                        size: number;
                        state: string | null;
                        updated_at: string;
                    })[];
                    package_url: string;
                    prerelease?: boolean;
                    release?: {
                        author?: {
                            avatar_url?: string;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id?: number;
                            login?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: string;
                            url?: string;
                        };
                        created_at?: string;
                        draft?: boolean;
                        html_url?: string;
                        id?: number;
                        name?: string | null;
                        prerelease?: boolean;
                        published_at?: string;
                        tag_name?: string;
                        target_commitish?: string;
                        url?: string;
                    };
                    rubygems_metadata?: components["schemas"]["webhook-rubygems-metadata"][];
                    summary: string;
                    tag_name?: string;
                    target_commitish?: string;
                    target_oid?: string;
                    updated_at?: string;
                    version: string;
                }) | null;
                registry: {
                    about_url?: string;
                    name?: string;
                    type?: string;
                    url?: string;
                    vendor?: string;
                } | null;
                updated_at: string | null;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-registry-package-updated": {
            action: "updated";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            registry_package: {
                created_at: string;
                description: null;
                ecosystem: string;
                html_url: string;
                id: number;
                name: string;
                namespace: string;
                owner: {
                    avatar_url: string;
                    events_url: string;
                    followers_url: string;
                    following_url: string;
                    gists_url: string;
                    gravatar_id: string;
                    html_url: string;
                    id: number;
                    login: string;
                    node_id: string;
                    organizations_url: string;
                    received_events_url: string;
                    repos_url: string;
                    site_admin: boolean;
                    starred_url: string;
                    subscriptions_url: string;
                    type: string;
                    url: string;
                };
                package_type: string;
                package_version: {
                    author: {
                        avatar_url: string;
                        events_url: string;
                        followers_url: string;
                        following_url: string;
                        gists_url: string;
                        gravatar_id: string;
                        html_url: string;
                        id: number;
                        login: string;
                        node_id: string;
                        organizations_url: string;
                        received_events_url: string;
                        repos_url: string;
                        site_admin: boolean;
                        starred_url: string;
                        subscriptions_url: string;
                        type: string;
                        url: string;
                    };
                    body: string;
                    body_html: string;
                    created_at: string;
                    description: string;
                    docker_metadata?: ({
                        tags?: string[];
                    } | null)[];
                    draft?: boolean;
                    html_url: string;
                    id: number;
                    installation_command: string;
                    manifest?: string;
                    metadata: {
                        [key: string]: unknown;
                    }[];
                    name: string;
                    package_files: ({
                        content_type?: string;
                        created_at?: string;
                        download_url?: string;
                        id?: number;
                        md5?: string | null;
                        name?: string;
                        sha1?: string | null;
                        sha256?: string;
                        size?: number;
                        state?: string;
                        updated_at?: string;
                    })[];
                    package_url: string;
                    prerelease?: boolean;
                    release?: {
                        author: {
                            avatar_url: string;
                            events_url: string;
                            followers_url: string;
                            following_url: string;
                            gists_url: string;
                            gravatar_id: string;
                            html_url: string;
                            id: number;
                            login: string;
                            node_id: string;
                            organizations_url: string;
                            received_events_url: string;
                            repos_url: string;
                            site_admin: boolean;
                            starred_url: string;
                            subscriptions_url: string;
                            type: string;
                            url: string;
                        };
                        created_at: string;
                        draft: boolean;
                        html_url: string;
                        id: number;
                        name: string;
                        prerelease: boolean;
                        published_at: string;
                        tag_name: string;
                        target_commitish: string;
                        url: string;
                    };
                    rubygems_metadata?: components["schemas"]["webhook-rubygems-metadata"][];
                    summary: string;
                    tag_name?: string;
                    target_commitish: string;
                    target_oid: string;
                    updated_at: string;
                    version: string;
                };
                registry: Record<string, never> | null;
                updated_at: string;
            };
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-release-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            release: {
                assets: ({
                    browser_download_url: string;
                    content_type: string;
                    created_at: string;
                    download_count: number;
                    id: number;
                    label: string | null;
                    name: string;
                    node_id: string;
                    size: number;
                    state: "uploaded";
                    updated_at: string;
                    uploader?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    url: string;
                })[];
                assets_url: string;
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                body: string | null;
                created_at: string | null;
                discussion_url?: string;
                draft: boolean;
                html_url: string;
                id: number;
                name: string | null;
                node_id: string;
                prerelease: boolean;
                published_at: string | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                tag_name: string;
                tarball_url: string | null;
                target_commitish: string;
                upload_url: string;
                url: string;
                zipball_url: string | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-release-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            release: {
                assets: ({
                    browser_download_url: string;
                    content_type: string;
                    created_at: string;
                    download_count: number;
                    id: number;
                    label: string | null;
                    name: string;
                    node_id: string;
                    size: number;
                    state: "uploaded";
                    updated_at: string;
                    uploader?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    url: string;
                })[];
                assets_url: string;
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                body: string | null;
                created_at: string | null;
                discussion_url?: string;
                draft: boolean;
                html_url: string;
                id: number;
                name: string | null;
                node_id: string;
                prerelease: boolean;
                published_at: string | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                tag_name: string;
                tarball_url: string | null;
                target_commitish: string;
                upload_url: string;
                url: string;
                zipball_url: string | null;
            };
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-release-edited": {
            action: "edited";
            changes: {
                body?: {
                    from: string;
                };
                name?: {
                    from: string;
                };
                make_latest?: {
                    to: boolean;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            release: {
                assets: ({
                    browser_download_url: string;
                    content_type: string;
                    created_at: string;
                    download_count: number;
                    id: number;
                    label: string | null;
                    name: string;
                    node_id: string;
                    size: number;
                    state: "uploaded";
                    updated_at: string;
                    uploader?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    url: string;
                })[];
                assets_url: string;
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                body: string | null;
                created_at: string | null;
                discussion_url?: string;
                draft: boolean;
                html_url: string;
                id: number;
                name: string | null;
                node_id: string;
                prerelease: boolean;
                published_at: string | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                tag_name: string;
                tarball_url: string | null;
                target_commitish: string;
                upload_url: string;
                url: string;
                zipball_url: string | null;
            };
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-release-prereleased": {
            action: "prereleased";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            release: ({
                assets: ({
                    browser_download_url: string;
                    content_type: string;
                    created_at: string;
                    download_count: number;
                    id: number;
                    label: string | null;
                    name: string;
                    node_id: string;
                    size: number;
                    state: "uploaded";
                    updated_at: string;
                    uploader?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    url: string;
                })[];
                assets_url: string;
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                body: string | null;
                created_at: string | null;
                discussion_url?: string;
                draft: boolean;
                html_url: string;
                id: number;
                name: string | null;
                node_id: string;
                prerelease: boolean;
                published_at: string | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                tag_name: string;
                tarball_url: string | null;
                target_commitish: string;
                upload_url: string;
                url: string;
                zipball_url: string | null;
            }) & ({
                assets?: (Record<string, never> | null)[];
                assets_url?: string;
                author?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                body?: string | null;
                created_at?: string;
                draft?: boolean;
                html_url?: string;
                id?: number;
                name?: string | null;
                node_id?: string;
                prerelease: true;
                published_at?: string | null;
                tag_name?: string;
                tarball_url?: string | null;
                target_commitish?: string;
                upload_url?: string;
                url?: string;
                zipball_url?: string | null;
            });
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-release-published": {
            action: "published";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            release: ({
                assets: ({
                    browser_download_url: string;
                    content_type: string;
                    created_at: string;
                    download_count: number;
                    id: number;
                    label: string | null;
                    name: string;
                    node_id: string;
                    size: number;
                    state: "uploaded";
                    updated_at: string;
                    uploader?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    url: string;
                })[];
                assets_url: string;
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                body: string | null;
                created_at: string | null;
                discussion_url?: string;
                draft: boolean;
                html_url: string;
                id: number;
                name: string | null;
                node_id: string;
                prerelease: boolean;
                published_at: string | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                tag_name: string;
                tarball_url: string | null;
                target_commitish: string;
                upload_url: string;
                url: string;
                zipball_url: string | null;
            }) & ({
                assets?: (Record<string, never> | null)[];
                assets_url?: string;
                author?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                body?: string | null;
                created_at?: string;
                draft?: boolean;
                html_url?: string;
                id?: number;
                name?: string | null;
                node_id?: string;
                prerelease?: boolean;
                published_at: string | null;
                tag_name?: string;
                tarball_url?: string | null;
                target_commitish?: string;
                upload_url?: string;
                url?: string;
                zipball_url?: string | null;
            });
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-release-released": {
            action: "released";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            release: {
                assets: ({
                    browser_download_url: string;
                    content_type: string;
                    created_at: string;
                    download_count: number;
                    id: number;
                    label: string | null;
                    name: string;
                    node_id: string;
                    size: number;
                    state: "uploaded";
                    updated_at: string;
                    uploader?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    url: string;
                })[];
                assets_url: string;
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                body: string | null;
                created_at: string | null;
                discussion_url?: string;
                draft: boolean;
                html_url: string;
                id: number;
                name: string | null;
                node_id: string;
                prerelease: boolean;
                published_at: string | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                tag_name: string;
                tarball_url: string | null;
                target_commitish: string;
                upload_url: string;
                url: string;
                zipball_url: string | null;
            };
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-release-unpublished": {
            action: "unpublished";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            release: ({
                assets: ({
                    browser_download_url: string;
                    content_type: string;
                    created_at: string;
                    download_count: number;
                    id: number;
                    label: string | null;
                    name: string;
                    node_id: string;
                    size: number;
                    state: "uploaded";
                    updated_at: string;
                    uploader?: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    url: string;
                })[];
                assets_url: string;
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                body: string | null;
                created_at: string | null;
                discussion_url?: string;
                draft: boolean;
                html_url: string;
                id: number;
                name: string | null;
                node_id: string;
                prerelease: boolean;
                published_at: string | null;
                reactions?: {
                    "+1": number;
                    "-1": number;
                    confused: number;
                    eyes: number;
                    heart: number;
                    hooray: number;
                    laugh: number;
                    rocket: number;
                    total_count: number;
                    url: string;
                };
                tag_name: string;
                tarball_url: string | null;
                target_commitish: string;
                upload_url: string;
                url: string;
                zipball_url: string | null;
            }) & ({
                assets?: (Record<string, never> | null)[];
                assets_url?: string;
                author?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                body?: string | null;
                created_at?: string;
                draft?: boolean;
                html_url?: string;
                id?: number;
                name?: string | null;
                node_id?: string;
                prerelease?: boolean;
                published_at: string | null;
                tag_name?: string;
                tarball_url?: string | null;
                target_commitish?: string;
                upload_url?: string;
                url?: string;
                zipball_url?: string | null;
            });
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-repository-advisory-published": {
            action: "published";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            repository_advisory: components["schemas"]["repository-advisory"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-repository-advisory-reported": {
            action: "reported";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            repository_advisory: components["schemas"]["repository-advisory"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-repository-archived": {
            action: "archived";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-dispatch-sample": {
            action: "sample.collected";
            branch: string;
            client_payload: {
                [key: string]: unknown;
            } | null;
            enterprise?: components["schemas"]["enterprise"];
            installation: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-edited": {
            action: "edited";
            changes: {
                default_branch?: {
                    from: string;
                };
                description?: {
                    from: string | null;
                };
                homepage?: {
                    from: string | null;
                };
                topics?: {
                    from?: string[] | null;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-import": {
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            status: "success" | "cancelled" | "failure";
        };
        "webhook-repository-privatized": {
            action: "privatized";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-publicized": {
            action: "publicized";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-renamed": {
            action: "renamed";
            changes: {
                repository: {
                    name: {
                        from: string;
                    };
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-ruleset-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            repository_ruleset: components["schemas"]["repository-ruleset"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-ruleset-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            repository_ruleset: components["schemas"]["repository-ruleset"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-ruleset-edited": {
            action: "edited";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            repository_ruleset: components["schemas"]["repository-ruleset"];
            changes?: {
                name?: {
                    from?: string;
                };
                enforcement?: {
                    from?: string;
                };
                conditions?: {
                    added?: components["schemas"]["repository-ruleset-conditions"][];
                    deleted?: components["schemas"]["repository-ruleset-conditions"][];
                    updated?: {
                        condition?: components["schemas"]["repository-ruleset-conditions"];
                        changes?: {
                            condition_type?: {
                                from?: string;
                            };
                            target?: {
                                from?: string;
                            };
                            include?: {
                                from?: string[];
                            };
                            exclude?: {
                                from?: string[];
                            };
                        };
                    }[];
                };
                rules?: {
                    added?: components["schemas"]["repository-rule"][];
                    deleted?: components["schemas"]["repository-rule"][];
                    updated?: {
                        rule?: components["schemas"]["repository-rule"];
                        changes?: {
                            configuration?: {
                                from?: string;
                            };
                            rule_type?: {
                                from?: string;
                            };
                            pattern?: {
                                from?: string;
                            };
                        };
                    }[];
                };
            };
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-transferred": {
            action: "transferred";
            changes: {
                owner: {
                    from: {
                        organization?: {
                            avatar_url: string;
                            description: string | null;
                            events_url: string;
                            hooks_url: string;
                            html_url?: string;
                            id: number;
                            issues_url: string;
                            login: string;
                            members_url: string;
                            node_id: string;
                            public_members_url: string;
                            repos_url: string;
                            url: string;
                        };
                        user?: ({
                            avatar_url?: string;
                            deleted?: boolean;
                            email?: string | null;
                            events_url?: string;
                            followers_url?: string;
                            following_url?: string;
                            gists_url?: string;
                            gravatar_id?: string;
                            html_url?: string;
                            id: number;
                            login: string;
                            name?: string;
                            node_id?: string;
                            organizations_url?: string;
                            received_events_url?: string;
                            repos_url?: string;
                            site_admin?: boolean;
                            starred_url?: string;
                            subscriptions_url?: string;
                            type?: "Bot" | "User" | "Organization";
                            url?: string;
                        }) | null;
                    };
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-unarchived": {
            action: "unarchived";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-vulnerability-alert-create": {
            action: "create";
            alert: ({
                affected_package_name: string;
                affected_range: string;
                created_at: string;
                dismiss_reason?: string;
                dismissed_at?: string;
                dismisser?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                external_identifier: string;
                external_reference: string | null;
                fix_reason?: string;
                fixed_at?: string;
                fixed_in?: string;
                ghsa_id: string;
                id: number;
                node_id: string;
                number: number;
                severity: string;
                state: "open" | "dismissed" | "fixed";
            }) & ({
                affected_package_name?: string;
                affected_range?: string;
                created_at?: string;
                external_identifier?: string;
                external_reference?: string | null;
                fixed_in?: string;
                ghsa_id?: string;
                id?: number;
                node_id?: string;
                number?: number;
                severity?: string;
                state: "open";
            });
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-vulnerability-alert-dismiss": {
            action: "dismiss";
            alert: ({
                affected_package_name: string;
                affected_range: string;
                created_at: string;
                dismiss_comment?: string | null;
                dismiss_reason?: string;
                dismissed_at?: string;
                dismisser?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                external_identifier: string;
                external_reference: string | null;
                fix_reason?: string;
                fixed_at?: string;
                fixed_in?: string;
                ghsa_id: string;
                id: number;
                node_id: string;
                number: number;
                severity: string;
                state: "open" | "dismissed" | "fixed";
            }) & ({
                affected_package_name?: string;
                affected_range?: string;
                created_at?: string;
                dismiss_comment?: string | null;
                dismiss_reason: string;
                dismissed_at: string;
                dismisser: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                external_identifier?: string;
                external_reference?: string | null;
                fixed_in?: string;
                ghsa_id?: string;
                id?: number;
                node_id?: string;
                number?: number;
                severity?: string;
                state: "dismissed";
            });
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-vulnerability-alert-reopen": {
            action: "reopen";
            alert: ({
                affected_package_name: string;
                affected_range: string;
                created_at: string;
                dismiss_reason?: string;
                dismissed_at?: string;
                dismisser?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                external_identifier: string;
                external_reference: string | null;
                fix_reason?: string;
                fixed_at?: string;
                fixed_in?: string;
                ghsa_id: string;
                id: number;
                node_id: string;
                number: number;
                severity: string;
                state: "open" | "dismissed" | "fixed";
            }) & ({
                affected_package_name?: string;
                affected_range?: string;
                created_at?: string;
                external_identifier?: string;
                external_reference?: string | null;
                fixed_in?: string;
                ghsa_id?: string;
                id?: number;
                node_id?: string;
                number?: number;
                severity?: string;
                state: "open";
            });
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-repository-vulnerability-alert-resolve": {
            action: "resolve";
            alert: ({
                affected_package_name: string;
                affected_range: string;
                created_at: string;
                dismiss_reason?: string;
                dismissed_at?: string;
                dismisser?: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                external_identifier: string;
                external_reference: string | null;
                fix_reason?: string;
                fixed_at?: string;
                fixed_in?: string;
                ghsa_id: string;
                id: number;
                node_id: string;
                number: number;
                severity: string;
                state: "open" | "dismissed" | "fixed";
            }) & ({
                affected_package_name?: string;
                affected_range?: string;
                created_at?: string;
                external_identifier?: string;
                external_reference?: string | null;
                fix_reason?: string;
                fixed_at?: string;
                fixed_in?: string;
                ghsa_id?: string;
                id?: number;
                node_id?: string;
                number?: number;
                severity?: string;
                state: "fixed" | "open";
            });
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-secret-scanning-alert-created": {
            action: "created";
            alert: components["schemas"]["secret-scanning-alert-webhook"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-secret-scanning-alert-location-created": {
            action?: "created";
            alert: components["schemas"]["secret-scanning-alert-webhook"];
            installation?: components["schemas"]["simple-installation"];
            location: components["schemas"]["secret-scanning-location"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-secret-scanning-alert-location-created-form-encoded": {
            payload: string;
        };
        "webhook-secret-scanning-alert-reopened": {
            action: "reopened";
            alert: components["schemas"]["secret-scanning-alert-webhook"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-secret-scanning-alert-resolved": {
            action: "resolved";
            alert: components["schemas"]["secret-scanning-alert-webhook"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-secret-scanning-alert-revoked": {
            action: "revoked";
            alert: components["schemas"]["secret-scanning-alert-webhook"];
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-security-advisory-published": {
            action: "published";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            security_advisory: {
                cvss: {
                    score: number;
                    vector_string: string | null;
                };
                cwes: {
                    cwe_id: string;
                    name: string;
                }[];
                description: string;
                ghsa_id: string;
                identifiers: {
                    type: string;
                    value: string;
                }[];
                published_at: string;
                references: {
                    url: string;
                }[];
                severity: string;
                summary: string;
                updated_at: string;
                vulnerabilities: ({
                    first_patched_version: {
                        identifier: string;
                    } | null;
                    package: {
                        ecosystem: string;
                        name: string;
                    };
                    severity: string;
                    vulnerable_version_range: string;
                })[];
                withdrawn_at: string | null;
            };
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-security-advisory-updated": {
            action: "updated";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            security_advisory: {
                cvss: {
                    score: number;
                    vector_string: string | null;
                };
                cwes: {
                    cwe_id: string;
                    name: string;
                }[];
                description: string;
                ghsa_id: string;
                identifiers: {
                    type: string;
                    value: string;
                }[];
                published_at: string;
                references: {
                    url: string;
                }[];
                severity: string;
                summary: string;
                updated_at: string;
                vulnerabilities: ({
                    first_patched_version: {
                        identifier: string;
                    } | null;
                    package: {
                        ecosystem: string;
                        name: string;
                    };
                    severity: string;
                    vulnerable_version_range: string;
                })[];
                withdrawn_at: string | null;
            };
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-security-advisory-withdrawn": {
            action: "withdrawn";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            security_advisory: {
                cvss: {
                    score: number;
                    vector_string: string | null;
                };
                cwes: {
                    cwe_id: string;
                    name: string;
                }[];
                description: string;
                ghsa_id: string;
                identifiers: {
                    type: string;
                    value: string;
                }[];
                published_at: string;
                references: {
                    url: string;
                }[];
                severity: string;
                summary: string;
                updated_at: string;
                vulnerabilities: ({
                    first_patched_version: {
                        identifier: string;
                    } | null;
                    package: {
                        ecosystem: string;
                        name: string;
                    };
                    severity: string;
                    vulnerable_version_range: string;
                })[];
                withdrawn_at: string;
            };
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-security-and-analysis": {
            changes: {
                from?: {
                    security_and_analysis?: components["schemas"]["security-and-analysis"];
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["full-repository"];
            sender?: components["schemas"]["simple-user"];
        };
        "webhook-sponsorship-cancelled": {
            action: "cancelled";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            sponsorship: {
                created_at: string;
                maintainer?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                node_id: string;
                privacy_level: string;
                sponsor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                sponsorable: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                tier: {
                    created_at: string;
                    description: string;
                    is_custom_ammount?: boolean;
                    is_custom_amount?: boolean;
                    is_one_time: boolean;
                    monthly_price_in_cents: number;
                    monthly_price_in_dollars: number;
                    name: string;
                    node_id: string;
                };
            };
        };
        "webhook-sponsorship-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            sponsorship: {
                created_at: string;
                maintainer?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                node_id: string;
                privacy_level: string;
                sponsor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                sponsorable: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                tier: {
                    created_at: string;
                    description: string;
                    is_custom_ammount?: boolean;
                    is_custom_amount?: boolean;
                    is_one_time: boolean;
                    monthly_price_in_cents: number;
                    monthly_price_in_dollars: number;
                    name: string;
                    node_id: string;
                };
            };
        };
        "webhook-sponsorship-edited": {
            action: "edited";
            changes: {
                privacy_level?: {
                    from: string;
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            sponsorship: {
                created_at: string;
                maintainer?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                node_id: string;
                privacy_level: string;
                sponsor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                sponsorable: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                tier: {
                    created_at: string;
                    description: string;
                    is_custom_ammount?: boolean;
                    is_custom_amount?: boolean;
                    is_one_time: boolean;
                    monthly_price_in_cents: number;
                    monthly_price_in_dollars: number;
                    name: string;
                    node_id: string;
                };
            };
        };
        "webhook-sponsorship-pending-cancellation": {
            action: "pending_cancellation";
            effective_date?: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            sponsorship: {
                created_at: string;
                maintainer?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                node_id: string;
                privacy_level: string;
                sponsor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                sponsorable: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                tier: {
                    created_at: string;
                    description: string;
                    is_custom_ammount?: boolean;
                    is_custom_amount?: boolean;
                    is_one_time: boolean;
                    monthly_price_in_cents: number;
                    monthly_price_in_dollars: number;
                    name: string;
                    node_id: string;
                };
            };
        };
        "webhook-sponsorship-pending-tier-change": {
            action: "pending_tier_change";
            changes: {
                tier: {
                    from: {
                        created_at: string;
                        description: string;
                        is_custom_ammount?: boolean;
                        is_custom_amount?: boolean;
                        is_one_time: boolean;
                        monthly_price_in_cents: number;
                        monthly_price_in_dollars: number;
                        name: string;
                        node_id: string;
                    };
                };
            };
            effective_date?: string;
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            sponsorship: {
                created_at: string;
                maintainer?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                node_id: string;
                privacy_level: string;
                sponsor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                sponsorable: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                tier: {
                    created_at: string;
                    description: string;
                    is_custom_ammount?: boolean;
                    is_custom_amount?: boolean;
                    is_one_time: boolean;
                    monthly_price_in_cents: number;
                    monthly_price_in_dollars: number;
                    name: string;
                    node_id: string;
                };
            };
        };
        "webhook-sponsorship-tier-changed": {
            action: "tier_changed";
            changes: {
                tier: {
                    from: {
                        created_at: string;
                        description: string;
                        is_custom_ammount?: boolean;
                        is_custom_amount?: boolean;
                        is_one_time: boolean;
                        monthly_price_in_cents: number;
                        monthly_price_in_dollars: number;
                        name: string;
                        node_id: string;
                    };
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository?: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            sponsorship: {
                created_at: string;
                maintainer?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                node_id: string;
                privacy_level: string;
                sponsor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                sponsorable: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                tier: {
                    created_at: string;
                    description: string;
                    is_custom_ammount?: boolean;
                    is_custom_amount?: boolean;
                    is_one_time: boolean;
                    monthly_price_in_cents: number;
                    monthly_price_in_dollars: number;
                    name: string;
                    node_id: string;
                };
            };
        };
        "webhook-star-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            starred_at: string | null;
        };
        "webhook-star-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            starred_at: null;
        };
        "webhook-status": {
            avatar_url?: string | null;
            branches: ({
                commit: {
                    sha: string | null;
                    url: string | null;
                };
                name: string;
                protected: boolean;
            })[];
            commit: {
                author: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                comments_url: string;
                commit: {
                    author: ({
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    }) & {
                        date: string;
                        email?: string;
                        name?: string;
                    };
                    comment_count: number;
                    committer: ({
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    }) & {
                        date: string;
                        email?: string;
                        name?: string;
                    };
                    message: string;
                    tree: {
                        sha: string;
                        url: string;
                    };
                    url: string;
                    verification: {
                        payload: string | null;
                        reason: "expired_key" | "not_signing_key" | "gpgverify_error" | "gpgverify_unavailable" | "unsigned" | "unknown_signature_type" | "no_user" | "unverified_email" | "bad_email" | "unknown_key" | "malformed_signature" | "invalid" | "valid" | "bad_cert" | "ocsp_pending";
                        signature: string | null;
                        verified: boolean;
                    };
                };
                committer: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                html_url: string;
                node_id: string;
                parents: {
                    html_url: string;
                    sha: string;
                    url: string;
                }[];
                sha: string;
                url: string;
            };
            context: string;
            created_at: string;
            description: string | null;
            enterprise?: components["schemas"]["enterprise"];
            id: number;
            installation?: components["schemas"]["simple-installation"];
            name: string;
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            sha: string;
            state: "pending" | "success" | "failure" | "error";
            target_url: string | null;
            updated_at: string;
        };
        "webhook-team-add": {
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-team-added-to-repository": {
            action: "added_to_repository";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository?: {
                allow_auto_merge?: boolean;
                allow_forking?: boolean;
                allow_merge_commit?: boolean;
                allow_rebase_merge?: boolean;
                allow_squash_merge?: boolean;
                allow_update_branch?: boolean;
                archive_url: string;
                archived: boolean;
                assignees_url: string;
                blobs_url: string;
                branches_url: string;
                clone_url: string;
                collaborators_url: string;
                comments_url: string;
                commits_url: string;
                compare_url: string;
                contents_url: string;
                contributors_url: string;
                created_at: number | string;
                default_branch: string;
                delete_branch_on_merge?: boolean;
                deployments_url: string;
                description: string | null;
                disabled?: boolean;
                downloads_url: string;
                events_url: string;
                fork: boolean;
                forks: number;
                forks_count: number;
                forks_url: string;
                full_name: string;
                git_commits_url: string;
                git_refs_url: string;
                git_tags_url: string;
                git_url: string;
                has_downloads: boolean;
                has_issues: boolean;
                has_pages: boolean;
                has_projects: boolean;
                has_wiki: boolean;
                homepage: string | null;
                hooks_url: string;
                html_url: string;
                id: number;
                is_template?: boolean;
                issue_comment_url: string;
                issue_events_url: string;
                issues_url: string;
                keys_url: string;
                labels_url: string;
                language: string | null;
                languages_url: string;
                license: ({
                    key: string;
                    name: string;
                    node_id: string;
                    spdx_id: string;
                    url: string | null;
                }) | null;
                master_branch?: string;
                merges_url: string;
                milestones_url: string;
                mirror_url: string | null;
                name: string;
                node_id: string;
                notifications_url: string;
                open_issues: number;
                open_issues_count: number;
                organization?: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                permissions?: {
                    admin: boolean;
                    maintain?: boolean;
                    pull: boolean;
                    push: boolean;
                    triage?: boolean;
                };
                private: boolean;
                public?: boolean;
                pulls_url: string;
                pushed_at: number | string | null;
                releases_url: string;
                role_name?: string | null;
                size: number;
                ssh_url: string;
                stargazers?: number;
                stargazers_count: number;
                stargazers_url: string;
                statuses_url: string;
                subscribers_url: string;
                subscription_url: string;
                svn_url: string;
                tags_url: string;
                teams_url: string;
                topics: string[];
                trees_url: string;
                updated_at: string;
                url: string;
                visibility: "public" | "private" | "internal";
                watchers: number;
                watchers_count: number;
            };
            sender?: components["schemas"]["simple-user"];
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-team-created": {
            action: "created";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository?: {
                allow_auto_merge?: boolean;
                allow_forking?: boolean;
                allow_merge_commit?: boolean;
                allow_rebase_merge?: boolean;
                allow_squash_merge?: boolean;
                allow_update_branch?: boolean;
                archive_url: string;
                archived: boolean;
                assignees_url: string;
                blobs_url: string;
                branches_url: string;
                clone_url: string;
                collaborators_url: string;
                comments_url: string;
                commits_url: string;
                compare_url: string;
                contents_url: string;
                contributors_url: string;
                created_at: number | string;
                default_branch: string;
                delete_branch_on_merge?: boolean;
                deployments_url: string;
                description: string | null;
                disabled?: boolean;
                downloads_url: string;
                events_url: string;
                fork: boolean;
                forks: number;
                forks_count: number;
                forks_url: string;
                full_name: string;
                git_commits_url: string;
                git_refs_url: string;
                git_tags_url: string;
                git_url: string;
                has_downloads: boolean;
                has_issues: boolean;
                has_pages: boolean;
                has_projects: boolean;
                has_wiki: boolean;
                homepage: string | null;
                hooks_url: string;
                html_url: string;
                id: number;
                is_template?: boolean;
                issue_comment_url: string;
                issue_events_url: string;
                issues_url: string;
                keys_url: string;
                labels_url: string;
                language: string | null;
                languages_url: string;
                license: ({
                    key: string;
                    name: string;
                    node_id: string;
                    spdx_id: string;
                    url: string | null;
                }) | null;
                master_branch?: string;
                merges_url: string;
                milestones_url: string;
                mirror_url: string | null;
                name: string;
                node_id: string;
                notifications_url: string;
                open_issues: number;
                open_issues_count: number;
                organization?: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                permissions?: {
                    admin: boolean;
                    maintain?: boolean;
                    pull: boolean;
                    push: boolean;
                    triage?: boolean;
                };
                private: boolean;
                public?: boolean;
                pulls_url: string;
                pushed_at: number | string | null;
                releases_url: string;
                role_name?: string | null;
                size: number;
                ssh_url: string;
                stargazers?: number;
                stargazers_count: number;
                stargazers_url: string;
                statuses_url: string;
                subscribers_url: string;
                subscription_url: string;
                svn_url: string;
                tags_url: string;
                teams_url: string;
                topics: string[];
                trees_url: string;
                updated_at: string;
                url: string;
                visibility: "public" | "private" | "internal";
                watchers: number;
                watchers_count: number;
            };
            sender: components["schemas"]["simple-user"];
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-team-deleted": {
            action: "deleted";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository?: {
                allow_auto_merge?: boolean;
                allow_forking?: boolean;
                allow_merge_commit?: boolean;
                allow_rebase_merge?: boolean;
                allow_squash_merge?: boolean;
                allow_update_branch?: boolean;
                archive_url: string;
                archived: boolean;
                assignees_url: string;
                blobs_url: string;
                branches_url: string;
                clone_url: string;
                collaborators_url: string;
                comments_url: string;
                commits_url: string;
                compare_url: string;
                contents_url: string;
                contributors_url: string;
                created_at: number | string;
                default_branch: string;
                delete_branch_on_merge?: boolean;
                deployments_url: string;
                description: string | null;
                disabled?: boolean;
                downloads_url: string;
                events_url: string;
                fork: boolean;
                forks: number;
                forks_count: number;
                forks_url: string;
                full_name: string;
                git_commits_url: string;
                git_refs_url: string;
                git_tags_url: string;
                git_url: string;
                has_downloads: boolean;
                has_issues: boolean;
                has_pages: boolean;
                has_projects: boolean;
                has_wiki: boolean;
                homepage: string | null;
                hooks_url: string;
                html_url: string;
                id: number;
                is_template?: boolean;
                issue_comment_url: string;
                issue_events_url: string;
                issues_url: string;
                keys_url: string;
                labels_url: string;
                language: string | null;
                languages_url: string;
                license: ({
                    key: string;
                    name: string;
                    node_id: string;
                    spdx_id: string;
                    url: string | null;
                }) | null;
                master_branch?: string;
                merges_url: string;
                milestones_url: string;
                mirror_url: string | null;
                name: string;
                node_id: string;
                notifications_url: string;
                open_issues: number;
                open_issues_count: number;
                organization?: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                permissions?: {
                    admin: boolean;
                    maintain?: boolean;
                    pull: boolean;
                    push: boolean;
                    triage?: boolean;
                };
                private: boolean;
                public?: boolean;
                pulls_url: string;
                pushed_at: number | string | null;
                releases_url: string;
                role_name?: string | null;
                size: number;
                ssh_url: string;
                stargazers?: number;
                stargazers_count: number;
                stargazers_url: string;
                statuses_url: string;
                subscribers_url: string;
                subscription_url: string;
                svn_url: string;
                tags_url: string;
                teams_url: string;
                topics: string[];
                trees_url: string;
                updated_at: string;
                url: string;
                visibility: "public" | "private" | "internal";
                watchers: number;
                watchers_count: number;
            };
            sender?: components["schemas"]["simple-user"];
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-team-edited": {
            action: "edited";
            changes: {
                description?: {
                    from: string;
                };
                name?: {
                    from: string;
                };
                privacy?: {
                    from: string;
                };
                notification_setting?: {
                    from: string;
                };
                repository?: {
                    permissions: {
                        from: {
                            admin?: boolean;
                            pull?: boolean;
                            push?: boolean;
                        };
                    };
                };
            };
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository?: {
                allow_auto_merge?: boolean;
                allow_forking?: boolean;
                allow_merge_commit?: boolean;
                allow_rebase_merge?: boolean;
                allow_squash_merge?: boolean;
                allow_update_branch?: boolean;
                archive_url: string;
                archived: boolean;
                assignees_url: string;
                blobs_url: string;
                branches_url: string;
                clone_url: string;
                collaborators_url: string;
                comments_url: string;
                commits_url: string;
                compare_url: string;
                contents_url: string;
                contributors_url: string;
                created_at: number | string;
                default_branch: string;
                delete_branch_on_merge?: boolean;
                deployments_url: string;
                description: string | null;
                disabled?: boolean;
                downloads_url: string;
                events_url: string;
                fork: boolean;
                forks: number;
                forks_count: number;
                forks_url: string;
                full_name: string;
                git_commits_url: string;
                git_refs_url: string;
                git_tags_url: string;
                git_url: string;
                has_downloads: boolean;
                has_issues: boolean;
                has_pages: boolean;
                has_projects: boolean;
                has_wiki: boolean;
                homepage: string | null;
                hooks_url: string;
                html_url: string;
                id: number;
                is_template?: boolean;
                issue_comment_url: string;
                issue_events_url: string;
                issues_url: string;
                keys_url: string;
                labels_url: string;
                language: string | null;
                languages_url: string;
                license: ({
                    key: string;
                    name: string;
                    node_id: string;
                    spdx_id: string;
                    url: string | null;
                }) | null;
                master_branch?: string;
                merges_url: string;
                milestones_url: string;
                mirror_url: string | null;
                name: string;
                node_id: string;
                notifications_url: string;
                open_issues: number;
                open_issues_count: number;
                organization?: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                permissions?: {
                    admin: boolean;
                    maintain?: boolean;
                    pull: boolean;
                    push: boolean;
                    triage?: boolean;
                };
                private: boolean;
                public?: boolean;
                pulls_url: string;
                pushed_at: number | string | null;
                releases_url: string;
                role_name?: string | null;
                size: number;
                ssh_url: string;
                stargazers?: number;
                stargazers_count: number;
                stargazers_url: string;
                statuses_url: string;
                subscribers_url: string;
                subscription_url: string;
                svn_url: string;
                tags_url: string;
                teams_url: string;
                topics: string[];
                trees_url: string;
                updated_at: string;
                url: string;
                visibility: "public" | "private" | "internal";
                watchers: number;
                watchers_count: number;
            };
            sender: components["schemas"]["simple-user"];
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-team-removed-from-repository": {
            action: "removed_from_repository";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization: components["schemas"]["organization-simple"];
            repository?: {
                allow_auto_merge?: boolean;
                allow_forking?: boolean;
                allow_merge_commit?: boolean;
                allow_rebase_merge?: boolean;
                allow_squash_merge?: boolean;
                allow_update_branch?: boolean;
                archive_url: string;
                archived: boolean;
                assignees_url: string;
                blobs_url: string;
                branches_url: string;
                clone_url: string;
                collaborators_url: string;
                comments_url: string;
                commits_url: string;
                compare_url: string;
                contents_url: string;
                contributors_url: string;
                created_at: number | string;
                default_branch: string;
                delete_branch_on_merge?: boolean;
                deployments_url: string;
                description: string | null;
                disabled?: boolean;
                downloads_url: string;
                events_url: string;
                fork: boolean;
                forks: number;
                forks_count: number;
                forks_url: string;
                full_name: string;
                git_commits_url: string;
                git_refs_url: string;
                git_tags_url: string;
                git_url: string;
                has_downloads: boolean;
                has_issues: boolean;
                has_pages: boolean;
                has_projects: boolean;
                has_wiki: boolean;
                homepage: string | null;
                hooks_url: string;
                html_url: string;
                id: number;
                is_template?: boolean;
                issue_comment_url: string;
                issue_events_url: string;
                issues_url: string;
                keys_url: string;
                labels_url: string;
                language: string | null;
                languages_url: string;
                license: ({
                    key: string;
                    name: string;
                    node_id: string;
                    spdx_id: string;
                    url: string | null;
                }) | null;
                master_branch?: string;
                merges_url: string;
                milestones_url: string;
                mirror_url: string | null;
                name: string;
                node_id: string;
                notifications_url: string;
                open_issues: number;
                open_issues_count: number;
                organization?: string;
                owner: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                permissions?: {
                    admin: boolean;
                    maintain?: boolean;
                    pull: boolean;
                    push: boolean;
                    triage?: boolean;
                };
                private: boolean;
                public?: boolean;
                pulls_url: string;
                pushed_at: number | string | null;
                releases_url: string;
                role_name?: string | null;
                size: number;
                ssh_url: string;
                stargazers?: number;
                stargazers_count: number;
                stargazers_url: string;
                statuses_url: string;
                subscribers_url: string;
                subscription_url: string;
                svn_url: string;
                tags_url: string;
                teams_url: string;
                topics: string[];
                trees_url: string;
                updated_at: string;
                url: string;
                visibility: "public" | "private" | "internal";
                watchers: number;
                watchers_count: number;
            };
            sender: components["schemas"]["simple-user"];
            team: {
                deleted?: boolean;
                description?: string | null;
                html_url?: string;
                id: number;
                members_url?: string;
                name: string;
                node_id?: string;
                parent?: ({
                    description: string | null;
                    html_url: string;
                    id: number;
                    members_url: string;
                    name: string;
                    node_id: string;
                    permission: string;
                    privacy: "open" | "closed" | "secret";
                    notification_setting: "notifications_enabled" | "notifications_disabled";
                    repositories_url: string;
                    slug: string;
                    url: string;
                }) | null;
                permission?: string;
                privacy?: "open" | "closed" | "secret";
                notification_setting?: "notifications_enabled" | "notifications_disabled";
                repositories_url?: string;
                slug?: string;
                url?: string;
            };
        };
        "webhook-watch-started": {
            action: "started";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
        };
        "webhook-workflow-dispatch": {
            enterprise?: components["schemas"]["enterprise"];
            inputs: {
                [key: string]: unknown;
            } | null;
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            ref: string;
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow: string;
        };
        "webhook-workflow-job-completed": {
            action: "completed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow_job: ({
                check_run_url: string;
                completed_at: string | null;
                conclusion: "success" | "failure" | null | "skipped" | "cancelled" | "action_required" | "neutral" | "timed_out";
                created_at: string;
                head_sha: string;
                html_url: string;
                id: number;
                labels: string[];
                name: string;
                node_id: string;
                run_attempt: number;
                run_id: number;
                run_url: string;
                runner_group_id: number | null;
                runner_group_name: string | null;
                runner_id: number | null;
                runner_name: string | null;
                started_at: string;
                status: "queued" | "in_progress" | "completed" | "waiting";
                head_branch: string | null;
                workflow_name: string | null;
                steps: ({
                    completed_at: string | null;
                    conclusion: "failure" | "skipped" | "success" | "cancelled" | null;
                    name: string;
                    number: number;
                    started_at: string | null;
                    status: "in_progress" | "completed" | "queued";
                })[];
                url: string;
            }) & ({
                check_run_url?: string;
                completed_at?: string;
                conclusion: "success" | "failure" | "skipped" | "cancelled" | "action_required" | "neutral" | "timed_out";
                created_at?: string;
                head_sha?: string;
                html_url?: string;
                id?: number;
                labels?: (string | null)[];
                name?: string;
                node_id?: string;
                run_attempt?: number;
                run_id?: number;
                run_url?: string;
                runner_group_id?: number | null;
                runner_group_name?: string | null;
                runner_id?: number | null;
                runner_name?: string | null;
                started_at?: string;
                status?: string;
                head_branch?: string | null;
                workflow_name?: string | null;
                steps?: (Record<string, never> | null)[];
                url?: string;
            });
            deployment?: components["schemas"]["deployment"];
        };
        "webhook-workflow-job-in-progress": {
            action: "in_progress";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow_job: ({
                check_run_url: string;
                completed_at: string | null;
                conclusion: "success" | "failure" | null | "cancelled" | "neutral";
                created_at: string;
                head_sha: string;
                html_url: string;
                id: number;
                labels: string[];
                name: string;
                node_id: string;
                run_attempt: number;
                run_id: number;
                run_url: string;
                runner_group_id: number | null;
                runner_group_name: string | null;
                runner_id: number | null;
                runner_name: string | null;
                started_at: string;
                status: "queued" | "in_progress" | "completed";
                head_branch: string | null;
                workflow_name: string | null;
                steps: ({
                    completed_at: string | null;
                    conclusion: "failure" | "skipped" | "success" | null | "cancelled";
                    name: string;
                    number: number;
                    started_at: string | null;
                    status: "in_progress" | "completed" | "queued" | "pending";
                })[];
                url: string;
            }) & ({
                check_run_url?: string;
                completed_at?: string | null;
                conclusion?: string | null;
                created_at?: string;
                head_sha?: string;
                html_url?: string;
                id?: number;
                labels?: string[];
                name?: string;
                node_id?: string;
                run_attempt?: number;
                run_id?: number;
                run_url?: string;
                runner_group_id?: number | null;
                runner_group_name?: string | null;
                runner_id?: number | null;
                runner_name?: string | null;
                started_at?: string;
                status: "in_progress" | "completed" | "queued";
                head_branch?: string | null;
                workflow_name?: string | null;
                steps: ({
                    completed_at: string | null;
                    conclusion: string | null;
                    name: string;
                    number: number;
                    started_at: string | null;
                    status: "in_progress" | "completed" | "pending" | "queued";
                })[];
                url?: string;
            });
            deployment?: components["schemas"]["deployment"];
        };
        "webhook-workflow-job-queued": {
            action: "queued";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow_job: {
                check_run_url: string;
                completed_at: string | null;
                conclusion: string | null;
                created_at: string;
                head_sha: string;
                html_url: string;
                id: number;
                labels: string[];
                name: string;
                node_id: string;
                run_attempt: number;
                run_id: number;
                run_url: string;
                runner_group_id: number | null;
                runner_group_name: string | null;
                runner_id: number | null;
                runner_name: string | null;
                started_at: string;
                status: "queued" | "in_progress" | "completed" | "waiting";
                head_branch: string | null;
                workflow_name: string | null;
                steps: ({
                    completed_at: string | null;
                    conclusion: "failure" | "skipped" | "success" | "cancelled" | null;
                    name: string;
                    number: number;
                    started_at: string | null;
                    status: "completed" | "in_progress" | "queued" | "pending";
                })[];
                url: string;
            };
            deployment?: components["schemas"]["deployment"];
        };
        "webhook-workflow-job-waiting": {
            action: "waiting";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow_job: {
                check_run_url: string;
                completed_at: string | null;
                conclusion: string | null;
                created_at: string;
                head_sha: string;
                html_url: string;
                id: number;
                labels: string[];
                name: string;
                node_id: string;
                run_attempt: number;
                run_id: number;
                run_url: string;
                runner_group_id: number | null;
                runner_group_name: string | null;
                runner_id: number | null;
                runner_name: string | null;
                started_at: string;
                head_branch: string | null;
                workflow_name: string | null;
                status: "queued" | "in_progress" | "completed" | "waiting";
                steps: ({
                    completed_at: string | null;
                    conclusion: "failure" | "skipped" | "success" | "cancelled" | null;
                    name: string;
                    number: number;
                    started_at: string | null;
                    status: "completed" | "in_progress" | "queued" | "pending" | "waiting";
                })[];
                url: string;
            };
            deployment?: components["schemas"]["deployment"];
        };
        "webhook-workflow-run-completed": {
            action: "completed";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow: {
                badge_url: string;
                created_at: string;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                path: string;
                state: string;
                updated_at: string;
                url: string;
            } | null;
            workflow_run: ({
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url: string;
                cancel_url: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null | "skipped";
                created_at: string;
                event: string;
                head_branch: string | null;
                head_commit: {
                    author: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    committer: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    id: string;
                    message: string;
                    timestamp: string;
                    tree_id: string;
                };
                head_repository: {
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url: string;
                logs_url: string;
                name: string | null;
                node_id: string;
                path: string;
                previous_attempt_url: string | null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository: {
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                };
                rerun_url: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "pending" | "waiting";
                triggering_actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url: string;
            }) & ({
                actor?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                artifacts_url?: string;
                cancel_url?: string;
                check_suite_id?: number;
                check_suite_node_id?: string;
                check_suite_url?: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | "skipped";
                created_at?: string;
                event?: string;
                head_branch?: string | null;
                head_commit?: {
                    author?: {
                        email?: string;
                        name?: string;
                    };
                    committer?: {
                        email?: string;
                        name?: string;
                    };
                    id?: string;
                    message?: string;
                    timestamp?: string;
                    tree_id?: string;
                };
                head_repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                head_sha?: string;
                html_url?: string;
                id?: number;
                jobs_url?: string;
                logs_url?: string;
                name?: string | null;
                node_id?: string;
                path?: string;
                previous_attempt_url?: string | null;
                pull_requests?: (Record<string, never> | null)[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                rerun_url?: string;
                run_attempt?: number;
                run_number?: number;
                run_started_at?: string;
                status?: string;
                triggering_actor?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                } | null;
                updated_at?: string;
                url?: string;
                workflow_id?: number;
                workflow_url?: string;
            });
        };
        "webhook-workflow-run-in-progress": {
            action: "in_progress";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow: {
                badge_url: string;
                created_at: string;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                path: string;
                state: string;
                updated_at: string;
                url: string;
            } | null;
            workflow_run: ({
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url: string;
                cancel_url: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | "skipped" | null;
                created_at: string;
                event: string;
                head_branch: string | null;
                head_commit: {
                    author: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    committer: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    id: string;
                    message: string;
                    timestamp: string;
                    tree_id: string;
                };
                head_repository: {
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url: string;
                logs_url: string;
                name: string | null;
                node_id: string;
                path: string;
                previous_attempt_url: string | null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository: {
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                };
                rerun_url: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "pending";
                triggering_actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url: string;
            }) & ({
                actor?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                artifacts_url?: string;
                cancel_url?: string;
                check_suite_id?: number;
                check_suite_node_id?: string;
                check_suite_url?: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "skipped" | "stale" | null;
                created_at?: string;
                event?: string;
                head_branch?: string | null;
                head_commit?: {
                    author?: {
                        email?: string;
                        name?: string;
                    };
                    committer?: {
                        email?: string;
                        name?: string;
                    };
                    id?: string;
                    message?: string;
                    timestamp?: string;
                    tree_id?: string;
                };
                head_repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string | null;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                head_sha?: string;
                html_url?: string;
                id?: number;
                jobs_url?: string;
                logs_url?: string;
                name?: string | null;
                node_id?: string;
                path?: string;
                previous_attempt_url?: string | null;
                pull_requests?: (Record<string, never> | null)[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository?: {
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    description?: string | null;
                    downloads_url?: string;
                    events_url?: string;
                    fork?: boolean;
                    forks_url?: string;
                    full_name?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    hooks_url?: string;
                    html_url?: string;
                    id?: number;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    name?: string;
                    node_id?: string;
                    notifications_url?: string;
                    owner?: {
                        avatar_url?: string;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id?: number;
                        login?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: string;
                        url?: string;
                    };
                    private?: boolean;
                    pulls_url?: string;
                    releases_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    url?: string;
                };
                rerun_url?: string;
                run_attempt?: number;
                run_number?: number;
                run_started_at?: string;
                status?: string;
                triggering_actor?: {
                    avatar_url?: string;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id?: number;
                    login?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: string;
                    url?: string;
                };
                updated_at?: string;
                url?: string;
                workflow_id?: number;
                workflow_url?: string;
            });
        };
        "webhook-workflow-run-requested": {
            action: "requested";
            enterprise?: components["schemas"]["enterprise"];
            installation?: components["schemas"]["simple-installation"];
            organization?: components["schemas"]["organization-simple"];
            repository: components["schemas"]["repository"];
            sender: components["schemas"]["simple-user"];
            workflow: {
                badge_url: string;
                created_at: string;
                html_url: string;
                id: number;
                name: string;
                node_id: string;
                path: string;
                state: string;
                updated_at: string;
                url: string;
            } | null;
            workflow_run: {
                actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                artifacts_url: string;
                cancel_url: string;
                check_suite_id: number;
                check_suite_node_id: string;
                check_suite_url: string;
                conclusion: "success" | "failure" | "neutral" | "cancelled" | "timed_out" | "action_required" | "stale" | null | "skipped" | "startup_failure";
                created_at: string;
                event: string;
                head_branch: string | null;
                head_commit: {
                    author: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    committer: {
                        date?: string;
                        email: string | null;
                        name: string;
                        username?: string;
                    };
                    id: string;
                    message: string;
                    timestamp: string;
                    tree_id: string;
                };
                head_repository: {
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                };
                head_sha: string;
                html_url: string;
                id: number;
                jobs_url: string;
                logs_url: string;
                name: string | null;
                node_id: string;
                path: string;
                previous_attempt_url: string | null;
                pull_requests: {
                    base: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    head: {
                        ref: string;
                        repo: {
                            id: number;
                            name: string;
                            url: string;
                        };
                        sha: string;
                    };
                    id: number;
                    number: number;
                    url: string;
                }[];
                referenced_workflows?: {
                    path: string;
                    ref?: string;
                    sha: string;
                }[] | null;
                repository: {
                    archive_url: string;
                    assignees_url: string;
                    blobs_url: string;
                    branches_url: string;
                    collaborators_url: string;
                    comments_url: string;
                    commits_url: string;
                    compare_url: string;
                    contents_url: string;
                    contributors_url: string;
                    deployments_url: string;
                    description: string | null;
                    downloads_url: string;
                    events_url: string;
                    fork: boolean;
                    forks_url: string;
                    full_name: string;
                    git_commits_url: string;
                    git_refs_url: string;
                    git_tags_url: string;
                    hooks_url: string;
                    html_url: string;
                    id: number;
                    issue_comment_url: string;
                    issue_events_url: string;
                    issues_url: string;
                    keys_url: string;
                    labels_url: string;
                    languages_url: string;
                    merges_url: string;
                    milestones_url: string;
                    name: string;
                    node_id: string;
                    notifications_url: string;
                    owner: ({
                        avatar_url?: string;
                        deleted?: boolean;
                        email?: string | null;
                        events_url?: string;
                        followers_url?: string;
                        following_url?: string;
                        gists_url?: string;
                        gravatar_id?: string;
                        html_url?: string;
                        id: number;
                        login: string;
                        name?: string;
                        node_id?: string;
                        organizations_url?: string;
                        received_events_url?: string;
                        repos_url?: string;
                        site_admin?: boolean;
                        starred_url?: string;
                        subscriptions_url?: string;
                        type?: "Bot" | "User" | "Organization";
                        url?: string;
                    }) | null;
                    private: boolean;
                    pulls_url: string;
                    releases_url: string;
                    stargazers_url: string;
                    statuses_url: string;
                    subscribers_url: string;
                    subscription_url: string;
                    tags_url: string;
                    teams_url: string;
                    trees_url: string;
                    url: string;
                };
                rerun_url: string;
                run_attempt: number;
                run_number: number;
                run_started_at: string;
                status: "requested" | "in_progress" | "completed" | "queued" | "pending" | "waiting";
                triggering_actor: ({
                    avatar_url?: string;
                    deleted?: boolean;
                    email?: string | null;
                    events_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    gravatar_id?: string;
                    html_url?: string;
                    id: number;
                    login: string;
                    name?: string;
                    node_id?: string;
                    organizations_url?: string;
                    received_events_url?: string;
                    repos_url?: string;
                    site_admin?: boolean;
                    starred_url?: string;
                    subscriptions_url?: string;
                    type?: "Bot" | "User" | "Organization";
                    url?: string;
                }) | null;
                updated_at: string;
                url: string;
                workflow_id: number;
                workflow_url: string;
                display_title: string;
            };
        };
    };
    responses: {
        validation_failed_simple: {
            content: {
                "application/json": components["schemas"]["validation-error-simple"];
            };
        };
        not_found: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        bad_request: {
            content: {
                "application/json": components["schemas"]["basic-error"];
                "application/scim+json": components["schemas"]["scim-error"];
            };
        };
        validation_failed: {
            content: {
                "application/json": components["schemas"]["validation-error"];
            };
        };
        accepted: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        not_modified: {
            content: never;
        };
        requires_authentication: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        forbidden: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        service_unavailable: {
            content: {
                "application/json": {
                    code?: string;
                    message?: string;
                    documentation_url?: string;
                };
            };
        };
        forbidden_gist: {
            content: {
                "application/json": {
                    block?: {
                        reason?: string;
                        created_at?: string;
                        html_url?: string | null;
                    };
                    message?: string;
                    documentation_url?: string;
                };
            };
        };
        moved_permanently: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        conflict: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        actions_runner_jitconfig: {
            content: {
                "application/json": {
                    runner: components["schemas"]["runner"];
                    encoded_jit_config: string;
                };
            };
        };
        actions_runner_labels: {
            content: {
                "application/json": {
                    total_count: number;
                    labels: components["schemas"]["runner-label"][];
                };
            };
        };
        actions_runner_labels_readonly: {
            content: {
                "application/json": {
                    total_count: number;
                    labels: components["schemas"]["runner-label"][];
                };
            };
        };
        internal_error: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        package_es_list_error: {
            content: never;
        };
        no_content: {
            content: never;
        };
        gone: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        temporary_redirect: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        code_scanning_forbidden_read: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        code_scanning_forbidden_write: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        found: {
            content: never;
        };
        code_scanning_conflict: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        dependency_review_forbidden: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
        porter_maintenance: {
            content: {
                "application/json": components["schemas"]["basic-error"];
            };
        };
    };
    parameters: {
        "pagination-before"?: string;
        "pagination-after"?: string;
        direction?: "asc" | "desc";
        ghsa_id: string;
        "per-page"?: number;
        cursor?: string;
        "delivery-id": number;
        page?: number;
        since?: string;
        "installation-id": number;
        "client-id": string;
        "app-slug": string;
        enterprise: string;
        "dependabot-alert-comma-separated-states"?: string;
        "dependabot-alert-comma-separated-severities"?: string;
        "dependabot-alert-comma-separated-ecosystems"?: string;
        "dependabot-alert-comma-separated-packages"?: string;
        "dependabot-alert-scope"?: "development" | "runtime";
        "dependabot-alert-sort"?: "created" | "updated";
        "pagination-first"?: number;
        "pagination-last"?: number;
        "secret-scanning-alert-state"?: "open" | "resolved";
        "secret-scanning-alert-secret-type"?: string;
        "secret-scanning-alert-resolution"?: string;
        "secret-scanning-alert-sort"?: "created" | "updated";
        "gist-id": string;
        "comment-id": number;
        labels?: string;
        "account-id": number;
        "plan-id": number;
        sort?: "created" | "updated";
        owner: string;
        repo: string;
        all?: boolean;
        participating?: boolean;
        before?: string;
        "thread-id": number;
        "since-org"?: number;
        org: string;
        "repository-id": number;
        "runner-id": number;
        "runner-label-name": string;
        "secret-name": string;
        "variables-per-page"?: number;
        "variable-name": string;
        username: string;
        "tool-name"?: components["schemas"]["code-scanning-analysis-tool-name"];
        "tool-guid"?: components["schemas"]["code-scanning-analysis-tool-guid"];
        "hook-id": number;
        "invitation-id": number;
        "codespace-name": string;
        "migration-id": number;
        "repo-name": string;
        "package-visibility"?: "public" | "private" | "internal";
        "package-type": "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container";
        "package-name": string;
        "package-version-id": number;
        "personal-access-token-sort"?: "created_at";
        "personal-access-token-owner"?: string[];
        "personal-access-token-repository"?: string;
        "personal-access-token-permission"?: string;
        "personal-access-token-before"?: string;
        "personal-access-token-after"?: string;
        "fine-grained-personal-access-token-id": number;
        "secret-scanning-pagination-before-org-repo"?: string;
        "secret-scanning-pagination-after-org-repo"?: string;
        "team-slug": string;
        "discussion-number": number;
        "comment-number": number;
        "reaction-id": number;
        "project-id": number;
        "security-product": "dependency_graph" | "dependabot_alerts" | "dependabot_security_updates" | "advanced_security" | "code_scanning_default_setup" | "secret_scanning" | "secret_scanning_push_protection";
        "org-security-product-enablement": "enable_all" | "disable_all";
        "card-id": number;
        "column-id": number;
        "artifact-id": number;
        "actions-cache-git-ref-full"?: string;
        "actions-cache-key"?: string;
        "actions-cache-list-sort"?: "created_at" | "last_accessed_at" | "size_in_bytes";
        "actions-cache-key-required": string;
        "cache-id": number;
        "job-id": number;
        actor?: string;
        "workflow-run-branch"?: string;
        event?: string;
        "workflow-run-status"?: "completed" | "action_required" | "cancelled" | "failure" | "neutral" | "skipped" | "stale" | "success" | "timed_out" | "in_progress" | "queued" | "requested" | "waiting" | "pending";
        created?: string;
        "exclude-pull-requests"?: boolean;
        "workflow-run-check-suite-id"?: number;
        "workflow-run-head-sha"?: string;
        "run-id": number;
        "attempt-number": number;
        "workflow-id": number | string;
        "autolink-id": number;
        branch: string;
        "check-run-id": number;
        "check-suite-id": number;
        "check-name"?: string;
        status?: "queued" | "in_progress" | "completed";
        "git-ref"?: components["schemas"]["code-scanning-ref"];
        "alert-number": components["schemas"]["alert-number"];
        "commit-sha": string;
        "commit-ref": string;
        "dependabot-alert-comma-separated-manifests"?: string;
        "dependabot-alert-number": components["schemas"]["alert-number"];
        "manifest-path"?: string;
        "deployment-id": number;
        "environment-name": string;
        "branch-policy-id": number;
        "protection-rule-id": number;
        "since-user"?: number;
        "issue-number": number;
        "key-id": number;
        "milestone-number": number;
        "pull-number": number;
        "review-id": number;
        "asset-id": number;
        "release-id": number;
        "tag-protection-id": number;
        per?: "day" | "week";
        "since-repo"?: number;
        order?: "desc" | "asc";
        "team-id": number;
        "repository-id-in-query"?: number;
        "export-id": string;
        "gpg-key-id": number;
        "since-repo-date"?: string;
        "before-repo-date"?: string;
        "ssh-signing-key-id": number;
        "sort-starred"?: "created" | "updated";
    };
    requestBodies: never;
    headers: {
        link: string;
        "content-type": string;
        "x-common-marker-version": string;
        "x-rate-limit-limit": number;
        "x-rate-limit-remaining": number;
        "x-rate-limit-reset": number;
        location: string;
    };
    pathItems: never;
}
export type $defs = Record<string, never>;
export type external = Record<string, never>;
export interface operations {
    "meta/root": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["root"];
                };
            };
        };
    };
    "security-advisories/list-global-advisories": {
        parameters: {
            query?: {
                ghsa_id?: string;
                type?: "reviewed" | "malware" | "unreviewed";
                cve_id?: string;
                ecosystem?: "actions" | "composer" | "erlang" | "go" | "maven" | "npm" | "nuget" | "other" | "pip" | "pub" | "rubygems" | "rust";
                severity?: "unknown" | "low" | "medium" | "high" | "critical";
                cwes?: string | string[];
                is_withdrawn?: boolean;
                affects?: string | string[];
                published?: string;
                updated?: string;
                modified?: string;
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                direction?: components["parameters"]["direction"];
                per_page?: number;
                sort?: "updated" | "published";
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["global-advisory"][];
                };
            };
            422: components["responses"]["validation_failed_simple"];
            429: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "security-advisories/get-global-advisory": {
        parameters: {
            path: {
                ghsa_id: components["parameters"]["ghsa_id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["global-advisory"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "apps/get-authenticated": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["integration"];
                };
            };
        };
    };
    "apps/create-from-manifest": {
        parameters: {
            path: {
                code: string;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["integration"] & ({
                        client_id: string;
                        client_secret: string;
                        webhook_secret: string | null;
                        pem: string;
                        [key: string]: unknown;
                    });
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "apps/get-webhook-config-for-app": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["webhook-config"];
                };
            };
        };
    };
    "apps/update-webhook-config-for-app": {
        requestBody: {
            content: {
                "application/json": {
                    url?: components["schemas"]["webhook-config-url"];
                    content_type?: components["schemas"]["webhook-config-content-type"];
                    secret?: components["schemas"]["webhook-config-secret"];
                    insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["webhook-config"];
                };
            };
        };
    };
    "apps/list-webhook-deliveries": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                cursor?: components["parameters"]["cursor"];
                redelivery?: boolean;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook-delivery-item"][];
                };
            };
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/get-webhook-delivery": {
        parameters: {
            path: {
                delivery_id: components["parameters"]["delivery-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook-delivery"];
                };
            };
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/redeliver-webhook-delivery": {
        parameters: {
            path: {
                delivery_id: components["parameters"]["delivery-id"];
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/list-installation-requests-for-authenticated-app": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["integration-installation-request"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
        };
    };
    "apps/list-installations": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                since?: components["parameters"]["since"];
                outdated?: string;
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["installation"][];
                };
            };
        };
    };
    "apps/get-installation": {
        parameters: {
            path: {
                installation_id: components["parameters"]["installation-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["installation"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "apps/delete-installation": {
        parameters: {
            path: {
                installation_id: components["parameters"]["installation-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "apps/create-installation-access-token": {
        parameters: {
            path: {
                installation_id: components["parameters"]["installation-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    repositories?: string[];
                    repository_ids?: number[];
                    permissions?: components["schemas"]["app-permissions"];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["installation-token"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/suspend-installation": {
        parameters: {
            path: {
                installation_id: components["parameters"]["installation-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "apps/unsuspend-installation": {
        parameters: {
            path: {
                installation_id: components["parameters"]["installation-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "apps/delete-authorization": {
        parameters: {
            path: {
                client_id: components["parameters"]["client-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    access_token: string;
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/check-token": {
        parameters: {
            path: {
                client_id: components["parameters"]["client-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    access_token: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["authorization"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/delete-token": {
        parameters: {
            path: {
                client_id: components["parameters"]["client-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    access_token: string;
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/reset-token": {
        parameters: {
            path: {
                client_id: components["parameters"]["client-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    access_token: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["authorization"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/scope-token": {
        parameters: {
            path: {
                client_id: components["parameters"]["client-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    access_token: string;
                    target?: string;
                    target_id?: number;
                    repositories?: string[];
                    repository_ids?: number[];
                    permissions?: components["schemas"]["app-permissions"];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["authorization"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/get-by-slug": {
        parameters: {
            path: {
                app_slug: components["parameters"]["app-slug"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["integration"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "codes-of-conduct/get-all-codes-of-conduct": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-of-conduct"][];
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "codes-of-conduct/get-conduct-code": {
        parameters: {
            path: {
                key: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-of-conduct"];
                };
            };
            304: components["responses"]["not_modified"];
            404: components["responses"]["not_found"];
        };
    };
    "emojis/get": {
        responses: {
            200: {
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "dependabot/list-alerts-for-enterprise": {
        parameters: {
            query?: {
                state?: components["parameters"]["dependabot-alert-comma-separated-states"];
                severity?: components["parameters"]["dependabot-alert-comma-separated-severities"];
                ecosystem?: components["parameters"]["dependabot-alert-comma-separated-ecosystems"];
                package?: components["parameters"]["dependabot-alert-comma-separated-packages"];
                scope?: components["parameters"]["dependabot-alert-scope"];
                sort?: components["parameters"]["dependabot-alert-sort"];
                direction?: components["parameters"]["direction"];
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                first?: components["parameters"]["pagination-first"];
                last?: components["parameters"]["pagination-last"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                enterprise: components["parameters"]["enterprise"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-alert-with-repository"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "secret-scanning/list-alerts-for-enterprise": {
        parameters: {
            query?: {
                state?: components["parameters"]["secret-scanning-alert-state"];
                secret_type?: components["parameters"]["secret-scanning-alert-secret-type"];
                resolution?: components["parameters"]["secret-scanning-alert-resolution"];
                sort?: components["parameters"]["secret-scanning-alert-sort"];
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
            };
            path: {
                enterprise: components["parameters"]["enterprise"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-secret-scanning-alert"][];
                };
            };
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "activity/list-public-events": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "activity/get-feeds": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["feed"];
                };
            };
        };
    };
    "gists/list": {
        parameters: {
            query?: {
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["base-gist"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
        };
    };
    "gists/create": {
        requestBody: {
            content: {
                "application/json": {
                    description?: string;
                    files: {
                        [key: string]: {
                            content: string;
                        };
                    };
                    public?: boolean | ("true" | "false");
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["gist-simple"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "gists/list-public": {
        parameters: {
            query?: {
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["base-gist"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "gists/list-starred": {
        parameters: {
            query?: {
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["base-gist"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "gists/get": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["gist-simple"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden_gist"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/delete": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/update": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": ({
                    description?: string;
                    files?: {
                        [key: string]: ({
                            content?: string;
                            filename?: string | null;
                        }) | null;
                    };
                }) | null;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["gist-simple"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "gists/list-comments": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["gist-comment"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/create-comment": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["gist-comment"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/get-comment": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["gist-comment"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden_gist"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/delete-comment": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/update-comment": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["gist-comment"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "gists/list-commits": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link?: string;
                };
                content: {
                    "application/json": components["schemas"]["gist-commit"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/list-forks": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["gist-simple"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/fork": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["base-gist"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "gists/check-is-starred": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "gists/star": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/unstar": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "gists/get-revision": {
        parameters: {
            path: {
                gist_id: components["parameters"]["gist-id"];
                sha: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["gist-simple"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "gitignore/get-all-templates": {
        responses: {
            200: {
                content: {
                    "application/json": string[];
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "gitignore/get-template": {
        parameters: {
            path: {
                name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["gitignore-template"];
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "apps/list-repos-accessible-to-installation": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        repositories: components["schemas"]["repository"][];
                        repository_selection?: string;
                    };
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "apps/revoke-installation-access-token": {
        responses: {
            204: {
                content: never;
            };
        };
    };
    "issues/list": {
        parameters: {
            query?: {
                filter?: "assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all";
                state?: "open" | "closed" | "all";
                labels?: components["parameters"]["labels"];
                sort?: "created" | "updated" | "comments";
                direction?: components["parameters"]["direction"];
                since?: components["parameters"]["since"];
                collab?: boolean;
                orgs?: boolean;
                owned?: boolean;
                pulls?: boolean;
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue"][];
                };
            };
            304: components["responses"]["not_modified"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "licenses/get-all-commonly-used": {
        parameters: {
            query?: {
                featured?: boolean;
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["license-simple"][];
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "licenses/get": {
        parameters: {
            path: {
                license: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["license"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "markdown/render": {
        requestBody: {
            content: {
                "application/json": {
                    text: string;
                    mode?: "markdown" | "gfm";
                    context?: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    "Content-Type": components["headers"]["content-type"];
                    "Content-Length"?: string;
                    "X-CommonMarker-Version": components["headers"]["x-common-marker-version"];
                };
                content: {
                    "text/html": string;
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "markdown/render-raw": {
        requestBody?: {
            content: {
                "text/plain": string;
                "text/x-markdown": string;
            };
        };
        responses: {
            200: {
                headers: {
                    "X-CommonMarker-Version": components["headers"]["x-common-marker-version"];
                };
                content: {
                    "text/html": string;
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "apps/get-subscription-plan-for-account": {
        parameters: {
            path: {
                account_id: components["parameters"]["account-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["marketplace-purchase"];
                };
            };
            401: components["responses"]["requires_authentication"];
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "apps/list-plans": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["marketplace-listing-plan"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            404: components["responses"]["not_found"];
        };
    };
    "apps/list-accounts-for-plan": {
        parameters: {
            query?: {
                sort?: components["parameters"]["sort"];
                direction?: "asc" | "desc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                plan_id: components["parameters"]["plan-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["marketplace-purchase"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/get-subscription-plan-for-account-stubbed": {
        parameters: {
            path: {
                account_id: components["parameters"]["account-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["marketplace-purchase"];
                };
            };
            401: components["responses"]["requires_authentication"];
            404: {
                content: never;
            };
        };
    };
    "apps/list-plans-stubbed": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["marketplace-listing-plan"][];
                };
            };
            401: components["responses"]["requires_authentication"];
        };
    };
    "apps/list-accounts-for-plan-stubbed": {
        parameters: {
            query?: {
                sort?: components["parameters"]["sort"];
                direction?: "asc" | "desc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                plan_id: components["parameters"]["plan-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["marketplace-purchase"][];
                };
            };
            401: components["responses"]["requires_authentication"];
        };
    };
    "meta/get": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["api-overview"];
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "activity/list-public-events-for-repo-network": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
            301: components["responses"]["moved_permanently"];
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "activity/list-notifications-for-authenticated-user": {
        parameters: {
            query?: {
                all?: components["parameters"]["all"];
                participating?: components["parameters"]["participating"];
                since?: components["parameters"]["since"];
                before?: components["parameters"]["before"];
                page?: components["parameters"]["page"];
                per_page?: number;
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["thread"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "activity/mark-notifications-as-read": {
        requestBody?: {
            content: {
                "application/json": {
                    last_read_at?: string;
                    read?: boolean;
                };
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
            205: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/get-thread": {
        parameters: {
            path: {
                thread_id: components["parameters"]["thread-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["thread"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/mark-thread-as-read": {
        parameters: {
            path: {
                thread_id: components["parameters"]["thread-id"];
            };
        };
        responses: {
            205: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/get-thread-subscription-for-authenticated-user": {
        parameters: {
            path: {
                thread_id: components["parameters"]["thread-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["thread-subscription"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/set-thread-subscription": {
        parameters: {
            path: {
                thread_id: components["parameters"]["thread-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    ignored?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["thread-subscription"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/delete-thread-subscription": {
        parameters: {
            path: {
                thread_id: components["parameters"]["thread-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "meta/get-octocat": {
        parameters: {
            query?: {
                s?: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/octocat-stream": string;
                };
            };
        };
    };
    "orgs/list": {
        parameters: {
            query?: {
                since?: components["parameters"]["since-org"];
                per_page?: components["parameters"]["per-page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link?: string;
                };
                content: {
                    "application/json": components["schemas"]["organization-simple"][];
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "orgs/get": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["organization-full"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/delete": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "orgs/update": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    billing_email?: string;
                    company?: string;
                    email?: string;
                    twitter_username?: string;
                    location?: string;
                    name?: string;
                    description?: string;
                    has_organization_projects?: boolean;
                    has_repository_projects?: boolean;
                    default_repository_permission?: "read" | "write" | "admin" | "none";
                    members_can_create_repositories?: boolean;
                    members_can_create_internal_repositories?: boolean;
                    members_can_create_private_repositories?: boolean;
                    members_can_create_public_repositories?: boolean;
                    members_allowed_repository_creation_type?: "all" | "private" | "none";
                    members_can_create_pages?: boolean;
                    members_can_create_public_pages?: boolean;
                    members_can_create_private_pages?: boolean;
                    members_can_fork_private_repositories?: boolean;
                    web_commit_signoff_required?: boolean;
                    blog?: string;
                    advanced_security_enabled_for_new_repositories?: boolean;
                    dependabot_alerts_enabled_for_new_repositories?: boolean;
                    dependabot_security_updates_enabled_for_new_repositories?: boolean;
                    dependency_graph_enabled_for_new_repositories?: boolean;
                    secret_scanning_enabled_for_new_repositories?: boolean;
                    secret_scanning_push_protection_enabled_for_new_repositories?: boolean;
                    secret_scanning_push_protection_custom_link_enabled?: boolean;
                    secret_scanning_push_protection_custom_link?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["organization-full"];
                };
            };
            409: components["responses"]["conflict"];
            422: {
                content: {
                    "application/json": components["schemas"]["validation-error"] | components["schemas"]["validation-error-simple"];
                };
            };
        };
    };
    "actions/get-actions-cache-usage-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["actions-cache-usage-org-enterprise"];
                };
            };
        };
    };
    "actions/get-actions-cache-usage-by-repo-for-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        repository_cache_usages: components["schemas"]["actions-cache-usage-by-repository"][];
                    };
                };
            };
        };
    };
    "oidc/get-oidc-custom-sub-template-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["oidc-custom-sub"];
                };
            };
        };
    };
    "oidc/update-oidc-custom-sub-template-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["oidc-custom-sub"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "actions/get-github-actions-permissions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-organization-permissions"];
                };
            };
        };
    };
    "actions/set-github-actions-permissions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    enabled_repositories: components["schemas"]["enabled-repositories"];
                    allowed_actions?: components["schemas"]["allowed-actions"];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-selected-repositories-enabled-github-actions-organization": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        repositories: components["schemas"]["repository"][];
                    };
                };
            };
        };
    };
    "actions/set-selected-repositories-enabled-github-actions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_repository_ids: number[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/enable-selected-repository-github-actions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                repository_id: components["parameters"]["repository-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/disable-selected-repository-github-actions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                repository_id: components["parameters"]["repository-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/get-allowed-actions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["selected-actions"];
                };
            };
        };
    };
    "actions/set-allowed-actions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["selected-actions"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/get-github-actions-default-workflow-permissions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-get-default-workflow-permissions"];
                };
            };
        };
    };
    "actions/set-github-actions-default-workflow-permissions-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["actions-set-default-workflow-permissions"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-self-hosted-runners-for-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        runners: components["schemas"]["runner"][];
                    };
                };
            };
        };
    };
    "actions/list-runner-applications-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["runner-application"][];
                };
            };
        };
    };
    "actions/generate-runner-jitconfig-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    runner_group_id: number;
                    labels: string[];
                    work_folder?: string;
                };
            };
        };
        responses: {
            201: components["responses"]["actions_runner_jitconfig"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/create-registration-token-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["authentication-token"];
                };
            };
        };
    };
    "actions/create-remove-token-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["authentication-token"];
                };
            };
        };
    };
    "actions/get-self-hosted-runner-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["runner"];
                };
            };
        };
    };
    "actions/delete-self-hosted-runner-from-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-labels-for-self-hosted-runner-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
        };
    };
    "actions/set-custom-labels-for-self-hosted-runner-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    labels: string[];
                };
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/add-custom-labels-to-self-hosted-runner-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    labels: string[];
                };
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/remove-all-custom-labels-from-self-hosted-runner-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels_readonly"];
            404: components["responses"]["not_found"];
        };
    };
    "actions/remove-custom-label-from-self-hosted-runner-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                runner_id: components["parameters"]["runner-id"];
                name: components["parameters"]["runner-label-name"];
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/list-org-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["organization-actions-secret"][];
                    };
                };
            };
        };
    };
    "actions/get-org-public-key": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-public-key"];
                };
            };
        };
    };
    "actions/get-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["organization-actions-secret"];
                };
            };
        };
    };
    "actions/create-or-update-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value?: string;
                    key_id?: string;
                    visibility: "all" | "private" | "selected";
                    selected_repository_ids?: number[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
        };
    };
    "actions/delete-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-selected-repos-for-org-secret": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        repositories: components["schemas"]["minimal-repository"][];
                    };
                };
            };
        };
    };
    "actions/set-selected-repos-for-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_repository_ids: number[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/add-selected-repo-to-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "actions/remove-selected-repo-from-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "actions/list-org-variables": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["variables-per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        variables: components["schemas"]["organization-actions-variable"][];
                    };
                };
            };
        };
    };
    "actions/create-org-variable": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    value: string;
                    visibility: "all" | "private" | "selected";
                    selected_repository_ids?: number[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
        };
    };
    "actions/get-org-variable": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                name: components["parameters"]["variable-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["organization-actions-variable"];
                };
            };
        };
    };
    "actions/delete-org-variable": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                name: components["parameters"]["variable-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/update-org-variable": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                name: components["parameters"]["variable-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name?: string;
                    value?: string;
                    visibility?: "all" | "private" | "selected";
                    selected_repository_ids?: number[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-selected-repos-for-org-variable": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                org: components["parameters"]["org"];
                name: components["parameters"]["variable-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        repositories: components["schemas"]["minimal-repository"][];
                    };
                };
            };
            409: {
                content: never;
            };
        };
    };
    "actions/set-selected-repos-for-org-variable": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                name: components["parameters"]["variable-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_repository_ids: number[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "actions/add-selected-repo-to-org-variable": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                name: components["parameters"]["variable-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "actions/remove-selected-repo-from-org-variable": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                name: components["parameters"]["variable-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "orgs/list-blocked-users": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
        };
    };
    "orgs/check-blocked-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "orgs/block-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/unblock-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "code-scanning/list-alerts-for-org": {
        parameters: {
            query?: {
                tool_name?: components["parameters"]["tool-name"];
                tool_guid?: components["parameters"]["tool-guid"];
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                direction?: components["parameters"]["direction"];
                state?: components["schemas"]["code-scanning-alert-state-query"];
                sort?: "created" | "updated";
                severity?: components["schemas"]["code-scanning-alert-severity"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["code-scanning-organization-alert-items"][];
                };
            };
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "codespaces/list-in-organization": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        codespaces: components["schemas"]["codespace"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/set-codespaces-access": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    visibility: "disabled" | "selected_members" | "all_members" | "all_members_and_outside_collaborators";
                    selected_usernames?: string[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            400: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/set-codespaces-access-users": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_usernames: string[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            400: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/delete-codespaces-access-users": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_usernames: string[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            400: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/list-org-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["codespaces-org-secret"][];
                    };
                };
            };
        };
    };
    "codespaces/get-org-public-key": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespaces-public-key"];
                };
            };
        };
    };
    "codespaces/get-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["codespaces-org-secret"];
                };
            };
        };
    };
    "codespaces/create-or-update-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value?: string;
                    key_id?: string;
                    visibility: "all" | "private" | "selected";
                    selected_repository_ids?: number[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "codespaces/delete-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "codespaces/list-selected-repos-for-org-secret": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        repositories: components["schemas"]["minimal-repository"][];
                    };
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "codespaces/set-selected-repos-for-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_repository_ids: number[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            409: {
                content: never;
            };
        };
    };
    "codespaces/add-selected-repo-to-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            409: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "codespaces/remove-selected-repo-from-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            409: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "copilot/get-copilot-organization-details": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["copilot-organization-details"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "copilot/list-copilot-seats": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: number;
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_seats?: number;
                        seats?: components["schemas"]["copilot-seat-details"][];
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "copilot/add-copilot-for-business-seats-for-teams": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_teams: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": {
                        seats_created: number;
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
            500: components["responses"]["internal_error"];
        };
    };
    "copilot/cancel-copilot-seat-assignment-for-teams": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_teams: string[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        seats_cancelled: number;
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
            500: components["responses"]["internal_error"];
        };
    };
    "copilot/add-copilot-for-business-seats-for-users": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_usernames: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": {
                        seats_created: number;
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
            500: components["responses"]["internal_error"];
        };
    };
    "copilot/cancel-copilot-seat-assignment-for-users": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_usernames: string[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        seats_cancelled: number;
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
            500: components["responses"]["internal_error"];
        };
    };
    "dependabot/list-alerts-for-org": {
        parameters: {
            query?: {
                state?: components["parameters"]["dependabot-alert-comma-separated-states"];
                severity?: components["parameters"]["dependabot-alert-comma-separated-severities"];
                ecosystem?: components["parameters"]["dependabot-alert-comma-separated-ecosystems"];
                package?: components["parameters"]["dependabot-alert-comma-separated-packages"];
                scope?: components["parameters"]["dependabot-alert-scope"];
                sort?: components["parameters"]["dependabot-alert-sort"];
                direction?: components["parameters"]["direction"];
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                first?: components["parameters"]["pagination-first"];
                last?: components["parameters"]["pagination-last"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-alert-with-repository"][];
                };
            };
            304: components["responses"]["not_modified"];
            400: components["responses"]["bad_request"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "dependabot/list-org-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["organization-dependabot-secret"][];
                    };
                };
            };
        };
    };
    "dependabot/get-org-public-key": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-public-key"];
                };
            };
        };
    };
    "dependabot/get-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["organization-dependabot-secret"];
                };
            };
        };
    };
    "dependabot/create-or-update-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value?: string;
                    key_id?: string;
                    visibility: "all" | "private" | "selected";
                    selected_repository_ids?: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
        };
    };
    "dependabot/delete-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "dependabot/list-selected-repos-for-org-secret": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        repositories: components["schemas"]["minimal-repository"][];
                    };
                };
            };
        };
    };
    "dependabot/set-selected-repos-for-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_repository_ids: number[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "dependabot/add-selected-repo-to-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "dependabot/remove-selected-repo-from-org-secret": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "packages/list-docker-migration-conflicting-packages-for-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/list-public-org-events": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
        };
    };
    "orgs/list-failed-invitations": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-invitation"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/list-webhooks": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["org-hook"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/create-webhook": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    config: {
                        url: components["schemas"]["webhook-config-url"];
                        content_type?: components["schemas"]["webhook-config-content-type"];
                        secret?: components["schemas"]["webhook-config-secret"];
                        insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                        username?: string;
                        password?: string;
                    };
                    events?: string[];
                    active?: boolean;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["org-hook"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/get-webhook": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["org-hook"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/delete-webhook": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/update-webhook": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    config?: {
                        url: components["schemas"]["webhook-config-url"];
                        content_type?: components["schemas"]["webhook-config-content-type"];
                        secret?: components["schemas"]["webhook-config-secret"];
                        insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                    };
                    events?: string[];
                    active?: boolean;
                    name?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["org-hook"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/get-webhook-config-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["webhook-config"];
                };
            };
        };
    };
    "orgs/update-webhook-config-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    url?: components["schemas"]["webhook-config-url"];
                    content_type?: components["schemas"]["webhook-config-content-type"];
                    secret?: components["schemas"]["webhook-config-secret"];
                    insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["webhook-config"];
                };
            };
        };
    };
    "orgs/list-webhook-deliveries": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                cursor?: components["parameters"]["cursor"];
                redelivery?: boolean;
            };
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook-delivery-item"][];
                };
            };
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/get-webhook-delivery": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
                delivery_id: components["parameters"]["delivery-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook-delivery"];
                };
            };
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/redeliver-webhook-delivery": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
                delivery_id: components["parameters"]["delivery-id"];
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/ping-webhook": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "apps/get-org-installation": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["installation"];
                };
            };
        };
    };
    "orgs/list-app-installations": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        installations: components["schemas"]["installation"][];
                    };
                };
            };
        };
    };
    "interactions/get-restrictions-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["interaction-limit-response"] | Record<string, never>;
                };
            };
        };
    };
    "interactions/set-restrictions-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["interaction-limit"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["interaction-limit-response"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "interactions/remove-restrictions-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "orgs/list-pending-invitations": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                role?: "all" | "admin" | "direct_member" | "billing_manager" | "hiring_manager";
                invitation_source?: "all" | "member" | "scim";
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-invitation"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/create-invitation": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    invitee_id?: number;
                    email?: string;
                    role?: "admin" | "direct_member" | "billing_manager";
                    team_ids?: number[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["organization-invitation"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/cancel-invitation": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                invitation_id: components["parameters"]["invitation-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/list-invitation-teams": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                invitation_id: components["parameters"]["invitation-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/list-for-org": {
        parameters: {
            query?: {
                filter?: "assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all";
                state?: "open" | "closed" | "all";
                labels?: components["parameters"]["labels"];
                sort?: "created" | "updated" | "comments";
                direction?: components["parameters"]["direction"];
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/list-members": {
        parameters: {
            query?: {
                filter?: "2fa_disabled" | "all";
                role?: "all" | "admin" | "member";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/check-membership-for-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            302: {
                headers: {
                    Location?: string;
                };
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "orgs/remove-member": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
        };
    };
    "codespaces/get-codespaces-for-user-in-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        codespaces: components["schemas"]["codespace"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/delete-from-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/stop-in-organization": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "copilot/get-copilot-seat-assignment-details-for-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["copilot-seat-details"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/get-membership-for-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["org-membership"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "orgs/set-membership-for-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    role?: "admin" | "member";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["org-membership"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/remove-membership-for-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "migrations/list-for-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                exclude?: "repositories"[];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["migration"][];
                };
            };
        };
    };
    "migrations/start-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    repositories: string[];
                    lock_repositories?: boolean;
                    exclude_metadata?: boolean;
                    exclude_git_data?: boolean;
                    exclude_attachments?: boolean;
                    exclude_releases?: boolean;
                    exclude_owner_projects?: boolean;
                    org_metadata_only?: boolean;
                    exclude?: "repositories"[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["migration"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "migrations/get-status-for-org": {
        parameters: {
            query?: {
                exclude?: "repositories"[];
            };
            path: {
                org: components["parameters"]["org"];
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["migration"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "migrations/download-archive-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            302: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "migrations/delete-archive-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "migrations/unlock-repo-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                migration_id: components["parameters"]["migration-id"];
                repo_name: components["parameters"]["repo-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "migrations/list-repos-for-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/list-outside-collaborators": {
        parameters: {
            query?: {
                filter?: "2fa_disabled" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
        };
    };
    "orgs/convert-member-to-outside-collaborator": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    async?: boolean;
                };
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            204: {
                content: never;
            };
            403: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/remove-outside-collaborator": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            422: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                    };
                };
            };
        };
    };
    "packages/list-packages-for-organization": {
        parameters: {
            query: {
                package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container";
                visibility?: components["parameters"]["package-visibility"];
                page?: number;
                per_page?: number;
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"][];
                };
            };
            400: components["responses"]["package_es_list_error"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "packages/get-package-for-organization": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"];
                };
            };
        };
    };
    "packages/delete-package-for-org": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                org: components["parameters"]["org"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/restore-package-for-org": {
        parameters: {
            query?: {
                token?: string;
            };
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                org: components["parameters"]["org"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/get-all-package-versions-for-package-owned-by-org": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                state?: "active" | "deleted";
            };
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package-version"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/get-package-version-for-organization": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                org: components["parameters"]["org"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package-version"];
                };
            };
        };
    };
    "packages/delete-package-version-for-org": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                org: components["parameters"]["org"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/restore-package-version-for-org": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                org: components["parameters"]["org"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "orgs/list-pat-grant-requests": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                sort?: components["parameters"]["personal-access-token-sort"];
                direction?: components["parameters"]["direction"];
                owner?: components["parameters"]["personal-access-token-owner"];
                repository?: components["parameters"]["personal-access-token-repository"];
                permission?: components["parameters"]["personal-access-token-permission"];
                last_used_before?: components["parameters"]["personal-access-token-before"];
                last_used_after?: components["parameters"]["personal-access-token-after"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-programmatic-access-grant-request"][];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/review-pat-grant-requests-in-bulk": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    pat_request_ids?: number[];
                    action: "approve" | "deny";
                    reason?: string | null;
                };
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/review-pat-grant-request": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                pat_request_id: number;
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    action: "approve" | "deny";
                    reason?: string | null;
                };
            };
        };
        responses: {
            204: components["responses"]["no_content"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/list-pat-grant-request-repositories": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                pat_request_id: number;
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/list-pat-grants": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                sort?: components["parameters"]["personal-access-token-sort"];
                direction?: components["parameters"]["direction"];
                owner?: components["parameters"]["personal-access-token-owner"];
                repository?: components["parameters"]["personal-access-token-repository"];
                permission?: components["parameters"]["personal-access-token-permission"];
                last_used_before?: components["parameters"]["personal-access-token-before"];
                last_used_after?: components["parameters"]["personal-access-token-after"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-programmatic-access-grant"][];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/update-pat-accesses": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    action: "revoke";
                    pat_ids: number[];
                };
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/update-pat-access": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                pat_id: components["parameters"]["fine-grained-personal-access-token-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    action: "revoke";
                };
            };
        };
        responses: {
            204: components["responses"]["no_content"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "orgs/list-pat-grant-repositories": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                pat_id: number;
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "projects/list-for-org": {
        parameters: {
            query?: {
                state?: "open" | "closed" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["project"][];
                };
            };
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "projects/create-for-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    body?: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["project"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "orgs/list-public-members": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
        };
    };
    "orgs/check-public-membership-for-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "orgs/set-public-membership-for-authenticated-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
        };
    };
    "orgs/remove-public-membership-for-authenticated-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/list-for-org": {
        parameters: {
            query?: {
                type?: "all" | "public" | "private" | "forks" | "sources" | "member";
                sort?: "created" | "updated" | "pushed" | "full_name";
                direction?: "asc" | "desc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
        };
    };
    "repos/create-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    description?: string;
                    homepage?: string;
                    private?: boolean;
                    visibility?: "public" | "private";
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_downloads?: boolean;
                    is_template?: boolean;
                    team_id?: number;
                    auto_init?: boolean;
                    gitignore_template?: string;
                    license_template?: string;
                    allow_squash_merge?: boolean;
                    allow_merge_commit?: boolean;
                    allow_rebase_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    use_squash_pr_title_as_default?: boolean;
                    squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                    squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                    merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                    merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["repository"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-org-rulesets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"][];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/create-org-ruleset": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    target?: "branch" | "tag";
                    enforcement: components["schemas"]["repository-rule-enforcement"];
                    bypass_actors?: components["schemas"]["repository-ruleset-bypass-actor"][];
                    conditions?: components["schemas"]["org-ruleset-conditions"];
                    rules?: components["schemas"]["repository-rule"][];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/get-org-ruleset": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                ruleset_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/update-org-ruleset": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                ruleset_id: number;
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    target?: "branch" | "tag";
                    enforcement?: components["schemas"]["repository-rule-enforcement"];
                    bypass_actors?: components["schemas"]["repository-ruleset-bypass-actor"][];
                    conditions?: components["schemas"]["org-ruleset-conditions"];
                    rules?: components["schemas"]["repository-rule"][];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/delete-org-ruleset": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                ruleset_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "secret-scanning/list-alerts-for-org": {
        parameters: {
            query?: {
                state?: components["parameters"]["secret-scanning-alert-state"];
                secret_type?: components["parameters"]["secret-scanning-alert-secret-type"];
                resolution?: components["parameters"]["secret-scanning-alert-resolution"];
                sort?: components["parameters"]["secret-scanning-alert-sort"];
                direction?: components["parameters"]["direction"];
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                before?: components["parameters"]["secret-scanning-pagination-before-org-repo"];
                after?: components["parameters"]["secret-scanning-pagination-after-org-repo"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-secret-scanning-alert"][];
                };
            };
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "security-advisories/list-org-repository-advisories": {
        parameters: {
            query?: {
                direction?: components["parameters"]["direction"];
                sort?: "created" | "updated" | "published";
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                per_page?: number;
                state?: "triage" | "draft" | "published" | "closed";
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-advisory"][];
                };
            };
            400: components["responses"]["bad_request"];
            404: components["responses"]["not_found"];
        };
    };
    "orgs/list-security-manager-teams": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-simple"][];
                };
            };
        };
    };
    "orgs/add-security-manager-team": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "orgs/remove-security-manager-team": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "billing/get-github-actions-billing-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-billing-usage"];
                };
            };
        };
    };
    "billing/get-github-packages-billing-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["packages-billing-usage"];
                };
            };
        };
    };
    "billing/get-shared-storage-billing-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["combined-billing-usage"];
                };
            };
        };
    };
    "teams/list": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            403: components["responses"]["forbidden"];
        };
    };
    "teams/create": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    description?: string;
                    maintainers?: string[];
                    repo_names?: string[];
                    privacy?: "secret" | "closed";
                    notification_setting?: "notifications_enabled" | "notifications_disabled";
                    permission?: "pull" | "push";
                    parent_team_id?: number;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["team-full"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "teams/get-by-name": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-full"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "teams/delete-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/update-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    description?: string;
                    privacy?: "secret" | "closed";
                    notification_setting?: "notifications_enabled" | "notifications_disabled";
                    permission?: "pull" | "push" | "admin";
                    parent_team_id?: number | null;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-full"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["team-full"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "teams/list-discussions-in-org": {
        parameters: {
            query?: {
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                pinned?: string;
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team-discussion"][];
                };
            };
        };
    };
    "teams/create-discussion-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    title: string;
                    body: string;
                    private?: boolean;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["team-discussion"];
                };
            };
        };
    };
    "teams/get-discussion-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion"];
                };
            };
        };
    };
    "teams/delete-discussion-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/update-discussion-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    title?: string;
                    body?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion"];
                };
            };
        };
    };
    "teams/list-discussion-comments-in-org": {
        parameters: {
            query?: {
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"][];
                };
            };
        };
    };
    "teams/create-discussion-comment-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"];
                };
            };
        };
    };
    "teams/get-discussion-comment-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"];
                };
            };
        };
    };
    "teams/delete-discussion-comment-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/update-discussion-comment-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"];
                };
            };
        };
    };
    "reactions/list-for-team-discussion-comment-in-org": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
        };
    };
    "reactions/create-for-team-discussion-comment-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
        };
    };
    "reactions/delete-for-team-discussion-comment": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
                reaction_id: components["parameters"]["reaction-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "reactions/list-for-team-discussion-in-org": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
        };
    };
    "reactions/create-for-team-discussion-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
        };
    };
    "reactions/delete-for-team-discussion": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                discussion_number: components["parameters"]["discussion-number"];
                reaction_id: components["parameters"]["reaction-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/list-pending-invitations-in-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-invitation"][];
                };
            };
        };
    };
    "teams/list-members-in-org": {
        parameters: {
            query?: {
                role?: "member" | "maintainer" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
        };
    };
    "teams/get-membership-for-user-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-membership"];
                };
            };
            404: {
                content: never;
            };
        };
    };
    "teams/add-or-update-membership-for-user-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                username: components["parameters"]["username"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    role?: "member" | "maintainer";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-membership"];
                };
            };
            403: {
                content: never;
            };
            422: {
                content: never;
            };
        };
    };
    "teams/remove-membership-for-user-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: {
                content: never;
            };
        };
    };
    "teams/list-projects-in-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team-project"][];
                };
            };
        };
    };
    "teams/check-permissions-for-project-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-project"];
                };
            };
            404: {
                content: never;
            };
        };
    };
    "teams/add-or-update-project-permissions-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                project_id: components["parameters"]["project-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": ({
                    permission?: "read" | "write" | "admin";
                }) | null;
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                    };
                };
            };
        };
    };
    "teams/remove-project-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/list-repos-in-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
        };
    };
    "teams/check-permissions-for-repo-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-repository"];
                };
            };
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "teams/add-or-update-repo-permissions-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    permission?: string;
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/remove-repo-in-org": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/list-child-in-org": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                org: components["parameters"]["org"];
                team_slug: components["parameters"]["team-slug"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
        };
    };
    "orgs/enable-or-disable-security-product-on-all-org-repos": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
                security_product: components["parameters"]["security-product"];
                enablement: components["parameters"]["org-security-product-enablement"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    query_suite?: "default" | "extended";
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            422: {
                content: never;
            };
        };
    };
    "projects/get-card": {
        parameters: {
            path: {
                card_id: components["parameters"]["card-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["project-card"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "projects/delete-card": {
        parameters: {
            path: {
                card_id: components["parameters"]["card-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                        errors?: string[];
                    };
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "projects/update-card": {
        parameters: {
            path: {
                card_id: components["parameters"]["card-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    note?: string | null;
                    archived?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["project-card"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "projects/move-card": {
        parameters: {
            path: {
                card_id: components["parameters"]["card-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    position: string;
                    column_id?: number;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                        errors?: {
                            code?: string;
                            message?: string;
                            resource?: string;
                            field?: string;
                        }[];
                    };
                };
            };
            422: components["responses"]["validation_failed"];
            503: {
                content: {
                    "application/json": {
                        code?: string;
                        message?: string;
                        documentation_url?: string;
                        errors?: {
                            code?: string;
                            message?: string;
                        }[];
                    };
                };
            };
        };
    };
    "projects/get-column": {
        parameters: {
            path: {
                column_id: components["parameters"]["column-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["project-column"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "projects/delete-column": {
        parameters: {
            path: {
                column_id: components["parameters"]["column-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "projects/update-column": {
        parameters: {
            path: {
                column_id: components["parameters"]["column-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["project-column"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "projects/list-cards": {
        parameters: {
            query?: {
                archived_state?: "all" | "archived" | "not_archived";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                column_id: components["parameters"]["column-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["project-card"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "projects/create-card": {
        parameters: {
            path: {
                column_id: components["parameters"]["column-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": OneOf<[
                    {
                        note: string | null;
                    },
                    {
                        content_id: number;
                        content_type: string;
                    }
                ]>;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["project-card"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: {
                content: {
                    "application/json": components["schemas"]["validation-error"] | components["schemas"]["validation-error-simple"];
                };
            };
            503: {
                content: {
                    "application/json": {
                        code?: string;
                        message?: string;
                        documentation_url?: string;
                        errors?: {
                            code?: string;
                            message?: string;
                        }[];
                    };
                };
            };
        };
    };
    "projects/move-column": {
        parameters: {
            path: {
                column_id: components["parameters"]["column-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    position: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "projects/get": {
        parameters: {
            path: {
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["project"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "projects/delete": {
        parameters: {
            path: {
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                        errors?: string[];
                    };
                };
            };
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "projects/update": {
        parameters: {
            path: {
                project_id: components["parameters"]["project-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    body?: string | null;
                    state?: string;
                    organization_permission?: "read" | "write" | "admin" | "none";
                    private?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["project"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                        errors?: string[];
                    };
                };
            };
            404: {
                content: never;
            };
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "projects/list-collaborators": {
        parameters: {
            query?: {
                affiliation?: "outside" | "direct" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "projects/add-collaborator": {
        parameters: {
            path: {
                project_id: components["parameters"]["project-id"];
                username: components["parameters"]["username"];
            };
        };
        requestBody?: {
            content: {
                "application/json": ({
                    permission?: "read" | "write" | "admin";
                }) | null;
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "projects/remove-collaborator": {
        parameters: {
            path: {
                project_id: components["parameters"]["project-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "projects/get-permission-for-user": {
        parameters: {
            path: {
                project_id: components["parameters"]["project-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["project-collaborator-permission"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "projects/list-columns": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["project-column"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "projects/create-column": {
        parameters: {
            path: {
                project_id: components["parameters"]["project-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["project-column"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "rate-limit/get": {
        responses: {
            200: {
                headers: {
                    "X-RateLimit-Limit": components["headers"]["x-rate-limit-limit"];
                    "X-RateLimit-Remaining": components["headers"]["x-rate-limit-remaining"];
                    "X-RateLimit-Reset": components["headers"]["x-rate-limit-reset"];
                };
                content: {
                    "application/json": components["schemas"]["rate-limit-overview"];
                };
            };
            304: components["responses"]["not_modified"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/get": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["full-repository"];
                };
            };
            301: components["responses"]["moved_permanently"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            307: components["responses"]["temporary_redirect"];
            403: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                    };
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/update": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    description?: string;
                    homepage?: string;
                    private?: boolean;
                    visibility?: "public" | "private";
                    security_and_analysis?: {
                        advanced_security?: {
                            status?: string;
                        };
                        secret_scanning?: {
                            status?: string;
                        };
                        secret_scanning_push_protection?: {
                            status?: string;
                        };
                    } | null;
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    is_template?: boolean;
                    default_branch?: string;
                    allow_squash_merge?: boolean;
                    allow_merge_commit?: boolean;
                    allow_rebase_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    use_squash_pr_title_as_default?: boolean;
                    squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                    squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                    merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                    merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                    archived?: boolean;
                    allow_forking?: boolean;
                    web_commit_signoff_required?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["full-repository"];
                };
            };
            307: components["responses"]["temporary_redirect"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "actions/list-artifacts-for-repo": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                name?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        artifacts: components["schemas"]["artifact"][];
                    };
                };
            };
        };
    };
    "actions/get-artifact": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                artifact_id: components["parameters"]["artifact-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["artifact"];
                };
            };
        };
    };
    "actions/delete-artifact": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                artifact_id: components["parameters"]["artifact-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/download-artifact": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                artifact_id: components["parameters"]["artifact-id"];
                archive_format: string;
            };
        };
        responses: {
            302: {
                headers: {
                    Location: components["headers"]["location"];
                };
                content: never;
            };
            410: components["responses"]["gone"];
        };
    };
    "actions/get-actions-cache-usage": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-cache-usage-by-repository"];
                };
            };
        };
    };
    "actions/get-actions-cache-list": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                ref?: components["parameters"]["actions-cache-git-ref-full"];
                key?: components["parameters"]["actions-cache-key"];
                sort?: components["parameters"]["actions-cache-list-sort"];
                direction?: components["parameters"]["direction"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["actions-cache-list"];
                };
            };
        };
    };
    "actions/delete-actions-cache-by-key": {
        parameters: {
            query: {
                key: components["parameters"]["actions-cache-key-required"];
                ref?: components["parameters"]["actions-cache-git-ref-full"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-cache-list"];
                };
            };
        };
    };
    "actions/delete-actions-cache-by-id": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                cache_id: components["parameters"]["cache-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/get-job-for-workflow-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                job_id: components["parameters"]["job-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["job"];
                };
            };
        };
    };
    "actions/download-job-logs-for-workflow-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                job_id: components["parameters"]["job-id"];
            };
        };
        responses: {
            302: {
                headers: {
                    Location?: string;
                };
                content: never;
            };
        };
    };
    "actions/re-run-job-for-workflow-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                job_id: components["parameters"]["job-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    enable_debug_logging?: boolean;
                } | null;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            403: components["responses"]["forbidden"];
        };
    };
    "actions/get-custom-oidc-sub-claim-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["oidc-custom-sub-repo"];
                };
            };
            400: components["responses"]["bad_request"];
            404: components["responses"]["not_found"];
        };
    };
    "actions/set-custom-oidc-sub-claim-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    use_default: boolean;
                    include_claim_keys?: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            400: components["responses"]["bad_request"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/list-repo-organization-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["actions-secret"][];
                    };
                };
            };
        };
    };
    "actions/list-repo-organization-variables": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["variables-per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        variables: components["schemas"]["actions-variable"][];
                    };
                };
            };
        };
    };
    "actions/get-github-actions-permissions-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-repository-permissions"];
                };
            };
        };
    };
    "actions/set-github-actions-permissions-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    enabled: components["schemas"]["actions-enabled"];
                    allowed_actions?: components["schemas"]["allowed-actions"];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/get-workflow-access-to-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-workflow-access-to-repository"];
                };
            };
        };
    };
    "actions/set-workflow-access-to-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["actions-workflow-access-to-repository"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/get-allowed-actions-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["selected-actions"];
                };
            };
        };
    };
    "actions/set-allowed-actions-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["selected-actions"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/get-github-actions-default-workflow-permissions-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-get-default-workflow-permissions"];
                };
            };
        };
    };
    "actions/set-github-actions-default-workflow-permissions-repository": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["actions-set-default-workflow-permissions"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "actions/list-self-hosted-runners-for-repo": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        runners: components["schemas"]["runner"][];
                    };
                };
            };
        };
    };
    "actions/list-runner-applications-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["runner-application"][];
                };
            };
        };
    };
    "actions/generate-runner-jitconfig-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    runner_group_id: number;
                    labels: string[];
                    work_folder?: string;
                };
            };
        };
        responses: {
            201: components["responses"]["actions_runner_jitconfig"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/create-registration-token-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["authentication-token"];
                };
            };
        };
    };
    "actions/create-remove-token-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["authentication-token"];
                };
            };
        };
    };
    "actions/get-self-hosted-runner-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["runner"];
                };
            };
        };
    };
    "actions/delete-self-hosted-runner-from-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-labels-for-self-hosted-runner-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
        };
    };
    "actions/set-custom-labels-for-self-hosted-runner-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    labels: string[];
                };
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/add-custom-labels-to-self-hosted-runner-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    labels: string[];
                };
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/remove-all-custom-labels-from-self-hosted-runner-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                runner_id: components["parameters"]["runner-id"];
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels_readonly"];
            404: components["responses"]["not_found"];
        };
    };
    "actions/remove-custom-label-from-self-hosted-runner-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                runner_id: components["parameters"]["runner-id"];
                name: components["parameters"]["runner-label-name"];
            };
        };
        responses: {
            200: components["responses"]["actions_runner_labels"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "actions/list-workflow-runs-for-repo": {
        parameters: {
            query?: {
                actor?: components["parameters"]["actor"];
                branch?: components["parameters"]["workflow-run-branch"];
                event?: components["parameters"]["event"];
                status?: components["parameters"]["workflow-run-status"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                created?: components["parameters"]["created"];
                exclude_pull_requests?: components["parameters"]["exclude-pull-requests"];
                check_suite_id?: components["parameters"]["workflow-run-check-suite-id"];
                head_sha?: components["parameters"]["workflow-run-head-sha"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        workflow_runs: components["schemas"]["workflow-run"][];
                    };
                };
            };
        };
    };
    "actions/get-workflow-run": {
        parameters: {
            query?: {
                exclude_pull_requests?: components["parameters"]["exclude-pull-requests"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["workflow-run"];
                };
            };
        };
    };
    "actions/delete-workflow-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/get-reviews-for-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["environment-approvals"][];
                };
            };
        };
    };
    "actions/approve-workflow-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "actions/list-workflow-run-artifacts": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        artifacts: components["schemas"]["artifact"][];
                    };
                };
            };
        };
    };
    "actions/get-workflow-run-attempt": {
        parameters: {
            query?: {
                exclude_pull_requests?: components["parameters"]["exclude-pull-requests"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
                attempt_number: components["parameters"]["attempt-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["workflow-run"];
                };
            };
        };
    };
    "actions/list-jobs-for-workflow-run-attempt": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
                attempt_number: components["parameters"]["attempt-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        jobs: components["schemas"]["job"][];
                    };
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "actions/download-workflow-run-attempt-logs": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
                attempt_number: components["parameters"]["attempt-number"];
            };
        };
        responses: {
            302: {
                headers: {
                    Location?: string;
                };
                content: never;
            };
        };
    };
    "actions/cancel-workflow-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            409: components["responses"]["conflict"];
        };
    };
    "actions/review-custom-gates-for-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["review-custom-gates-comment-required"] | components["schemas"]["review-custom-gates-state-required"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-jobs-for-workflow-run": {
        parameters: {
            query?: {
                filter?: "latest" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        jobs: components["schemas"]["job"][];
                    };
                };
            };
        };
    };
    "actions/download-workflow-run-logs": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            302: {
                headers: {
                    Location?: string;
                };
                content: never;
            };
        };
    };
    "actions/delete-workflow-run-logs": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            500: components["responses"]["internal_error"];
        };
    };
    "actions/get-pending-deployments-for-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pending-deployment"][];
                };
            };
        };
    };
    "actions/review-pending-deployments-for-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    environment_ids: number[];
                    state: "approved" | "rejected";
                    comment: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deployment"][];
                };
            };
        };
    };
    "actions/re-run-workflow": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    enable_debug_logging?: boolean;
                } | null;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
        };
    };
    "actions/re-run-workflow-failed-jobs": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    enable_debug_logging?: boolean;
                } | null;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
        };
    };
    "actions/get-workflow-run-usage": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                run_id: components["parameters"]["run-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["workflow-run-usage"];
                };
            };
        };
    };
    "actions/list-repo-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["actions-secret"][];
                    };
                };
            };
        };
    };
    "actions/get-repo-public-key": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-public-key"];
                };
            };
        };
    };
    "actions/get-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-secret"];
                };
            };
        };
    };
    "actions/create-or-update-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value?: string;
                    key_id?: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
        };
    };
    "actions/delete-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-repo-variables": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["variables-per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        variables: components["schemas"]["actions-variable"][];
                    };
                };
            };
        };
    };
    "actions/create-repo-variable": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    value: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
        };
    };
    "actions/get-repo-variable": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                name: components["parameters"]["variable-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-variable"];
                };
            };
        };
    };
    "actions/delete-repo-variable": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                name: components["parameters"]["variable-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/update-repo-variable": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                name: components["parameters"]["variable-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name?: string;
                    value?: string;
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-repo-workflows": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        workflows: components["schemas"]["workflow"][];
                    };
                };
            };
        };
    };
    "actions/get-workflow": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                workflow_id: components["parameters"]["workflow-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["workflow"];
                };
            };
        };
    };
    "actions/disable-workflow": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                workflow_id: components["parameters"]["workflow-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/create-workflow-dispatch": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                workflow_id: components["parameters"]["workflow-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    ref: string;
                    inputs?: {
                        [key: string]: unknown;
                    };
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/enable-workflow": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                workflow_id: components["parameters"]["workflow-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-workflow-runs": {
        parameters: {
            query?: {
                actor?: components["parameters"]["actor"];
                branch?: components["parameters"]["workflow-run-branch"];
                event?: components["parameters"]["event"];
                status?: components["parameters"]["workflow-run-status"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                created?: components["parameters"]["created"];
                exclude_pull_requests?: components["parameters"]["exclude-pull-requests"];
                check_suite_id?: components["parameters"]["workflow-run-check-suite-id"];
                head_sha?: components["parameters"]["workflow-run-head-sha"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                workflow_id: components["parameters"]["workflow-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        workflow_runs: components["schemas"]["workflow-run"][];
                    };
                };
            };
        };
    };
    "actions/get-workflow-usage": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                workflow_id: components["parameters"]["workflow-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["workflow-usage"];
                };
            };
        };
    };
    "repos/list-activities": {
        parameters: {
            query?: {
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                ref?: string;
                actor?: string;
                time_period?: "day" | "week" | "month" | "quarter" | "year";
                activity_type?: "push" | "force_push" | "branch_creation" | "branch_deletion" | "pr_merge" | "merge_queue_merge";
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["activity"][];
                };
            };
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "issues/list-assignees": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/check-user-can-be-assigned": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                assignee: string;
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "repos/list-autolinks": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["autolink"][];
                };
            };
        };
    };
    "repos/create-autolink": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    key_prefix: string;
                    url_template: string;
                    is_alphanumeric?: boolean;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["autolink"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-autolink": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                autolink_id: components["parameters"]["autolink-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["autolink"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-autolink": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                autolink_id: components["parameters"]["autolink-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/check-automated-security-fixes": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["check-automated-security-fixes"];
                };
            };
            404: {
                content: never;
            };
        };
    };
    "repos/enable-automated-security-fixes": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/disable-automated-security-fixes": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/list-branches": {
        parameters: {
            query?: {
                protected?: boolean;
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["short-branch"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-branch": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["branch-with-protection"];
                };
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-branch-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["branch-protection"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/update-branch-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    required_status_checks: {
                        strict: boolean;
                        contexts: string[];
                        checks?: {
                            context: string;
                            app_id?: number;
                        }[];
                    } | null;
                    enforce_admins: boolean | null;
                    required_pull_request_reviews: {
                        dismissal_restrictions?: {
                            users?: string[];
                            teams?: string[];
                            apps?: string[];
                        };
                        dismiss_stale_reviews?: boolean;
                        require_code_owner_reviews?: boolean;
                        required_approving_review_count?: number;
                        require_last_push_approval?: boolean;
                        bypass_pull_request_allowances?: {
                            users?: string[];
                            teams?: string[];
                            apps?: string[];
                        };
                    } | null;
                    restrictions: {
                        users: string[];
                        teams: string[];
                        apps?: string[];
                    } | null;
                    required_linear_history?: boolean;
                    allow_force_pushes?: boolean | null;
                    allow_deletions?: boolean;
                    block_creations?: boolean;
                    required_conversation_resolution?: boolean;
                    lock_branch?: boolean;
                    allow_fork_syncing?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["protected-branch"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "repos/delete-branch-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
        };
    };
    "repos/get-admin-branch-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["protected-branch-admin-enforced"];
                };
            };
        };
    };
    "repos/set-admin-branch-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["protected-branch-admin-enforced"];
                };
            };
        };
    };
    "repos/delete-admin-branch-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-pull-request-review-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["protected-branch-pull-request-review"];
                };
            };
        };
    };
    "repos/delete-pull-request-review-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/update-pull-request-review-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    dismissal_restrictions?: {
                        users?: string[];
                        teams?: string[];
                        apps?: string[];
                    };
                    dismiss_stale_reviews?: boolean;
                    require_code_owner_reviews?: boolean;
                    required_approving_review_count?: number;
                    require_last_push_approval?: boolean;
                    bypass_pull_request_allowances?: {
                        users?: string[];
                        teams?: string[];
                        apps?: string[];
                    };
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["protected-branch-pull-request-review"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-commit-signature-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["protected-branch-admin-enforced"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/create-commit-signature-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["protected-branch-admin-enforced"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-commit-signature-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-status-checks-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["status-check-policy"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/remove-status-check-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/update-status-check-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    strict?: boolean;
                    contexts?: string[];
                    checks?: {
                        context: string;
                        app_id?: number;
                    }[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["status-check-policy"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-all-status-check-contexts": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": string[];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/set-status-check-contexts": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        contexts: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": string[];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/add-status-check-contexts": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        contexts: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": string[];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/remove-status-check-contexts": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        contexts: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": string[];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["branch-restriction-policy"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/get-apps-with-access-to-protected-branch": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["integration"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/set-app-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        apps: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["integration"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/add-app-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        apps: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["integration"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/remove-app-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        apps: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["integration"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-teams-with-access-to-protected-branch": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/set-team-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        teams: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/add-team-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        teams: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/remove-team-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        teams: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-users-with-access-to-protected-branch": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/set-user-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        users: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/add-user-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        users: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/remove-user-access-restrictions": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        users: string[];
                    },
                    string[]
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/rename-branch": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    new_name: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["branch-with-protection"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "checks/create": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": ({
                    name: string;
                    head_sha: string;
                    details_url?: string;
                    external_id?: string;
                    status?: "queued" | "in_progress" | "completed";
                    started_at?: string;
                    conclusion?: "action_required" | "cancelled" | "failure" | "neutral" | "success" | "skipped" | "stale" | "timed_out";
                    completed_at?: string;
                    output?: {
                        title: string;
                        summary: string;
                        text?: string;
                        annotations?: ({
                            path: string;
                            start_line: number;
                            end_line: number;
                            start_column?: number;
                            end_column?: number;
                            annotation_level: "notice" | "warning" | "failure";
                            message: string;
                            title?: string;
                            raw_details?: string;
                        })[];
                        images?: {
                            alt: string;
                            image_url: string;
                            caption?: string;
                        }[];
                    };
                    actions?: {
                        label: string;
                        description: string;
                        identifier: string;
                    }[];
                }) & (OneOf<[
                    {
                        status: "completed";
                        [key: string]: unknown;
                    },
                    {
                        status?: "queued" | "in_progress";
                        [key: string]: unknown;
                    }
                ]>);
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["check-run"];
                };
            };
        };
    };
    "checks/get": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                check_run_id: components["parameters"]["check-run-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["check-run"];
                };
            };
        };
    };
    "checks/update": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                check_run_id: components["parameters"]["check-run-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": ({
                    name?: string;
                    details_url?: string;
                    external_id?: string;
                    started_at?: string;
                    status?: "queued" | "in_progress" | "completed";
                    conclusion?: "action_required" | "cancelled" | "failure" | "neutral" | "success" | "skipped" | "stale" | "timed_out";
                    completed_at?: string;
                    output?: {
                        title?: string;
                        summary: string;
                        text?: string;
                        annotations?: ({
                            path: string;
                            start_line: number;
                            end_line: number;
                            start_column?: number;
                            end_column?: number;
                            annotation_level: "notice" | "warning" | "failure";
                            message: string;
                            title?: string;
                            raw_details?: string;
                        })[];
                        images?: {
                            alt: string;
                            image_url: string;
                            caption?: string;
                        }[];
                    };
                    actions?: {
                        label: string;
                        description: string;
                        identifier: string;
                    }[];
                }) & ({
                    status?: "completed";
                    [key: string]: unknown;
                } | ({
                    status?: "queued" | "in_progress";
                    [key: string]: unknown;
                }));
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["check-run"];
                };
            };
        };
    };
    "checks/list-annotations": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                check_run_id: components["parameters"]["check-run-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["check-annotation"][];
                };
            };
        };
    };
    "checks/rerequest-run": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                check_run_id: components["parameters"]["check-run-id"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            403: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
            404: components["responses"]["not_found"];
            422: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "checks/create-suite": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    head_sha: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["check-suite"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["check-suite"];
                };
            };
        };
    };
    "checks/set-suites-preferences": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    auto_trigger_checks?: {
                        app_id: number;
                        setting: boolean;
                    }[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["check-suite-preference"];
                };
            };
        };
    };
    "checks/get-suite": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                check_suite_id: components["parameters"]["check-suite-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["check-suite"];
                };
            };
        };
    };
    "checks/list-for-suite": {
        parameters: {
            query?: {
                check_name?: components["parameters"]["check-name"];
                status?: components["parameters"]["status"];
                filter?: "latest" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                check_suite_id: components["parameters"]["check-suite-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        check_runs: components["schemas"]["check-run"][];
                    };
                };
            };
        };
    };
    "checks/rerequest-suite": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                check_suite_id: components["parameters"]["check-suite-id"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
        };
    };
    "code-scanning/list-alerts-for-repo": {
        parameters: {
            query?: {
                tool_name?: components["parameters"]["tool-name"];
                tool_guid?: components["parameters"]["tool-guid"];
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                ref?: components["parameters"]["git-ref"];
                direction?: components["parameters"]["direction"];
                sort?: "created" | "updated";
                state?: components["schemas"]["code-scanning-alert-state-query"];
                severity?: components["schemas"]["code-scanning-alert-severity"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-alert-items"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/get-alert": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["alert-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-alert"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/update-alert": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["alert-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    state: components["schemas"]["code-scanning-alert-set-state"];
                    dismissed_reason?: components["schemas"]["code-scanning-alert-dismissed-reason"];
                    dismissed_comment?: components["schemas"]["code-scanning-alert-dismissed-comment"];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-alert"];
                };
            };
            403: components["responses"]["code_scanning_forbidden_write"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/list-alert-instances": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                ref?: components["parameters"]["git-ref"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["alert-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-alert-instance"][];
                };
            };
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/list-recent-analyses": {
        parameters: {
            query?: {
                tool_name?: components["parameters"]["tool-name"];
                tool_guid?: components["parameters"]["tool-guid"];
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                ref?: components["schemas"]["code-scanning-ref"];
                sarif_id?: components["schemas"]["code-scanning-analysis-sarif-id"];
                direction?: components["parameters"]["direction"];
                sort?: "created";
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-analysis"][];
                };
            };
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/get-analysis": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                analysis_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-analysis"];
                    "application/json+sarif": {
                        [key: string]: unknown;
                    };
                };
            };
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/delete-analysis": {
        parameters: {
            query?: {
                confirm_delete?: string | null;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                analysis_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-analysis-deletion"];
                };
            };
            400: components["responses"]["bad_request"];
            403: components["responses"]["code_scanning_forbidden_write"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/list-codeql-databases": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-codeql-database"][];
                };
            };
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/get-codeql-database": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                language: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-codeql-database"];
                };
            };
            302: components["responses"]["found"];
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/get-default-setup": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-default-setup"];
                };
            };
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/update-default-setup": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["code-scanning-default-setup-update"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            202: {
                content: {
                    "application/json": components["schemas"]["code-scanning-default-setup-update-response"];
                };
            };
            403: components["responses"]["code_scanning_forbidden_read"];
            404: components["responses"]["not_found"];
            409: components["responses"]["code_scanning_conflict"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/upload-sarif": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    commit_sha: components["schemas"]["code-scanning-analysis-commit-sha"];
                    ref: components["schemas"]["code-scanning-ref"];
                    sarif: components["schemas"]["code-scanning-analysis-sarif-file"];
                    checkout_uri?: string;
                    started_at?: string;
                    tool_name?: string;
                    validate?: boolean;
                };
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": components["schemas"]["code-scanning-sarifs-receipt"];
                };
            };
            400: {
                content: never;
            };
            403: components["responses"]["code_scanning_forbidden_write"];
            404: components["responses"]["not_found"];
            413: {
                content: never;
            };
            503: components["responses"]["service_unavailable"];
        };
    };
    "code-scanning/get-sarif": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                sarif_id: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-scanning-sarifs-status"];
                };
            };
            403: components["responses"]["code_scanning_forbidden_read"];
            404: {
                content: never;
            };
            503: components["responses"]["service_unavailable"];
        };
    };
    "repos/codeowners-errors": {
        parameters: {
            query?: {
                ref?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codeowners-errors"];
                };
            };
            404: {
                content: never;
            };
        };
    };
    "codespaces/list-in-repository-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        codespaces: components["schemas"]["codespace"][];
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/create-with-repo-for-authenticated-user": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": ({
                    ref?: string;
                    location?: string;
                    geo?: "EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest";
                    client_ip?: string;
                    machine?: string;
                    devcontainer_path?: string;
                    multi_repo_permissions_opt_out?: boolean;
                    working_directory?: string;
                    idle_timeout_minutes?: number;
                    display_name?: string;
                    retention_period_minutes?: number;
                }) | null;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            202: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            400: components["responses"]["bad_request"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "codespaces/list-devcontainers-in-repository-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        devcontainers: {
                            path: string;
                            name?: string;
                            display_name?: string;
                        }[];
                    };
                };
            };
            400: components["responses"]["bad_request"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/repo-machines-for-authenticated-user": {
        parameters: {
            query?: {
                location?: string;
                client_ip?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        machines: components["schemas"]["codespace-machine"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/pre-flight-with-repo-for-authenticated-user": {
        parameters: {
            query?: {
                ref?: string;
                client_ip?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        billable_owner?: components["schemas"]["simple-user"];
                        defaults?: {
                            location: string;
                            devcontainer_path: string | null;
                        };
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "codespaces/list-repo-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["repo-codespaces-secret"][];
                    };
                };
            };
        };
    };
    "codespaces/get-repo-public-key": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespaces-public-key"];
                };
            };
        };
    };
    "codespaces/get-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repo-codespaces-secret"];
                };
            };
        };
    };
    "codespaces/create-or-update-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value?: string;
                    key_id?: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
        };
    };
    "codespaces/delete-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/list-collaborators": {
        parameters: {
            query?: {
                affiliation?: "outside" | "direct" | "all";
                permission?: "pull" | "triage" | "push" | "maintain" | "admin";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["collaborator"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/check-collaborator": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "repos/add-collaborator": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                username: components["parameters"]["username"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    permission?: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["repository-invitation"];
                };
            };
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/remove-collaborator": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-collaborator-permission-level": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-collaborator-permission"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/list-commit-comments-for-repo": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["commit-comment"][];
                };
            };
        };
    };
    "repos/get-commit-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["commit-comment"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-commit-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/update-commit-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["commit-comment"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "reactions/list-for-commit-comment": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "reactions/create-for-commit-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "reactions/delete-for-commit-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
                reaction_id: components["parameters"]["reaction-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/list-commits": {
        parameters: {
            query?: {
                sha?: string;
                path?: string;
                author?: string;
                committer?: string;
                since?: components["parameters"]["since"];
                until?: string;
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["commit"][];
                };
            };
            400: components["responses"]["bad_request"];
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/list-branches-for-head-commit": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                commit_sha: components["parameters"]["commit-sha"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["branch-short"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/list-comments-for-commit": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                commit_sha: components["parameters"]["commit-sha"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["commit-comment"][];
                };
            };
        };
    };
    "repos/create-commit-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                commit_sha: components["parameters"]["commit-sha"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                    path?: string;
                    position?: number;
                    line?: number;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["commit-comment"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/list-pull-requests-associated-with-commit": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                commit_sha: components["parameters"]["commit-sha"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["pull-request-simple"][];
                };
            };
        };
    };
    "repos/get-commit": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["commit"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "checks/list-for-ref": {
        parameters: {
            query?: {
                check_name?: components["parameters"]["check-name"];
                status?: components["parameters"]["status"];
                filter?: "latest" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                app_id?: number;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        check_runs: components["schemas"]["check-run"][];
                    };
                };
            };
        };
    };
    "checks/list-suites-for-ref": {
        parameters: {
            query?: {
                app_id?: number;
                check_name?: components["parameters"]["check-name"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        check_suites: components["schemas"]["check-suite"][];
                    };
                };
            };
        };
    };
    "repos/get-combined-status-for-ref": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["combined-commit-status"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/list-commit-statuses-for-ref": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["status"][];
                };
            };
            301: components["responses"]["moved_permanently"];
        };
    };
    "repos/get-community-profile-metrics": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["community-profile"];
                };
            };
        };
    };
    "repos/compare-commits": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                basehead: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["commit-comparison"];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "repos/get-content": {
        parameters: {
            query?: {
                ref?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                path: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/vnd.github.object": components["schemas"]["content-tree"];
                    "application/json": components["schemas"]["content-directory"] | components["schemas"]["content-file"] | components["schemas"]["content-symlink"] | components["schemas"]["content-submodule"];
                };
            };
            302: components["responses"]["found"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/create-or-update-file-contents": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                path: string;
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    message: string;
                    content: string;
                    sha?: string;
                    branch?: string;
                    committer?: {
                        name: string;
                        email: string;
                        date?: string;
                    };
                    author?: {
                        name: string;
                        email: string;
                        date?: string;
                    };
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["file-commit"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["file-commit"];
                };
            };
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/delete-file": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                path: string;
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    message: string;
                    sha: string;
                    branch?: string;
                    committer?: {
                        name?: string;
                        email?: string;
                    };
                    author?: {
                        name?: string;
                        email?: string;
                    };
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["file-commit"];
                };
            };
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "repos/list-contributors": {
        parameters: {
            query?: {
                anon?: string;
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["contributor"][];
                };
            };
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "dependabot/list-alerts-for-repo": {
        parameters: {
            query?: {
                state?: components["parameters"]["dependabot-alert-comma-separated-states"];
                severity?: components["parameters"]["dependabot-alert-comma-separated-severities"];
                ecosystem?: components["parameters"]["dependabot-alert-comma-separated-ecosystems"];
                package?: components["parameters"]["dependabot-alert-comma-separated-packages"];
                manifest?: components["parameters"]["dependabot-alert-comma-separated-manifests"];
                scope?: components["parameters"]["dependabot-alert-scope"];
                sort?: components["parameters"]["dependabot-alert-sort"];
                direction?: components["parameters"]["direction"];
                page?: number;
                per_page?: number;
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                first?: components["parameters"]["pagination-first"];
                last?: components["parameters"]["pagination-last"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-alert"][];
                };
            };
            304: components["responses"]["not_modified"];
            400: components["responses"]["bad_request"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "dependabot/get-alert": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["dependabot-alert-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-alert"];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "dependabot/update-alert": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["dependabot-alert-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    state: "dismissed" | "open";
                    dismissed_reason?: "fix_started" | "inaccurate" | "no_bandwidth" | "not_used" | "tolerable_risk";
                    dismissed_comment?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-alert"];
                };
            };
            400: components["responses"]["bad_request"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "dependabot/list-repo-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["dependabot-secret"][];
                    };
                };
            };
        };
    };
    "dependabot/get-repo-public-key": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-public-key"];
                };
            };
        };
    };
    "dependabot/get-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["dependabot-secret"];
                };
            };
        };
    };
    "dependabot/create-or-update-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value?: string;
                    key_id?: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
        };
    };
    "dependabot/delete-repo-secret": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "dependency-graph/diff-range": {
        parameters: {
            query?: {
                name?: components["parameters"]["manifest-path"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                basehead: string;
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["dependency-graph-diff"];
                };
            };
            403: components["responses"]["dependency_review_forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "dependency-graph/export-sbom": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["dependency-graph-spdx-sbom"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "dependency-graph/create-repository-snapshot": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["snapshot"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": {
                        id: number;
                        created_at: string;
                        result: string;
                        message: string;
                    };
                };
            };
        };
    };
    "repos/list-deployments": {
        parameters: {
            query?: {
                sha?: string;
                ref?: string;
                task?: string;
                environment?: string | null;
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["deployment"][];
                };
            };
        };
    };
    "repos/create-deployment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    ref: string;
                    task?: string;
                    auto_merge?: boolean;
                    required_contexts?: string[];
                    payload?: OneOf<[
                        {
                            [key: string]: unknown;
                        },
                        string
                    ]>;
                    environment?: string;
                    description?: string | null;
                    transient_environment?: boolean;
                    production_environment?: boolean;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["deployment"];
                };
            };
            202: {
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
            409: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-deployment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                deployment_id: components["parameters"]["deployment-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deployment"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-deployment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                deployment_id: components["parameters"]["deployment-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "repos/list-deployment-statuses": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                deployment_id: components["parameters"]["deployment-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["deployment-status"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/create-deployment-status": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                deployment_id: components["parameters"]["deployment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    state: "error" | "failure" | "inactive" | "in_progress" | "queued" | "pending" | "success";
                    target_url?: string;
                    log_url?: string;
                    description?: string;
                    environment?: "production" | "staging" | "qa";
                    environment_url?: string;
                    auto_inactive?: boolean;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["deployment-status"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-deployment-status": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                deployment_id: components["parameters"]["deployment-id"];
                status_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deployment-status"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/create-dispatch-event": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    event_type: string;
                    client_payload?: {
                        [key: string]: unknown;
                    };
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-all-environments": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count?: number;
                        environments?: components["schemas"]["environment"][];
                    };
                };
            };
        };
    };
    "repos/get-environment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["environment"];
                };
            };
        };
    };
    "repos/create-or-update-environment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        requestBody?: {
            content: {
                "application/json": ({
                    wait_timer?: components["schemas"]["wait-timer"];
                    reviewers?: {
                        type?: components["schemas"]["deployment-reviewer-type"];
                        id?: number;
                    }[] | null;
                    deployment_branch_policy?: components["schemas"]["deployment-branch-policy-settings"];
                }) | null;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["environment"];
                };
            };
            422: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "repos/delete-an-environment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/list-deployment-branch-policies": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        branch_policies: components["schemas"]["deployment-branch-policy"][];
                    };
                };
            };
        };
    };
    "repos/create-deployment-branch-policy": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["deployment-branch-policy-name-pattern"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deployment-branch-policy"];
                };
            };
            303: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "repos/get-deployment-branch-policy": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
                branch_policy_id: components["parameters"]["branch-policy-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deployment-branch-policy"];
                };
            };
        };
    };
    "repos/update-deployment-branch-policy": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
                branch_policy_id: components["parameters"]["branch-policy-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["deployment-branch-policy-name-pattern"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deployment-branch-policy"];
                };
            };
        };
    };
    "repos/delete-deployment-branch-policy": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
                branch_policy_id: components["parameters"]["branch-policy-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/get-all-deployment-protection-rules": {
        parameters: {
            path: {
                environment_name: components["parameters"]["environment-name"];
                repo: components["parameters"]["repo"];
                owner: components["parameters"]["owner"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count?: number;
                        custom_deployment_protection_rules?: components["schemas"]["deployment-protection-rule"][];
                    };
                };
            };
        };
    };
    "repos/create-deployment-protection-rule": {
        parameters: {
            path: {
                environment_name: components["parameters"]["environment-name"];
                repo: components["parameters"]["repo"];
                owner: components["parameters"]["owner"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    integration_id?: number;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["deployment-protection-rule"];
                };
            };
        };
    };
    "repos/list-custom-deployment-rule-integrations": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                environment_name: components["parameters"]["environment-name"];
                repo: components["parameters"]["repo"];
                owner: components["parameters"]["owner"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count?: number;
                        available_custom_deployment_protection_rule_integrations?: components["schemas"]["custom-deployment-rule-app"][];
                    };
                };
            };
        };
    };
    "repos/get-custom-deployment-protection-rule": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                environment_name: components["parameters"]["environment-name"];
                protection_rule_id: components["parameters"]["protection-rule-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deployment-protection-rule"];
                };
            };
        };
    };
    "repos/disable-deployment-protection-rule": {
        parameters: {
            path: {
                environment_name: components["parameters"]["environment-name"];
                repo: components["parameters"]["repo"];
                owner: components["parameters"]["owner"];
                protection_rule_id: components["parameters"]["protection-rule-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "activity/list-repo-events": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
        };
    };
    "repos/list-forks": {
        parameters: {
            query?: {
                sort?: "newest" | "oldest" | "stargazers" | "watchers";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            400: components["responses"]["bad_request"];
        };
    };
    "repos/create-fork": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    organization?: string;
                    name?: string;
                    default_branch_only?: boolean;
                } | null;
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": components["schemas"]["full-repository"];
                };
            };
            400: components["responses"]["bad_request"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "git/create-blob": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: string;
                    encoding?: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["short-blob"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
            422: components["responses"]["validation_failed"];
        };
    };
    "git/get-blob": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                file_sha: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["blob"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "git/create-commit": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    message: string;
                    tree: string;
                    parents?: string[];
                    author?: {
                        name: string;
                        email: string;
                        date?: string;
                    };
                    committer?: {
                        name?: string;
                        email?: string;
                        date?: string;
                    };
                    signature?: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["git-commit"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "git/get-commit": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                commit_sha: components["parameters"]["commit-sha"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["git-commit"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "git/list-matching-refs": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["git-ref"][];
                };
            };
        };
    };
    "git/get-ref": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["git-ref"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "git/create-ref": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    ref: string;
                    sha: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["git-ref"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "git/delete-ref": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: components["parameters"]["commit-ref"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "git/update-ref": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: string;
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    sha: string;
                    force?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["git-ref"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "git/create-tag": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    tag: string;
                    message: string;
                    object: string;
                    type: "commit" | "tree" | "blob";
                    tagger?: {
                        name: string;
                        email: string;
                        date?: string;
                    };
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["git-tag"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "git/get-tag": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                tag_sha: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["git-tag"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "git/create-tree": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    tree: ({
                        path?: string;
                        mode?: "100644" | "100755" | "040000" | "160000" | "120000";
                        type?: "blob" | "tree" | "commit";
                        sha?: string | null;
                        content?: string;
                    })[];
                    base_tree?: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["git-tree"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "git/get-tree": {
        parameters: {
            query?: {
                recursive?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                tree_sha: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["git-tree"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/list-webhooks": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["hook"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/create-webhook": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    config?: {
                        url?: components["schemas"]["webhook-config-url"];
                        content_type?: components["schemas"]["webhook-config-content-type"];
                        secret?: components["schemas"]["webhook-config-secret"];
                        insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                        token?: string;
                        digest?: string;
                    };
                    events?: string[];
                    active?: boolean;
                } | null;
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["hook"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-webhook": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-webhook": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/update-webhook": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    config?: {
                        url: components["schemas"]["webhook-config-url"];
                        content_type?: components["schemas"]["webhook-config-content-type"];
                        secret?: components["schemas"]["webhook-config-secret"];
                        insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                        address?: string;
                        room?: string;
                    };
                    events?: string[];
                    add_events?: string[];
                    remove_events?: string[];
                    active?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-webhook-config-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["webhook-config"];
                };
            };
        };
    };
    "repos/update-webhook-config-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    url?: components["schemas"]["webhook-config-url"];
                    content_type?: components["schemas"]["webhook-config-content-type"];
                    secret?: components["schemas"]["webhook-config-secret"];
                    insecure_ssl?: components["schemas"]["webhook-config-insecure-ssl"];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["webhook-config"];
                };
            };
        };
    };
    "repos/list-webhook-deliveries": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                cursor?: components["parameters"]["cursor"];
                redelivery?: boolean;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook-delivery-item"][];
                };
            };
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-webhook-delivery": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
                delivery_id: components["parameters"]["delivery-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hook-delivery"];
                };
            };
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/redeliver-webhook-delivery": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
                delivery_id: components["parameters"]["delivery-id"];
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            400: components["responses"]["bad_request"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/ping-webhook": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/test-push-webhook": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                hook_id: components["parameters"]["hook-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "migrations/get-import-status": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["import"];
                };
            };
            404: components["responses"]["not_found"];
            503: components["responses"]["porter_maintenance"];
        };
    };
    "migrations/start-import": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    vcs_url: string;
                    vcs?: "subversion" | "git" | "mercurial" | "tfvc";
                    vcs_username?: string;
                    vcs_password?: string;
                    tfvc_project?: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["import"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["porter_maintenance"];
        };
    };
    "migrations/cancel-import": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            503: components["responses"]["porter_maintenance"];
        };
    };
    "migrations/update-import": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": ({
                    vcs_username?: string;
                    vcs_password?: string;
                    vcs?: "subversion" | "tfvc" | "git" | "mercurial";
                    tfvc_project?: string;
                }) | null;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["import"];
                };
            };
            503: components["responses"]["porter_maintenance"];
        };
    };
    "migrations/get-commit-authors": {
        parameters: {
            query?: {
                since?: components["parameters"]["since-user"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["porter-author"][];
                };
            };
            404: components["responses"]["not_found"];
            503: components["responses"]["porter_maintenance"];
        };
    };
    "migrations/map-commit-author": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                author_id: number;
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    email?: string;
                    name?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["porter-author"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["porter_maintenance"];
        };
    };
    "migrations/get-large-files": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["porter-large-file"][];
                };
            };
            503: components["responses"]["porter_maintenance"];
        };
    };
    "migrations/set-lfs-preference": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    use_lfs: "opt_in" | "opt_out";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["import"];
                };
            };
            422: components["responses"]["validation_failed"];
            503: components["responses"]["porter_maintenance"];
        };
    };
    "apps/get-repo-installation": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["installation"];
                };
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
        };
    };
    "interactions/get-restrictions-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["interaction-limit-response"] | Record<string, never>;
                };
            };
        };
    };
    "interactions/set-restrictions-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["interaction-limit"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["interaction-limit-response"];
                };
            };
            409: {
                content: never;
            };
        };
    };
    "interactions/remove-restrictions-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            409: {
                content: never;
            };
        };
    };
    "repos/list-invitations": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["repository-invitation"][];
                };
            };
        };
    };
    "repos/delete-invitation": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                invitation_id: components["parameters"]["invitation-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/update-invitation": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                invitation_id: components["parameters"]["invitation-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    permissions?: "read" | "write" | "maintain" | "triage" | "admin";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-invitation"];
                };
            };
        };
    };
    "issues/list-for-repo": {
        parameters: {
            query?: {
                milestone?: string;
                state?: "open" | "closed" | "all";
                assignee?: string;
                creator?: string;
                mentioned?: string;
                labels?: components["parameters"]["labels"];
                sort?: "created" | "updated" | "comments";
                direction?: components["parameters"]["direction"];
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue"][];
                };
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/create": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    title: string | number;
                    body?: string;
                    assignee?: string | null;
                    milestone?: string | number | null;
                    labels?: (OneOf<[
                        string,
                        {
                            id?: number;
                            name?: string;
                            description?: string | null;
                            color?: string | null;
                        }
                    ]>)[];
                    assignees?: string[];
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["issue"];
                };
            };
            400: components["responses"]["bad_request"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "issues/list-comments-for-repo": {
        parameters: {
            query?: {
                sort?: components["parameters"]["sort"];
                direction?: "asc" | "desc";
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue-comment"][];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/get-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["issue-comment"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/delete-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "issues/update-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["issue-comment"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "reactions/list-for-issue-comment": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "reactions/create-for-issue-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "reactions/delete-for-issue-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
                reaction_id: components["parameters"]["reaction-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "issues/list-events-for-repo": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue-event"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/get-event": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                event_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["issue-event"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "issues/get": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["issue"];
                };
            };
            301: components["responses"]["moved_permanently"];
            304: components["responses"]["not_modified"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "issues/update": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    title?: string | number | null;
                    body?: string | null;
                    assignee?: string | null;
                    state?: "open" | "closed";
                    state_reason?: "completed" | "not_planned" | "reopened" | null;
                    milestone?: string | number | null;
                    labels?: (OneOf<[
                        string,
                        {
                            id?: number;
                            name?: string;
                            description?: string | null;
                            color?: string | null;
                        }
                    ]>)[];
                    assignees?: string[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["issue"];
                };
            };
            301: components["responses"]["moved_permanently"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "issues/add-assignees": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    assignees?: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["issue"];
                };
            };
        };
    };
    "issues/remove-assignees": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    assignees?: string[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["issue"];
                };
            };
        };
    };
    "issues/check-user-can-be-assigned-to-issue": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
                assignee: string;
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "issues/list-comments": {
        parameters: {
            query?: {
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue-comment"][];
                };
            };
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "issues/create-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["issue-comment"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/list-events": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue-event-for-issue"][];
                };
            };
            410: components["responses"]["gone"];
        };
    };
    "issues/list-labels-on-issue": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["label"][];
                };
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "issues/set-labels": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        labels?: string[];
                    },
                    string[],
                    {
                        labels?: {
                            name: string;
                        }[];
                    },
                    {
                        name: string;
                    }[],
                    string
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["label"][];
                };
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/add-labels": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        labels?: string[];
                    },
                    string[],
                    {
                        labels?: {
                            name: string;
                        }[];
                    },
                    {
                        name: string;
                    }[],
                    string
                ]>;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["label"][];
                };
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/remove-all-labels": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "issues/remove-label": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
                name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["label"][];
                };
            };
            301: components["responses"]["moved_permanently"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "issues/lock": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": ({
                    lock_reason?: "off-topic" | "too heated" | "resolved" | "spam";
                }) | null;
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/unlock": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "reactions/list-for-issue": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "reactions/create-for-issue": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "reactions/delete-for-issue": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
                reaction_id: components["parameters"]["reaction-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "issues/list-events-for-timeline": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                issue_number: components["parameters"]["issue-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["timeline-issue-events"][];
                };
            };
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
        };
    };
    "repos/list-deploy-keys": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["deploy-key"][];
                };
            };
        };
    };
    "repos/create-deploy-key": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    title?: string;
                    key: string;
                    read_only?: boolean;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["deploy-key"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-deploy-key": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                key_id: components["parameters"]["key-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["deploy-key"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-deploy-key": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                key_id: components["parameters"]["key-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "issues/list-labels-for-repo": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["label"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/create-label": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    color?: string;
                    description?: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["label"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/get-label": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["label"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/delete-label": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                name: string;
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "issues/update-label": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                name: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    new_name?: string;
                    color?: string;
                    description?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["label"];
                };
            };
        };
    };
    "repos/list-languages": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["language"];
                };
            };
        };
    };
    "licenses/get-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["license-content"];
                };
            };
        };
    };
    "repos/merge-upstream": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    branch: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["merged-upstream"];
                };
            };
            409: {
                content: never;
            };
            422: {
                content: never;
            };
        };
    };
    "repos/merge": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    base: string;
                    head: string;
                    commit_message?: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["commit"];
                };
            };
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            404: {
                content: never;
            };
            409: {
                content: never;
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/list-milestones": {
        parameters: {
            query?: {
                state?: "open" | "closed" | "all";
                sort?: "due_on" | "completeness";
                direction?: "asc" | "desc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["milestone"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/create-milestone": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    title: string;
                    state?: "open" | "closed";
                    description?: string;
                    due_on?: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["milestone"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "issues/get-milestone": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                milestone_number: components["parameters"]["milestone-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["milestone"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/delete-milestone": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                milestone_number: components["parameters"]["milestone-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "issues/update-milestone": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                milestone_number: components["parameters"]["milestone-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    title?: string;
                    state?: "open" | "closed";
                    description?: string;
                    due_on?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["milestone"];
                };
            };
        };
    };
    "issues/list-labels-for-milestone": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                milestone_number: components["parameters"]["milestone-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["label"][];
                };
            };
        };
    };
    "activity/list-repo-notifications-for-authenticated-user": {
        parameters: {
            query?: {
                all?: components["parameters"]["all"];
                participating?: components["parameters"]["participating"];
                since?: components["parameters"]["since"];
                before?: components["parameters"]["before"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["thread"][];
                };
            };
        };
    };
    "activity/mark-repo-notifications-as-read": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    last_read_at?: string;
                };
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": {
                        message?: string;
                        url?: string;
                    };
                };
            };
            205: {
                content: never;
            };
        };
    };
    "repos/get-pages": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["page"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/update-information-about-pages-site": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    cname?: string | null;
                    https_enforced?: boolean;
                    build_type?: "legacy" | "workflow";
                    source?: ("gh-pages" | "master" | "master /docs") | ({
                        branch: string;
                        path: "/" | "/docs";
                    });
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            400: components["responses"]["bad_request"];
            409: components["responses"]["conflict"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/create-pages-site": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": ({
                    build_type?: "legacy" | "workflow";
                    source?: {
                        branch: string;
                        path?: "/" | "/docs";
                    };
                }) | null;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["page"];
                };
            };
            409: components["responses"]["conflict"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/delete-pages-site": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/list-pages-builds": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["page-build"][];
                };
            };
        };
    };
    "repos/request-pages-build": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["page-build-status"];
                };
            };
        };
    };
    "repos/get-latest-pages-build": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["page-build"];
                };
            };
        };
    };
    "repos/get-pages-build": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                build_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["page-build"];
                };
            };
        };
    };
    "repos/create-pages-deployment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    artifact_url: string;
                    environment?: string;
                    pages_build_version: string;
                    oidc_token: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["page-deployment"];
                };
            };
            400: components["responses"]["bad_request"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-pages-health-check": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pages-health-check"];
                };
            };
            202: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            400: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
        };
    };
    "repos/enable-private-vulnerability-reporting": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: components["responses"]["no_content"];
            422: components["responses"]["bad_request"];
        };
    };
    "repos/disable-private-vulnerability-reporting": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: components["responses"]["no_content"];
            422: components["responses"]["bad_request"];
        };
    };
    "projects/list-for-repo": {
        parameters: {
            query?: {
                state?: "open" | "closed" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["project"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "projects/create-for-repo": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    body?: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["project"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            410: components["responses"]["gone"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "pulls/list": {
        parameters: {
            query?: {
                state?: "open" | "closed" | "all";
                head?: string;
                base?: string;
                sort?: "created" | "updated" | "popularity" | "long-running";
                direction?: "asc" | "desc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["pull-request-simple"][];
                };
            };
            304: components["responses"]["not_modified"];
            422: components["responses"]["validation_failed"];
        };
    };
    "pulls/create": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    title?: string;
                    head: string;
                    head_repo?: string;
                    base: string;
                    body?: string;
                    maintainer_can_modify?: boolean;
                    draft?: boolean;
                    issue?: number;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["pull-request"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "pulls/list-review-comments-for-repo": {
        parameters: {
            query?: {
                sort?: "created" | "updated" | "created_at";
                direction?: "asc" | "desc";
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["pull-request-review-comment"][];
                };
            };
        };
    };
    "pulls/get-review-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review-comment"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "pulls/delete-review-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
        };
    };
    "pulls/update-review-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review-comment"];
                };
            };
        };
    };
    "reactions/list-for-pull-request-review-comment": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "reactions/create-for-pull-request-review-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "reactions/delete-for-pull-request-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                comment_id: components["parameters"]["comment-id"];
                reaction_id: components["parameters"]["reaction-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "pulls/get": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request"];
                };
            };
            304: components["responses"]["not_modified"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "pulls/update": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    title?: string;
                    body?: string;
                    state?: "open" | "closed";
                    base?: string;
                    maintainer_can_modify?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "codespaces/create-with-pr-for-authenticated-user": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": ({
                    location?: string;
                    geo?: "EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest";
                    client_ip?: string;
                    machine?: string;
                    devcontainer_path?: string;
                    multi_repo_permissions_opt_out?: boolean;
                    working_directory?: string;
                    idle_timeout_minutes?: number;
                    display_name?: string;
                    retention_period_minutes?: number;
                }) | null;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            202: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "pulls/list-review-comments": {
        parameters: {
            query?: {
                sort?: components["parameters"]["sort"];
                direction?: "asc" | "desc";
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["pull-request-review-comment"][];
                };
            };
        };
    };
    "pulls/create-review-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                    commit_id: string;
                    path: string;
                    position?: number;
                    side?: "LEFT" | "RIGHT";
                    line?: number;
                    start_line?: number;
                    start_side?: "LEFT" | "RIGHT" | "side";
                    in_reply_to?: number;
                    subject_type?: "line" | "file";
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["pull-request-review-comment"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "pulls/create-reply-for-review-comment": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
                comment_id: components["parameters"]["comment-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["pull-request-review-comment"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "pulls/list-commits": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["commit"][];
                };
            };
        };
    };
    "pulls/list-files": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["diff-entry"][];
                };
            };
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "pulls/check-if-merged": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "pulls/merge": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": ({
                    commit_title?: string;
                    commit_message?: string;
                    sha?: string;
                    merge_method?: "merge" | "squash" | "rebase";
                }) | null;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-merge-result"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            405: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                    };
                };
            };
            409: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                    };
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "pulls/list-requested-reviewers": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["pull-request-review-request"];
                };
            };
        };
    };
    "pulls/request-reviewers": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    reviewers?: string[];
                    team_reviewers?: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["pull-request-simple"];
                };
            };
            403: components["responses"]["forbidden"];
            422: {
                content: never;
            };
        };
    };
    "pulls/remove-requested-reviewers": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    reviewers: string[];
                    team_reviewers?: string[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-simple"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "pulls/list-reviews": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["pull-request-review"][];
                };
            };
        };
    };
    "pulls/create-review": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    commit_id?: string;
                    body?: string;
                    event?: "APPROVE" | "REQUEST_CHANGES" | "COMMENT";
                    comments?: {
                        path: string;
                        position?: number;
                        body: string;
                        line?: number;
                        side?: string;
                        start_line?: number;
                        start_side?: string;
                    }[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review"];
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "pulls/get-review": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
                review_id: components["parameters"]["review-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "pulls/update-review": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
                review_id: components["parameters"]["review-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review"];
                };
            };
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "pulls/delete-pending-review": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
                review_id: components["parameters"]["review-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "pulls/list-comments-for-review": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
                review_id: components["parameters"]["review-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["review-comment"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "pulls/dismiss-review": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
                review_id: components["parameters"]["review-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    message: string;
                    event?: "DISMISS";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "pulls/submit-review": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
                review_id: components["parameters"]["review-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body?: string;
                    event: "APPROVE" | "REQUEST_CHANGES" | "COMMENT";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["pull-request-review"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "pulls/update-branch": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                pull_number: components["parameters"]["pull-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    expected_head_sha?: string;
                } | null;
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": {
                        message?: string;
                        url?: string;
                    };
                };
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-readme": {
        parameters: {
            query?: {
                ref?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["content-file"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-readme-in-directory": {
        parameters: {
            query?: {
                ref?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                dir: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["content-file"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/list-releases": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["release"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/create-release": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    tag_name: string;
                    target_commitish?: string;
                    name?: string;
                    body?: string;
                    draft?: boolean;
                    prerelease?: boolean;
                    discussion_category_name?: string;
                    generate_release_notes?: boolean;
                    make_latest?: "true" | "false" | "legacy";
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["release"];
                };
            };
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-release-asset": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                asset_id: components["parameters"]["asset-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["release-asset"];
                };
            };
            302: components["responses"]["found"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-release-asset": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                asset_id: components["parameters"]["asset-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/update-release-asset": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                asset_id: components["parameters"]["asset-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    label?: string;
                    state?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["release-asset"];
                };
            };
        };
    };
    "repos/generate-release-notes": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    tag_name: string;
                    target_commitish?: string;
                    previous_tag_name?: string;
                    configuration_file_path?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["release-notes-content"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-latest-release": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["release"];
                };
            };
        };
    };
    "repos/get-release-by-tag": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                tag: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["release"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-release": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["release"];
                };
            };
            401: {
                content: never;
            };
        };
    };
    "repos/delete-release": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/update-release": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    tag_name?: string;
                    target_commitish?: string;
                    name?: string;
                    body?: string;
                    draft?: boolean;
                    prerelease?: boolean;
                    make_latest?: "true" | "false" | "legacy";
                    discussion_category_name?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["release"];
                };
            };
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "repos/list-release-assets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["release-asset"][];
                };
            };
        };
    };
    "repos/upload-release-asset": {
        parameters: {
            query: {
                name: string;
                label?: string;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
            };
        };
        requestBody?: {
            content: {
                "application/octet-stream": string;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["release-asset"];
                };
            };
            422: {
                content: never;
            };
        };
    };
    "reactions/list-for-release": {
        parameters: {
            query?: {
                content?: "+1" | "laugh" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "reactions/create-for-release": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "laugh" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "reactions/delete-for-release": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                release_id: components["parameters"]["release-id"];
                reaction_id: components["parameters"]["reaction-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/get-branch-rules": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                branch: components["parameters"]["branch"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-rule-detailed"][];
                };
            };
        };
    };
    "repos/get-repo-rulesets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                includes_parents?: boolean;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"][];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/create-repo-ruleset": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    target?: "branch" | "tag";
                    enforcement: components["schemas"]["repository-rule-enforcement"];
                    bypass_actors?: components["schemas"]["repository-ruleset-bypass-actor"][];
                    conditions?: components["schemas"]["repository-ruleset-conditions"];
                    rules?: components["schemas"]["repository-rule"][];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/get-repo-ruleset": {
        parameters: {
            query?: {
                includes_parents?: boolean;
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ruleset_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/update-repo-ruleset": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ruleset_id: number;
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    target?: "branch" | "tag";
                    enforcement?: components["schemas"]["repository-rule-enforcement"];
                    bypass_actors?: components["schemas"]["repository-ruleset-bypass-actor"][];
                    conditions?: components["schemas"]["repository-ruleset-conditions"];
                    rules?: components["schemas"]["repository-rule"][];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-ruleset"];
                };
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "repos/delete-repo-ruleset": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ruleset_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "secret-scanning/list-alerts-for-repo": {
        parameters: {
            query?: {
                state?: components["parameters"]["secret-scanning-alert-state"];
                secret_type?: components["parameters"]["secret-scanning-alert-secret-type"];
                resolution?: components["parameters"]["secret-scanning-alert-resolution"];
                sort?: components["parameters"]["secret-scanning-alert-sort"];
                direction?: components["parameters"]["direction"];
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                before?: components["parameters"]["secret-scanning-pagination-before-org-repo"];
                after?: components["parameters"]["secret-scanning-pagination-after-org-repo"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["secret-scanning-alert"][];
                };
            };
            404: {
                content: never;
            };
            503: components["responses"]["service_unavailable"];
        };
    };
    "secret-scanning/get-alert": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["alert-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["secret-scanning-alert"];
                };
            };
            304: components["responses"]["not_modified"];
            404: {
                content: never;
            };
            503: components["responses"]["service_unavailable"];
        };
    };
    "secret-scanning/update-alert": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["alert-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    state: components["schemas"]["secret-scanning-alert-state"];
                    resolution?: components["schemas"]["secret-scanning-alert-resolution"];
                    resolution_comment?: components["schemas"]["secret-scanning-alert-resolution-comment"];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["secret-scanning-alert"];
                };
            };
            400: {
                content: never;
            };
            404: {
                content: never;
            };
            422: {
                content: never;
            };
            503: components["responses"]["service_unavailable"];
        };
    };
    "secret-scanning/list-locations-for-alert": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                alert_number: components["parameters"]["alert-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["secret-scanning-location"][];
                };
            };
            404: {
                content: never;
            };
            503: components["responses"]["service_unavailable"];
        };
    };
    "security-advisories/list-repository-advisories": {
        parameters: {
            query?: {
                direction?: components["parameters"]["direction"];
                sort?: "created" | "updated" | "published";
                before?: components["parameters"]["pagination-before"];
                after?: components["parameters"]["pagination-after"];
                per_page?: number;
                state?: "triage" | "draft" | "published" | "closed";
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-advisory"][];
                };
            };
            400: components["responses"]["bad_request"];
            404: components["responses"]["not_found"];
        };
    };
    "security-advisories/create-repository-advisory": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["repository-advisory-create"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["repository-advisory"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "security-advisories/create-private-vulnerability-report": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["private-vulnerability-report-create"];
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["repository-advisory"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "security-advisories/get-repository-advisory": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ghsa_id: components["parameters"]["ghsa_id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-advisory"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "security-advisories/update-repository-advisory": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ghsa_id: components["parameters"]["ghsa_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["repository-advisory-update"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-advisory"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: {
                content: {
                    "application/json": components["schemas"]["validation-error"];
                };
            };
        };
    };
    "security-advisories/create-repository-advisory-cve-request": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ghsa_id: components["parameters"]["ghsa_id"];
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            400: components["responses"]["bad_request"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "activity/list-stargazers-for-repo": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][] | components["schemas"]["stargazer"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/get-code-frequency-stats": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-frequency-stat"][];
                };
            };
            202: components["responses"]["accepted"];
            204: components["responses"]["no_content"];
        };
    };
    "repos/get-commit-activity-stats": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["commit-activity"][];
                };
            };
            202: components["responses"]["accepted"];
            204: components["responses"]["no_content"];
        };
    };
    "repos/get-contributors-stats": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["contributor-activity"][];
                };
            };
            202: components["responses"]["accepted"];
            204: components["responses"]["no_content"];
        };
    };
    "repos/get-participation-stats": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["participation-stats"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-punch-card-stats": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["code-frequency-stat"][];
                };
            };
            204: components["responses"]["no_content"];
        };
    };
    "repos/create-commit-status": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                sha: string;
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    state: "error" | "failure" | "pending" | "success";
                    target_url?: string | null;
                    description?: string | null;
                    context?: string;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["status"];
                };
            };
        };
    };
    "activity/list-watchers-for-repo": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
        };
    };
    "activity/get-repo-subscription": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-subscription"];
                };
            };
            403: components["responses"]["forbidden"];
            404: {
                content: never;
            };
        };
    };
    "activity/set-repo-subscription": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    subscribed?: boolean;
                    ignored?: boolean;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository-subscription"];
                };
            };
        };
    };
    "activity/delete-repo-subscription": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/list-tags": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["tag"][];
                };
            };
        };
    };
    "repos/list-tag-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["tag-protection"][];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/create-tag-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    pattern: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["tag-protection"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/delete-tag-protection": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                tag_protection_id: components["parameters"]["tag-protection-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/download-tarball-archive": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: string;
            };
        };
        responses: {
            302: {
                headers: {
                    Location?: string;
                };
                content: never;
            };
        };
    };
    "repos/list-teams": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/get-all-topics": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["topic"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "repos/replace-all-topics": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    names: string[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["topic"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "repos/get-clones": {
        parameters: {
            query?: {
                per?: components["parameters"]["per"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["clone-traffic"];
                };
            };
            403: components["responses"]["forbidden"];
        };
    };
    "repos/get-top-paths": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["content-traffic"][];
                };
            };
            403: components["responses"]["forbidden"];
        };
    };
    "repos/get-top-referrers": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["referrer-traffic"][];
                };
            };
            403: components["responses"]["forbidden"];
        };
    };
    "repos/get-views": {
        parameters: {
            query?: {
                per?: components["parameters"]["per"];
            };
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["view-traffic"];
                };
            };
            403: components["responses"]["forbidden"];
        };
    };
    "repos/transfer": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    new_owner: string;
                    new_name?: string;
                    team_ids?: number[];
                };
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": components["schemas"]["minimal-repository"];
                };
            };
        };
    };
    "repos/check-vulnerability-alerts": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "repos/enable-vulnerability-alerts": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/disable-vulnerability-alerts": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "repos/download-zipball-archive": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
                ref: string;
            };
        };
        responses: {
            302: {
                headers: {
                    Location?: string;
                };
                content: never;
            };
        };
    };
    "repos/create-using-template": {
        parameters: {
            path: {
                template_owner: string;
                template_repo: string;
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    owner?: string;
                    name: string;
                    description?: string;
                    include_all_branches?: boolean;
                    private?: boolean;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["repository"];
                };
            };
        };
    };
    "repos/list-public": {
        parameters: {
            query?: {
                since?: components["parameters"]["since-repo"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link?: string;
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            304: components["responses"]["not_modified"];
            422: components["responses"]["validation_failed"];
        };
    };
    "actions/list-environment-secrets": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["actions-secret"][];
                    };
                };
            };
        };
    };
    "actions/get-environment-public-key": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-public-key"];
                };
            };
        };
    };
    "actions/get-environment-secret": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-secret"];
                };
            };
        };
    };
    "actions/create-or-update-environment-secret": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value: string;
                    key_id: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
        };
    };
    "actions/delete-environment-secret": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/list-environment-variables": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["variables-per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        variables: components["schemas"]["actions-variable"][];
                    };
                };
            };
        };
    };
    "actions/create-environment-variable": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    value: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
        };
    };
    "actions/get-environment-variable": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                environment_name: components["parameters"]["environment-name"];
                name: components["parameters"]["variable-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-variable"];
                };
            };
        };
    };
    "actions/delete-environment-variable": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                name: components["parameters"]["variable-name"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "actions/update-environment-variable": {
        parameters: {
            path: {
                repository_id: components["parameters"]["repository-id"];
                name: components["parameters"]["variable-name"];
                environment_name: components["parameters"]["environment-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name?: string;
                    value?: string;
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "search/code": {
        parameters: {
            query: {
                q: string;
                sort?: "indexed";
                order?: "desc" | "asc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        incomplete_results: boolean;
                        items: components["schemas"]["code-search-result-item"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "search/commits": {
        parameters: {
            query: {
                q: string;
                sort?: "author-date" | "committer-date";
                order?: components["parameters"]["order"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        incomplete_results: boolean;
                        items: components["schemas"]["commit-search-result-item"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "search/issues-and-pull-requests": {
        parameters: {
            query: {
                q: string;
                sort?: "comments" | "reactions" | "reactions-+1" | "reactions--1" | "reactions-smile" | "reactions-thinking_face" | "reactions-heart" | "reactions-tada" | "interactions" | "created" | "updated";
                order?: components["parameters"]["order"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        incomplete_results: boolean;
                        items: components["schemas"]["issue-search-result-item"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "search/labels": {
        parameters: {
            query: {
                repository_id: number;
                q: string;
                sort?: "created" | "updated";
                order?: components["parameters"]["order"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        incomplete_results: boolean;
                        items: components["schemas"]["label-search-result-item"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "search/repos": {
        parameters: {
            query: {
                q: string;
                sort?: "stars" | "forks" | "help-wanted-issues" | "updated";
                order?: components["parameters"]["order"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        incomplete_results: boolean;
                        items: components["schemas"]["repo-search-result-item"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "search/topics": {
        parameters: {
            query: {
                q: string;
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        incomplete_results: boolean;
                        items: components["schemas"]["topic-search-result-item"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "search/users": {
        parameters: {
            query: {
                q: string;
                sort?: "followers" | "repositories" | "joined";
                order?: components["parameters"]["order"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        incomplete_results: boolean;
                        items: components["schemas"]["user-search-result-item"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            422: components["responses"]["validation_failed"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "teams/get-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-full"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "teams/delete-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "teams/update-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    description?: string;
                    privacy?: "secret" | "closed";
                    notification_setting?: "notifications_enabled" | "notifications_disabled";
                    permission?: "pull" | "push" | "admin";
                    parent_team_id?: number | null;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-full"];
                };
            };
            201: {
                content: {
                    "application/json": components["schemas"]["team-full"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "teams/list-discussions-legacy": {
        parameters: {
            query?: {
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team-discussion"][];
                };
            };
        };
    };
    "teams/create-discussion-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    title: string;
                    body: string;
                    private?: boolean;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["team-discussion"];
                };
            };
        };
    };
    "teams/get-discussion-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion"];
                };
            };
        };
    };
    "teams/delete-discussion-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/update-discussion-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    title?: string;
                    body?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion"];
                };
            };
        };
    };
    "teams/list-discussion-comments-legacy": {
        parameters: {
            query?: {
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"][];
                };
            };
        };
    };
    "teams/create-discussion-comment-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"];
                };
            };
        };
    };
    "teams/get-discussion-comment-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"];
                };
            };
        };
    };
    "teams/delete-discussion-comment-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/update-discussion-comment-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    body: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-discussion-comment"];
                };
            };
        };
    };
    "reactions/list-for-team-discussion-comment-legacy": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
        };
    };
    "reactions/create-for-team-discussion-comment-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
                comment_number: components["parameters"]["comment-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
        };
    };
    "reactions/list-for-team-discussion-legacy": {
        parameters: {
            query?: {
                content?: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["reaction"][];
                };
            };
        };
    };
    "reactions/create-for-team-discussion-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                discussion_number: components["parameters"]["discussion-number"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    content: "+1" | "-1" | "laugh" | "confused" | "heart" | "hooray" | "rocket" | "eyes";
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["reaction"];
                };
            };
        };
    };
    "teams/list-pending-invitations-legacy": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-invitation"][];
                };
            };
        };
    };
    "teams/list-members-legacy": {
        parameters: {
            query?: {
                role?: "member" | "maintainer" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "teams/get-member-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "teams/add-member-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            404: {
                content: never;
            };
            422: {
                content: never;
            };
        };
    };
    "teams/remove-member-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "teams/get-membership-for-user-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-membership"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "teams/add-or-update-membership-for-user-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                username: components["parameters"]["username"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    role?: "member" | "maintainer";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-membership"];
                };
            };
            403: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
        };
    };
    "teams/remove-membership-for-user-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: {
                content: never;
            };
        };
    };
    "teams/list-projects-legacy": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team-project"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "teams/check-permissions-for-project-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-project"];
                };
            };
            404: {
                content: never;
            };
        };
    };
    "teams/add-or-update-project-permissions-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                project_id: components["parameters"]["project-id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    permission?: "read" | "write" | "admin";
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: {
                content: {
                    "application/json": {
                        message?: string;
                        documentation_url?: string;
                    };
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "teams/remove-project-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                project_id: components["parameters"]["project-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "teams/list-repos-legacy": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "teams/check-permissions-for-repo-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["team-repository"];
                };
            };
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "teams/add-or-update-repo-permissions-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    permission?: "pull" | "push" | "admin";
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "teams/remove-repo-legacy": {
        parameters: {
            path: {
                team_id: components["parameters"]["team-id"];
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "teams/list-child-legacy": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                team_id: components["parameters"]["team-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team"][];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/get-authenticated": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["private-user"] | components["schemas"]["public-user"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "users/update-authenticated": {
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    email?: string;
                    blog?: string;
                    twitter_username?: string | null;
                    company?: string;
                    location?: string;
                    hireable?: boolean;
                    bio?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["private-user"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/list-blocked-by-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/check-blocked": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "users/block": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/unblock": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "codespaces/list-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                repository_id?: components["parameters"]["repository-id-in-query"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        codespaces: components["schemas"]["codespace"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/create-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": OneOf<[
                    {
                        repository_id: number;
                        ref?: string;
                        location?: string;
                        geo?: "EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest";
                        client_ip?: string;
                        machine?: string;
                        devcontainer_path?: string;
                        multi_repo_permissions_opt_out?: boolean;
                        working_directory?: string;
                        idle_timeout_minutes?: number;
                        display_name?: string;
                        retention_period_minutes?: number;
                    },
                    {
                        pull_request: {
                            pull_request_number: number;
                            repository_id: number;
                        };
                        location?: string;
                        geo?: "EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest";
                        machine?: string;
                        devcontainer_path?: string;
                        working_directory?: string;
                        idle_timeout_minutes?: number;
                    }
                ]>;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            202: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            503: components["responses"]["service_unavailable"];
        };
    };
    "codespaces/list-secrets-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        secrets: components["schemas"]["codespaces-secret"][];
                    };
                };
            };
        };
    };
    "codespaces/get-public-key-for-authenticated-user": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespaces-user-public-key"];
                };
            };
        };
    };
    "codespaces/get-secret-for-authenticated-user": {
        parameters: {
            path: {
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespaces-secret"];
                };
            };
        };
    };
    "codespaces/create-or-update-secret-for-authenticated-user": {
        parameters: {
            path: {
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    encrypted_value?: string;
                    key_id: string;
                    selected_repository_ids?: (number | string)[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["empty-object"];
                };
            };
            204: {
                content: never;
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "codespaces/delete-secret-for-authenticated-user": {
        parameters: {
            path: {
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
        };
    };
    "codespaces/list-repositories-for-secret-for-authenticated-user": {
        parameters: {
            path: {
                secret_name: components["parameters"]["secret-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        repositories: components["schemas"]["minimal-repository"][];
                    };
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/set-repositories-for-secret-for-authenticated-user": {
        parameters: {
            path: {
                secret_name: components["parameters"]["secret-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    selected_repository_ids: number[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/add-repository-for-secret-for-authenticated-user": {
        parameters: {
            path: {
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/remove-repository-for-secret-for-authenticated-user": {
        parameters: {
            path: {
                secret_name: components["parameters"]["secret-name"];
                repository_id: number;
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/get-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/delete-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            202: components["responses"]["accepted"];
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/update-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    machine?: string;
                    display_name?: string;
                    recent_folders?: string[];
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "codespaces/export-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            202: {
                content: {
                    "application/json": components["schemas"]["codespace-export-details"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/get-export-details-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
                export_id: components["parameters"]["export-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespace-export-details"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "codespaces/codespace-machines-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        total_count: number;
                        machines: components["schemas"]["codespace-machine"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/publish-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name?: string;
                    private?: boolean;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["codespace-with-full-repository"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "codespaces/start-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            304: components["responses"]["not_modified"];
            400: components["responses"]["bad_request"];
            401: components["responses"]["requires_authentication"];
            402: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
            500: components["responses"]["internal_error"];
        };
    };
    "codespaces/stop-for-authenticated-user": {
        parameters: {
            path: {
                codespace_name: components["parameters"]["codespace-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["codespace"];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            500: components["responses"]["internal_error"];
        };
    };
    "packages/list-docker-migration-conflicting-packages-for-authenticated-user": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"][];
                };
            };
        };
    };
    "users/set-primary-email-visibility-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    visibility: "public" | "private";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["email"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/list-emails-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["email"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/add-email-for-authenticated-user": {
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        emails: string[];
                    },
                    string[],
                    string
                ]>;
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["email"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/delete-email-for-authenticated-user": {
        requestBody?: {
            content: {
                "application/json": OneOf<[
                    {
                        emails: string[];
                    },
                    string[],
                    string
                ]>;
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/list-followers-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "users/list-followed-by-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "users/check-person-is-followed-by-authenticated": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "users/follow": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/unfollow": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/list-gpg-keys-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["gpg-key"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/create-gpg-key-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    name?: string;
                    armored_public_key: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["gpg-key"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/get-gpg-key-for-authenticated-user": {
        parameters: {
            path: {
                gpg_key_id: components["parameters"]["gpg-key-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["gpg-key"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/delete-gpg-key-for-authenticated-user": {
        parameters: {
            path: {
                gpg_key_id: components["parameters"]["gpg-key-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/list-installations-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        installations: components["schemas"]["installation"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "apps/list-installation-repos-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                installation_id: components["parameters"]["installation-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": {
                        total_count: number;
                        repository_selection?: string;
                        repositories: components["schemas"]["repository"][];
                    };
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "apps/add-repo-to-installation-for-authenticated-user": {
        parameters: {
            path: {
                installation_id: components["parameters"]["installation-id"];
                repository_id: components["parameters"]["repository-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "apps/remove-repo-from-installation-for-authenticated-user": {
        parameters: {
            path: {
                installation_id: components["parameters"]["installation-id"];
                repository_id: components["parameters"]["repository-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: {
                content: never;
            };
        };
    };
    "interactions/get-restrictions-for-authenticated-user": {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["interaction-limit-response"] | Record<string, never>;
                };
            };
            204: {
                content: never;
            };
        };
    };
    "interactions/set-restrictions-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": components["schemas"]["interaction-limit"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["interaction-limit-response"];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "interactions/remove-restrictions-for-authenticated-user": {
        responses: {
            204: {
                content: never;
            };
        };
    };
    "issues/list-for-authenticated-user": {
        parameters: {
            query?: {
                filter?: "assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all";
                state?: "open" | "closed" | "all";
                labels?: components["parameters"]["labels"];
                sort?: "created" | "updated" | "comments";
                direction?: components["parameters"]["direction"];
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["issue"][];
                };
            };
            304: components["responses"]["not_modified"];
            404: components["responses"]["not_found"];
        };
    };
    "users/list-public-ssh-keys-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["key"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/create-public-ssh-key-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    title?: string;
                    key: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["key"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/get-public-ssh-key-for-authenticated-user": {
        parameters: {
            path: {
                key_id: components["parameters"]["key-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["key"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/delete-public-ssh-key-for-authenticated-user": {
        parameters: {
            path: {
                key_id: components["parameters"]["key-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "apps/list-subscriptions-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["user-marketplace-purchase"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            404: components["responses"]["not_found"];
        };
    };
    "apps/list-subscriptions-for-authenticated-user-stubbed": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["user-marketplace-purchase"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
        };
    };
    "orgs/list-memberships-for-authenticated-user": {
        parameters: {
            query?: {
                state?: "active" | "pending";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["org-membership"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "orgs/get-membership-for-authenticated-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["org-membership"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "orgs/update-membership-for-authenticated-user": {
        parameters: {
            path: {
                org: components["parameters"]["org"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    state: "active";
                };
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["org-membership"];
                };
            };
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "migrations/list-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["migration"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "migrations/start-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    lock_repositories?: boolean;
                    exclude_metadata?: boolean;
                    exclude_git_data?: boolean;
                    exclude_attachments?: boolean;
                    exclude_releases?: boolean;
                    exclude_owner_projects?: boolean;
                    org_metadata_only?: boolean;
                    exclude?: "repositories"[];
                    repositories: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["migration"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "migrations/get-status-for-authenticated-user": {
        parameters: {
            query?: {
                exclude?: string[];
            };
            path: {
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["migration"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "migrations/get-archive-for-authenticated-user": {
        parameters: {
            path: {
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            302: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "migrations/delete-archive-for-authenticated-user": {
        parameters: {
            path: {
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "migrations/unlock-repo-for-authenticated-user": {
        parameters: {
            path: {
                migration_id: components["parameters"]["migration-id"];
                repo_name: components["parameters"]["repo-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "migrations/list-repos-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                migration_id: components["parameters"]["migration-id"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "orgs/list-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-simple"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "packages/list-packages-for-authenticated-user": {
        parameters: {
            query: {
                package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container";
                visibility?: components["parameters"]["package-visibility"];
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"][];
                };
            };
            400: components["responses"]["package_es_list_error"];
        };
    };
    "packages/get-package-for-authenticated-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"];
                };
            };
        };
    };
    "packages/delete-package-for-authenticated-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/restore-package-for-authenticated-user": {
        parameters: {
            query?: {
                token?: string;
            };
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/get-all-package-versions-for-package-owned-by-authenticated-user": {
        parameters: {
            query?: {
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
                state?: "active" | "deleted";
            };
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package-version"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/get-package-version-for-authenticated-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package-version"];
                };
            };
        };
    };
    "packages/delete-package-version-for-authenticated-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/restore-package-version-for-authenticated-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "projects/create-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    body?: string | null;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["project"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed_simple"];
        };
    };
    "users/list-public-emails-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["email"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/list-for-authenticated-user": {
        parameters: {
            query?: {
                visibility?: "all" | "public" | "private";
                affiliation?: string;
                type?: "all" | "owner" | "public" | "private" | "member";
                sort?: "created" | "updated" | "pushed" | "full_name";
                direction?: "asc" | "desc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
                since?: components["parameters"]["since-repo-date"];
                before?: components["parameters"]["before-repo-date"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["repository"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/create-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    description?: string;
                    homepage?: string;
                    private?: boolean;
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_discussions?: boolean;
                    team_id?: number;
                    auto_init?: boolean;
                    gitignore_template?: string;
                    license_template?: string;
                    allow_squash_merge?: boolean;
                    allow_merge_commit?: boolean;
                    allow_rebase_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";
                    squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";
                    merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE";
                    merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK";
                    has_downloads?: boolean;
                    is_template?: boolean;
                };
            };
        };
        responses: {
            201: {
                headers: {
                    Location?: string;
                };
                content: {
                    "application/json": components["schemas"]["repository"];
                };
            };
            304: components["responses"]["not_modified"];
            400: components["responses"]["bad_request"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "repos/list-invitations-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["repository-invitation"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "repos/decline-invitation-for-authenticated-user": {
        parameters: {
            path: {
                invitation_id: components["parameters"]["invitation-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
        };
    };
    "repos/accept-invitation-for-authenticated-user": {
        parameters: {
            path: {
                invitation_id: components["parameters"]["invitation-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            409: components["responses"]["conflict"];
        };
    };
    "users/list-social-accounts-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["social-account"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/add-social-account-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    account_urls: string[];
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["social-account"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/delete-social-account-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    account_urls: string[];
                };
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/list-ssh-signing-keys-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["ssh-signing-key"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/create-ssh-signing-key-for-authenticated-user": {
        requestBody: {
            content: {
                "application/json": {
                    title?: string;
                    key: string;
                };
            };
        };
        responses: {
            201: {
                content: {
                    "application/json": components["schemas"]["ssh-signing-key"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "users/get-ssh-signing-key-for-authenticated-user": {
        parameters: {
            path: {
                ssh_signing_key_id: components["parameters"]["ssh-signing-key-id"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["ssh-signing-key"];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/delete-ssh-signing-key-for-authenticated-user": {
        parameters: {
            path: {
                ssh_signing_key_id: components["parameters"]["ssh-signing-key-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "activity/list-repos-starred-by-authenticated-user": {
        parameters: {
            query?: {
                sort?: components["parameters"]["sort-starred"];
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["repository"][];
                    "application/vnd.github.v3.star+json": components["schemas"]["starred-repository"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/check-repo-is-starred-by-authenticated-user": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: {
                content: {
                    "application/json": components["schemas"]["basic-error"];
                };
            };
        };
    };
    "activity/star-repo-for-authenticated-user": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "activity/unstar-repo-for-authenticated-user": {
        parameters: {
            path: {
                owner: components["parameters"]["owner"];
                repo: components["parameters"]["repo"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "activity/list-watched-repos-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
            304: components["responses"]["not_modified"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "teams/list-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["team-full"][];
                };
            };
            304: components["responses"]["not_modified"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "users/list": {
        parameters: {
            query?: {
                since?: components["parameters"]["since-user"];
                per_page?: components["parameters"]["per-page"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link?: string;
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
            304: components["responses"]["not_modified"];
        };
    };
    "users/get-by-username": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["private-user"] | components["schemas"]["public-user"];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "packages/list-docker-migration-conflicting-packages-for-user": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "activity/list-events-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
        };
    };
    "activity/list-org-events-for-authenticated-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
                org: components["parameters"]["org"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
        };
    };
    "activity/list-public-events-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
        };
    };
    "users/list-followers-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
        };
    };
    "users/list-following-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["simple-user"][];
                };
            };
        };
    };
    "users/check-following-for-user": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
                target_user: string;
            };
        };
        responses: {
            204: {
                content: never;
            };
            404: {
                content: never;
            };
        };
    };
    "gists/list-for-user": {
        parameters: {
            query?: {
                since?: components["parameters"]["since"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["base-gist"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "users/list-gpg-keys-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["gpg-key"][];
                };
            };
        };
    };
    "users/get-context-for-user": {
        parameters: {
            query?: {
                subject_type?: "organization" | "repository" | "issue" | "pull_request";
                subject_id?: string;
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["hovercard"];
                };
            };
            404: components["responses"]["not_found"];
            422: components["responses"]["validation_failed"];
        };
    };
    "apps/get-user-installation": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["installation"];
                };
            };
        };
    };
    "users/list-public-keys-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["key-simple"][];
                };
            };
        };
    };
    "orgs/list-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["organization-simple"][];
                };
            };
        };
    };
    "packages/list-packages-for-user": {
        parameters: {
            query: {
                package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container";
                visibility?: components["parameters"]["package-visibility"];
                page?: components["parameters"]["page"];
                per_page?: components["parameters"]["per-page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"][];
                };
            };
            400: components["responses"]["package_es_list_error"];
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
        };
    };
    "packages/get-package-for-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package"];
                };
            };
        };
    };
    "packages/delete-package-for-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/restore-package-for-user": {
        parameters: {
            query?: {
                token?: string;
            };
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/get-all-package-versions-for-package-owned-by-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package-version"][];
                };
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/get-package-version-for-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                package_version_id: components["parameters"]["package-version-id"];
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["package-version"];
                };
            };
        };
    };
    "packages/delete-package-version-for-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                username: components["parameters"]["username"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "packages/restore-package-version-for-user": {
        parameters: {
            path: {
                package_type: components["parameters"]["package-type"];
                package_name: components["parameters"]["package-name"];
                username: components["parameters"]["username"];
                package_version_id: components["parameters"]["package-version-id"];
            };
        };
        responses: {
            204: {
                content: never;
            };
            401: components["responses"]["requires_authentication"];
            403: components["responses"]["forbidden"];
            404: components["responses"]["not_found"];
        };
    };
    "projects/list-for-user": {
        parameters: {
            query?: {
                state?: "open" | "closed" | "all";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["project"][];
                };
            };
            422: components["responses"]["validation_failed"];
        };
    };
    "activity/list-received-events-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
        };
    };
    "activity/list-received-public-events-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["event"][];
                };
            };
        };
    };
    "repos/list-for-user": {
        parameters: {
            query?: {
                type?: "all" | "owner" | "member";
                sort?: "created" | "updated" | "pushed" | "full_name";
                direction?: "asc" | "desc";
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
        };
    };
    "billing/get-github-actions-billing-user": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["actions-billing-usage"];
                };
            };
        };
    };
    "billing/get-github-packages-billing-user": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["packages-billing-usage"];
                };
            };
        };
    };
    "billing/get-shared-storage-billing-user": {
        parameters: {
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["combined-billing-usage"];
                };
            };
        };
    };
    "users/list-social-accounts-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["social-account"][];
                };
            };
        };
    };
    "users/list-ssh-signing-keys-for-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["ssh-signing-key"][];
                };
            };
        };
    };
    "activity/list-repos-starred-by-user": {
        parameters: {
            query?: {
                sort?: components["parameters"]["sort-starred"];
                direction?: components["parameters"]["direction"];
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["starred-repository"][] | components["schemas"]["repository"][];
                };
            };
        };
    };
    "activity/list-repos-watched-by-user": {
        parameters: {
            query?: {
                per_page?: components["parameters"]["per-page"];
                page?: components["parameters"]["page"];
            };
            path: {
                username: components["parameters"]["username"];
            };
        };
        responses: {
            200: {
                headers: {
                    Link: components["headers"]["link"];
                };
                content: {
                    "application/json": components["schemas"]["minimal-repository"][];
                };
            };
        };
    };
    "meta/get-all-versions": {
        responses: {
            200: {
                content: {
                    "application/json": string[];
                };
            };
            404: components["responses"]["not_found"];
        };
    };
    "meta/get-zen": {
        responses: {
            200: {
                content: {
                    "application/json": string;
                };
            };
        };
    };
    "branch-protection-rule/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-branch-protection-rule-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "branch-protection-rule/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-branch-protection-rule-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "branch-protection-rule/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-branch-protection-rule-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "check-run/completed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-check-run-completed"];
                "application/x-www-form-urlencoded": components["schemas"]["webhook-check-run-completed-form-encoded"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "check-run/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-check-run-created"];
                "application/x-www-form-urlencoded": components["schemas"]["webhook-check-run-created-form-encoded"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "check-run/requested-action": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-check-run-requested-action"];
                "application/x-www-form-urlencoded": components["schemas"]["webhook-check-run-requested-action-form-encoded"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "check-run/rerequested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-check-run-rerequested"];
                "application/x-www-form-urlencoded": components["schemas"]["webhook-check-run-rerequested-form-encoded"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "check-suite/completed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-check-suite-completed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "check-suite/requested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-check-suite-requested"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "check-suite/rerequested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-check-suite-rerequested"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "code-scanning-alert/appeared-in-branch": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-code-scanning-alert-appeared-in-branch"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "code-scanning-alert/closed-by-user": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-code-scanning-alert-closed-by-user"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "code-scanning-alert/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-code-scanning-alert-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "code-scanning-alert/fixed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-code-scanning-alert-fixed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "code-scanning-alert/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-code-scanning-alert-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "code-scanning-alert/reopened-by-user": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-code-scanning-alert-reopened-by-user"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "commit-comment/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-commit-comment-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    create: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-create"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    delete: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-delete"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "dependabot-alert/auto-dismissed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-dependabot-alert-auto-dismissed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "dependabot-alert/auto-reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-dependabot-alert-auto-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "dependabot-alert/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-dependabot-alert-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "dependabot-alert/dismissed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-dependabot-alert-dismissed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "dependabot-alert/fixed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-dependabot-alert-fixed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "dependabot-alert/reintroduced": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-dependabot-alert-reintroduced"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "dependabot-alert/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-dependabot-alert-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deploy-key/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deploy-key-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deploy-key/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deploy-key-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deployment/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deployment-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deployment-protection-rule/requested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deployment-protection-rule-requested"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deployment-review/approved": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deployment-review-approved"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deployment-review/rejected": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deployment-review-rejected"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deployment-review/requested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deployment-review-requested"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "deployment-status/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-deployment-status-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/answered": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-answered"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/category-changed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-category-changed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/closed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-closed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion-comment/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-comment-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion-comment/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-comment-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion-comment/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-comment-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/labeled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-labeled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/locked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-locked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/pinned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-pinned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/transferred": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-transferred"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/unanswered": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-unanswered"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/unlabeled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-unlabeled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/unlocked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-unlocked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "discussion/unpinned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-discussion-unpinned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    fork: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-fork"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "github-app-authorization/revoked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-github-app-authorization-revoked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    gollum: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-gollum"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation/new-permissions-accepted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-new-permissions-accepted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation-repositories/added": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-repositories-added"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation-repositories/removed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-repositories-removed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation/suspend": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-suspend"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation-target/renamed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-target-renamed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "installation/unsuspend": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-installation-unsuspend"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issue-comment/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issue-comment-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issue-comment/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issue-comment-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issue-comment/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issue-comment-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/assigned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-assigned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/closed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-closed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/demilestoned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-demilestoned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/labeled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-labeled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/locked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-locked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/milestoned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-milestoned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/opened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-opened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/pinned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-pinned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/transferred": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-transferred"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/unassigned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-unassigned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/unlabeled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-unlabeled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/unlocked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-unlocked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "issues/unpinned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-issues-unpinned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "label/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-label-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "label/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-label-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "label/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-label-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "marketplace-purchase/cancelled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-marketplace-purchase-cancelled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "marketplace-purchase/changed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-marketplace-purchase-changed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "marketplace-purchase/pending-change": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-marketplace-purchase-pending-change"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "marketplace-purchase/pending-change-cancelled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-marketplace-purchase-pending-change-cancelled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "marketplace-purchase/purchased": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-marketplace-purchase-purchased"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "member/added": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-member-added"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "member/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-member-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "member/removed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-member-removed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "membership/added": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-membership-added"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "membership/removed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-membership-removed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "merge-group/checks-requested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-merge-group-checks-requested"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "merge-group/destroyed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-merge-group-destroyed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "meta/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-meta-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "milestone/closed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-milestone-closed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "milestone/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-milestone-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "milestone/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-milestone-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "milestone/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-milestone-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "milestone/opened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-milestone-opened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "org-block/blocked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-org-block-blocked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "org-block/unblocked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-org-block-unblocked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "organization/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-organization-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "organization/member-added": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-organization-member-added"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "organization/member-invited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-organization-member-invited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "organization/member-removed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-organization-member-removed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "organization/renamed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-organization-renamed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "package/published": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-package-published"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "package/updated": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-package-updated"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "page-build": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-page-build"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "personal-access-token-request/approved": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-personal-access-token-request-approved"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "personal-access-token-request/cancelled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-personal-access-token-request-cancelled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "personal-access-token-request/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-personal-access-token-request-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "personal-access-token-request/denied": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-personal-access-token-request-denied"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    ping: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-ping"];
                "application/x-www-form-urlencoded": components["schemas"]["webhook-ping-form-encoded"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-card/converted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-card-converted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-card/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-card-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-card/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-card-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-card/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-card-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-card/moved": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-card-moved"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project/closed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-closed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-column/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-column-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-column/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-column-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-column/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-column-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project-column/moved": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-column-moved"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "project/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-project-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2/closed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-project-closed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-project-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-project-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-project-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2-item/archived": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-item-archived"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2-item/converted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-item-converted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2-item/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-item-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2-item/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-item-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2-item/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-item-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2-item/reordered": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-item-reordered"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2-item/restored": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-item-restored"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "projects-v2/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-projects-v2-project-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    public: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-public"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/assigned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-assigned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/auto-merge-disabled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-auto-merge-disabled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/auto-merge-enabled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-auto-merge-enabled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/closed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-closed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/converted-to-draft": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-converted-to-draft"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/demilestoned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-demilestoned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/dequeued": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-dequeued"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/enqueued": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-enqueued"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/labeled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-labeled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/locked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-locked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/milestoned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-milestoned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/opened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-opened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/ready-for-review": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-ready-for-review"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review-comment/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-comment-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review-comment/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-comment-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review-comment/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-comment-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review/dismissed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-dismissed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/review-request-removed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-request-removed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/review-requested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-requested"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review/submitted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-submitted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review-thread/resolved": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-thread-resolved"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request-review-thread/unresolved": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-review-thread-unresolved"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/synchronize": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-synchronize"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/unassigned": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-unassigned"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/unlabeled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-unlabeled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "pull-request/unlocked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-pull-request-unlocked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    push: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-push"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "registry-package/published": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-registry-package-published"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "registry-package/updated": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-registry-package-updated"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "release/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-release-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "release/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-release-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "release/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-release-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "release/prereleased": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-release-prereleased"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "release/published": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-release-published"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "release/released": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-release-released"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "release/unpublished": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-release-unpublished"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-advisory/published": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-advisory-published"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-advisory/reported": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-advisory-reported"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/archived": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-archived"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-dispatch/sample.collected": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-dispatch-sample"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-import": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-import"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/privatized": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-privatized"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/publicized": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-publicized"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/renamed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-renamed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-ruleset/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-ruleset-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-ruleset/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-ruleset-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-ruleset/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-ruleset-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/transferred": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-transferred"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository/unarchived": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-unarchived"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-vulnerability-alert/create": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-vulnerability-alert-create"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-vulnerability-alert/dismiss": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-vulnerability-alert-dismiss"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-vulnerability-alert/reopen": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-vulnerability-alert-reopen"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "repository-vulnerability-alert/resolve": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-repository-vulnerability-alert-resolve"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "secret-scanning-alert/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-secret-scanning-alert-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "secret-scanning-alert-location/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-secret-scanning-alert-location-created"];
                "application/x-www-form-urlencoded": components["schemas"]["webhook-secret-scanning-alert-location-created-form-encoded"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "secret-scanning-alert/reopened": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-secret-scanning-alert-reopened"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "secret-scanning-alert/resolved": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-secret-scanning-alert-resolved"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "secret-scanning-alert/revoked": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-secret-scanning-alert-revoked"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "security-advisory/published": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-security-advisory-published"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "security-advisory/updated": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-security-advisory-updated"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "security-advisory/withdrawn": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-security-advisory-withdrawn"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "security-and-analysis": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-security-and-analysis"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "sponsorship/cancelled": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-sponsorship-cancelled"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "sponsorship/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-sponsorship-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "sponsorship/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-sponsorship-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "sponsorship/pending-cancellation": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-sponsorship-pending-cancellation"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "sponsorship/pending-tier-change": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-sponsorship-pending-tier-change"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "sponsorship/tier-changed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-sponsorship-tier-changed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "star/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-star-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "star/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-star-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    status: {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-status"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "team-add": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-team-add"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "team/added-to-repository": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-team-added-to-repository"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "team/created": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-team-created"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "team/deleted": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-team-deleted"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "team/edited": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-team-edited"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "team/removed-from-repository": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-team-removed-from-repository"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "watch/started": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-watch-started"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-dispatch": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-dispatch"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-job/completed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-job-completed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-job/in-progress": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-job-in-progress"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-job/queued": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-job-queued"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-job/waiting": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-job-waiting"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-run/completed": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-run-completed"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-run/in-progress": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-run-in-progress"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
    "workflow-run/requested": {
        parameters: {
            header?: {
                "User-Agent"?: string;
                "X-Github-Hook-Id"?: string;
                "X-Github-Event"?: string;
                "X-Github-Hook-Installation-Target-Id"?: string;
                "X-Github-Hook-Installation-Target-Type"?: string;
                "X-GitHub-Delivery"?: string;
                "X-Hub-Signature-256"?: string;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["webhook-workflow-run-requested"];
            };
        };
        responses: {
            200: {
                content: never;
            };
        };
    };
}
export {};
