type WithRequired<T, K extends keyof T> = T & {
    [P in K]-?: T[P];
};
type Without<T, U> = {
    [P in Exclude<keyof T, keyof U>]?: never;
};
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;
export interface paths {
    "/v2/1-clicks": {
        get: external["resources/1-clicks/oneClicks_list.yml"];
    };
    "/v2/1-clicks/kubernetes": {
        post: external["resources/1-clicks/oneClicks_install_kubernetes.yml"];
    };
    "/v2/account": {
        get: external["resources/account/account_get.yml"];
    };
    "/v2/account/keys": {
        get: external["resources/ssh_keys/sshKeys_list.yml"];
        post: external["resources/ssh_keys/sshKeys_create.yml"];
    };
    "/v2/account/keys/{ssh_key_identifier}": {
        get: external["resources/ssh_keys/sshKeys_get.yml"];
        put: external["resources/ssh_keys/sshKeys_update.yml"];
        delete: external["resources/ssh_keys/sshKeys_delete.yml"];
    };
    "/v2/actions": {
        get: external["resources/actions/actions_list.yml"];
    };
    "/v2/actions/{action_id}": {
        get: external["resources/actions/actions_get.yml"];
    };
    "/v2/apps": {
        get: external["resources/apps/apps_list.yml"];
        post: external["resources/apps/apps_create.yml"];
    };
    "/v2/apps/{id}": {
        get: external["resources/apps/apps_get.yml"];
        put: external["resources/apps/apps_update.yml"];
        delete: external["resources/apps/apps_delete.yml"];
    };
    "/v2/apps/{app_id}/components/{component_name}/logs": {
        get: external["resources/apps/apps_get_logs_active_deployment.yml"];
    };
    "/v2/apps/{app_id}/deployments": {
        get: external["resources/apps/apps_list_deployments.yml"];
        post: external["resources/apps/apps_create_deployment.yml"];
    };
    "/v2/apps/{app_id}/deployments/{deployment_id}": {
        get: external["resources/apps/apps_get_deployment.yml"];
    };
    "/v2/apps/{app_id}/deployments/{deployment_id}/cancel": {
        post: external["resources/apps/apps_cancel_deployment.yml"];
    };
    "/v2/apps/{app_id}/deployments/{deployment_id}/components/{component_name}/logs": {
        get: external["resources/apps/apps_get_logs.yml"];
    };
    "/v2/apps/{app_id}/deployments/{deployment_id}/logs": {
        get: external["resources/apps/apps_get_logs_aggregate.yml"];
    };
    "/v2/apps/{app_id}/logs": {
        get: external["resources/apps/apps_get_logs_active_deployment_aggregate.yml"];
    };
    "/v2/apps/tiers": {
        get: external["resources/apps/apps_list_tiers.yml"];
    };
    "/v2/apps/tiers/{slug}": {
        get: external["resources/apps/apps_get_tier.yml"];
    };
    "/v2/apps/tiers/instance_sizes": {
        get: external["resources/apps/apps_list_instanceSizes.yml"];
    };
    "/v2/apps/tiers/instance_sizes/{slug}": {
        get: external["resources/apps/apps_get_instanceSize.yml"];
    };
    "/v2/apps/regions": {
        get: external["resources/apps/apps_list_regions.yml"];
    };
    "/v2/apps/propose": {
        post: external["resources/apps/apps_validate_appSpec.yml"];
    };
    "/v2/apps/{app_id}/alerts": {
        get: external["resources/apps/apps_list_alerts.yml"];
    };
    "/v2/apps/{app_id}/alerts/{alert_id}/destinations": {
        post: external["resources/apps/apps_assign_alertDestinations.yml"];
    };
    "/v2/apps/{app_id}/rollback": {
        post: external["resources/apps/apps_create_rollback.yml"];
    };
    "/v2/apps/{app_id}/rollback/validate": {
        post: external["resources/apps/apps_validate_rollback.yml"];
    };
    "/v2/apps/{app_id}/rollback/commit": {
        post: external["resources/apps/apps_commit_rollback.yml"];
    };
    "/v2/apps/{app_id}/rollback/revert": {
        post: external["resources/apps/apps_revert_rollback.yml"];
    };
    "/v2/apps/{app_id}/metrics/bandwidth_daily": {
        get: external["resources/apps/apps_get_metrics_bandwidth_usage.yml"];
    };
    "/v2/apps/metrics/bandwidth_daily": {
        post: external["resources/apps/apps_list_metrics_bandwidth_usage.yml"];
    };
    "/v2/cdn/endpoints": {
        get: external["resources/cdn/cdn_list_endpoints.yml"];
        post: external["resources/cdn/cdn_create_endpoint.yml"];
    };
    "/v2/cdn/endpoints/{cdn_id}": {
        get: external["resources/cdn/cdn_get_endpoint.yml"];
        put: external["resources/cdn/cdn_update_endpoint.yml"];
        delete: external["resources/cdn/cdn_delete_endpoint.yml"];
    };
    "/v2/cdn/endpoints/{cdn_id}/cache": {
        delete: external["resources/cdn/cdn_purge_cache.yml"];
    };
    "/v2/certificates": {
        get: external["resources/certificates/certificates_list.yml"];
        post: external["resources/certificates/certificates_create.yml"];
    };
    "/v2/certificates/{certificate_id}": {
        get: external["resources/certificates/certificates_get.yml"];
        delete: external["resources/certificates/certificates_delete.yml"];
    };
    "/v2/customers/my/balance": {
        get: external["resources/billing/balance_get.yml"];
    };
    "/v2/customers/my/billing_history": {
        get: external["resources/billing/billingHistory_list.yml"];
    };
    "/v2/customers/my/invoices": {
        get: external["resources/billing/invoices_list.yml"];
    };
    "/v2/customers/my/invoices/{invoice_uuid}": {
        get: external["resources/billing/invoices_get_byUUID.yml"];
    };
    "/v2/customers/my/invoices/{invoice_uuid}/csv": {
        get: external["resources/billing/invoices_get_csvByUUID.yml"];
    };
    "/v2/customers/my/invoices/{invoice_uuid}/pdf": {
        get: external["resources/billing/invoices_get_pdfByUUID.yml"];
    };
    "/v2/customers/my/invoices/{invoice_uuid}/summary": {
        get: external["resources/billing/invoices_get_summaryByUUID.yml"];
    };
    "/v2/databases/options": {
        get: external["resources/databases/databases_list_options.yml"];
    };
    "/v2/databases": {
        get: external["resources/databases/databases_list_clusters.yml"];
        post: external["resources/databases/databases_create_cluster.yml"];
    };
    "/v2/databases/{database_cluster_uuid}": {
        get: external["resources/databases/databases_get_cluster.yml"];
        delete: external["resources/databases/databases_destroy_cluster.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/config": {
        get: external["resources/databases/databases_get_config.yml"];
        patch: external["resources/databases/databases_patch_config.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/ca": {
        get: external["resources/databases/databases_get_ca.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/online-migration": {
        get: external["resources/databases/databases_get_migrationStatus.yml"];
        put: external["resources/databases/databases_update_onlineMigration.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/online-migration/{migration_id}": {
        delete: external["resources/databases/databases_delete_onlineMigration.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/migrate": {
        put: external["resources/databases/databases_update_region.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/resize": {
        put: external["resources/databases/databases_update_clusterSize.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/firewall": {
        get: external["resources/databases/databases_list_firewall_rules.yml"];
        put: external["resources/databases/databases_update_firewall_rules.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/maintenance": {
        put: external["resources/databases/databases_update_maintenanceWindow.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/backups": {
        get: external["resources/databases/databases_list_backups.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/replicas": {
        get: external["resources/databases/databases_list_replicas.yml"];
        post: external["resources/databases/databases_create_replica.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/replicas/{replica_name}": {
        get: external["resources/databases/databases_get_replica.yml"];
        delete: external["resources/databases/databases_destroy_replica.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/replicas/{replica_name}/promote": {
        put: external["resources/databases/databases_promote_replica.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/users": {
        get: external["resources/databases/databases_list_users.yml"];
        post: external["resources/databases/databases_add_user.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/users/{username}": {
        get: external["resources/databases/databases_get_user.yml"];
        delete: external["resources/databases/databases_delete_user.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/users/{username}/reset_auth": {
        post: external["resources/databases/databases_reset_auth.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/dbs": {
        get: external["resources/databases/databases_list.yml"];
        post: external["resources/databases/databases_add.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/dbs/{database_name}": {
        get: external["resources/databases/databases_get.yml"];
        delete: external["resources/databases/databases_delete.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/pools": {
        get: external["resources/databases/databases_list_connectionPools.yml"];
        post: external["resources/databases/databases_add_connectionPool.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/pools/{pool_name}": {
        get: external["resources/databases/databases_get_connectionPool.yml"];
        put: external["resources/databases/databases_update_connectionPool.yml"];
        delete: external["resources/databases/databases_delete_connectionPool.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/eviction_policy": {
        get: external["resources/databases/databases_get_evictionPolicy.yml"];
        put: external["resources/databases/databases_update_evictionPolicy.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/sql_mode": {
        get: external["resources/databases/databases_get_sql_mode.yml"];
        put: external["resources/databases/databases_update_sql_mode.yml"];
    };
    "/v2/databases/{database_cluster_uuid}/upgrade": {
        put: external["resources/databases/databases_upgrade_major_version.yml"];
    };
    "/v2/domains": {
        get: external["resources/domains/domains_list.yml"];
        post: external["resources/domains/domains_create.yml"];
    };
    "/v2/domains/{domain_name}": {
        get: external["resources/domains/domains_get.yml"];
        delete: external["resources/domains/domains_delete.yml"];
    };
    "/v2/domains/{domain_name}/records": {
        get: external["resources/domains/domains_list_records.yml"];
        post: external["resources/domains/domains_create_record.yml"];
    };
    "/v2/domains/{domain_name}/records/{domain_record_id}": {
        get: external["resources/domains/domains_get_record.yml"];
        put: external["resources/domains/domains_update_record.yml"];
        delete: external["resources/domains/domains_delete_record.yml"];
        patch: external["resources/domains/domains_patch_record.yml"];
    };
    "/v2/droplets": {
        get: external["resources/droplets/droplets_list.yml"];
        post: external["resources/droplets/droplets_create.yml"];
        delete: external["resources/droplets/droplets_destroy_byTag.yml"];
    };
    "/v2/droplets/{droplet_id}": {
        get: external["resources/droplets/droplets_get.yml"];
        delete: external["resources/droplets/droplets_destroy.yml"];
    };
    "/v2/droplets/{droplet_id}/backups": {
        get: external["resources/droplets/droplets_list_backups.yml"];
    };
    "/v2/droplets/{droplet_id}/snapshots": {
        get: external["resources/droplets/droplets_list_snapshots.yml"];
    };
    "/v2/droplets/{droplet_id}/actions": {
        get: external["resources/droplets/dropletActions_list.yml"];
        post: external["resources/droplets/dropletActions_post.yml"];
    };
    "/v2/droplets/actions": {
        post: external["resources/droplets/dropletActions_post_byTag.yml"];
    };
    "/v2/droplets/{droplet_id}/actions/{action_id}": {
        get: external["resources/droplets/dropletActions_get.yml"];
    };
    "/v2/droplets/{droplet_id}/kernels": {
        get: external["resources/droplets/droplets_list_kernels.yml"];
    };
    "/v2/droplets/{droplet_id}/firewalls": {
        get: external["resources/droplets/droplets_list_firewalls.yml"];
    };
    "/v2/droplets/{droplet_id}/neighbors": {
        get: external["resources/droplets/droplets_list_neighbors.yml"];
    };
    "/v2/droplets/{droplet_id}/destroy_with_associated_resources": {
        get: external["resources/droplets/droplets_list_associatedResources.yml"];
    };
    "/v2/droplets/{droplet_id}/destroy_with_associated_resources/selective": {
        delete: external["resources/droplets/droplets_destroy_withAssociatedResourcesSelective.yml"];
    };
    "/v2/droplets/{droplet_id}/destroy_with_associated_resources/dangerous": {
        delete: external["resources/droplets/droplets_destroy_withAssociatedResourcesDangerous.yml"];
    };
    "/v2/droplets/{droplet_id}/destroy_with_associated_resources/status": {
        get: external["resources/droplets/droplets_get_destroyAssociatedResourcesStatus.yml"];
    };
    "/v2/droplets/{droplet_id}/destroy_with_associated_resources/retry": {
        post: external["resources/droplets/droplets_destroy_retryWithAssociatedResources.yml"];
    };
    "/v2/firewalls": {
        get: external["resources/firewalls/firewalls_list.yml"];
        post: external["resources/firewalls/firewalls_create.yml"];
    };
    "/v2/firewalls/{firewall_id}": {
        get: external["resources/firewalls/firewalls_get.yml"];
        put: external["resources/firewalls/firewalls_update.yml"];
        delete: external["resources/firewalls/firewalls_delete.yml"];
    };
    "/v2/firewalls/{firewall_id}/droplets": {
        post: external["resources/firewalls/firewalls_assign_droplets.yml"];
        delete: external["resources/firewalls/firewalls_delete_droplets.yml"];
    };
    "/v2/firewalls/{firewall_id}/tags": {
        post: external["resources/firewalls/firewalls_add_tags.yml"];
        delete: external["resources/firewalls/firewalls_delete_tags.yml"];
    };
    "/v2/firewalls/{firewall_id}/rules": {
        post: external["resources/firewalls/firewalls_add_rules.yml"];
        delete: external["resources/firewalls/firewalls_delete_rules.yml"];
    };
    "/v2/floating_ips": {
        get: external["resources/floating_ips/floatingIPs_list.yml"];
        post: external["resources/floating_ips/floatingIPs_create.yml"];
    };
    "/v2/floating_ips/{floating_ip}": {
        get: external["resources/floating_ips/floatingIPs_get.yml"];
        delete: external["resources/floating_ips/floatingIPs_delete.yml"];
    };
    "/v2/floating_ips/{floating_ip}/actions": {
        get: external["resources/floating_ips/floatingIPsAction_list.yml"];
        post: external["resources/floating_ips/floatingIPsAction_post.yml"];
    };
    "/v2/floating_ips/{floating_ip}/actions/{action_id}": {
        get: external["resources/floating_ips/floatingIPsAction_get.yml"];
    };
    "/v2/functions/namespaces": {
        get: external["resources/functions/functions_list_namespaces.yml"];
        post: external["resources/functions/functions_create_namespace.yml"];
    };
    "/v2/functions/namespaces/{namespace_id}": {
        get: external["resources/functions/functions_get_namespace.yml"];
        delete: external["resources/functions/functions_delete_namespace.yml"];
    };
    "/v2/functions/namespaces/{namespace_id}/triggers": {
        get: external["resources/functions/functions_list_triggers.yml"];
        post: external["resources/functions/functions_create_trigger.yml"];
    };
    "/v2/functions/namespaces/{namespace_id}/triggers/{trigger_name}": {
        get: external["resources/functions/functions_get_trigger.yml"];
        put: external["resources/functions/functions_update_trigger.yml"];
        delete: external["resources/functions/functions_delete_trigger.yml"];
    };
    "/v2/images": {
        get: external["resources/images/images_list.yml"];
        post: external["resources/images/images_create_custom.yml"];
    };
    "/v2/images/{image_id}": {
        get: external["resources/images/images_get.yml"];
        put: external["resources/images/images_update.yml"];
        delete: external["resources/images/images_delete.yml"];
    };
    "/v2/images/{image_id}/actions": {
        get: external["resources/images/imageActions_list.yml"];
        post: external["resources/images/imageActions_post.yml"];
    };
    "/v2/images/{image_id}/actions/{action_id}": {
        get: external["resources/images/imageActions_get.yml"];
    };
    "/v2/kubernetes/clusters": {
        get: external["resources/kubernetes/kubernetes_list_clusters.yml"];
        post: external["resources/kubernetes/kubernetes_create_cluster.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}": {
        get: external["resources/kubernetes/kubernetes_get_cluster.yml"];
        put: external["resources/kubernetes/kubernetes_update_cluster.yml"];
        delete: external["resources/kubernetes/kubernetes_delete_cluster.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources": {
        get: external["resources/kubernetes/kubernetes_list_associatedResources.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/selective": {
        delete: external["resources/kubernetes/kubernetes_destroy_associatedResourcesSelective.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/dangerous": {
        delete: external["resources/kubernetes/kubernetes_destroy_associatedResourcesDangerous.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/kubeconfig": {
        get: external["resources/kubernetes/kubernetes_get_kubeconfig.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/credentials": {
        get: external["resources/kubernetes/kubernetes_get_credentials.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/upgrades": {
        get: external["resources/kubernetes/kubernetes_get_availableUpgrades.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/upgrade": {
        post: external["resources/kubernetes/kubernetes_upgrade_cluster.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/node_pools": {
        get: external["resources/kubernetes/kubernetes_list_nodePools.yml"];
        post: external["resources/kubernetes/kubernetes_add_nodePool.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}": {
        get: external["resources/kubernetes/kubernetes_get_nodePool.yml"];
        put: external["resources/kubernetes/kubernetes_update_nodePool.yml"];
        delete: external["resources/kubernetes/kubernetes_delete_nodePool.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/nodes/{node_id}": {
        delete: external["resources/kubernetes/kubernetes_delete_node.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/recycle": {
        post: external["resources/kubernetes/kubernetes_recycle_nodePool.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/user": {
        get: external["resources/kubernetes/kubernetes_get_clusterUser.yml"];
    };
    "/v2/kubernetes/options": {
        get: external["resources/kubernetes/kubernetes_list_options.yml"];
    };
    "/v2/kubernetes/clusters/{cluster_id}/clusterlint": {
        get: external["resources/kubernetes/kubernetes_get_clusterLintResults.yml"];
        post: external["resources/kubernetes/kubernetes_run_clusterLint.yml"];
    };
    "/v2/kubernetes/registry": {
        post: external["resources/kubernetes/kubernetes_add_registry.yml"];
        delete: external["resources/kubernetes/kubernetes_remove_registry.yml"];
    };
    "/v2/load_balancers": {
        get: external["resources/load_balancers/loadBalancers_list.yml"];
        post: external["resources/load_balancers/loadBalancers_create.yml"];
    };
    "/v2/load_balancers/{lb_id}": {
        get: external["resources/load_balancers/loadBalancers_get.yml"];
        put: external["resources/load_balancers/loadBalancers_update.yml"];
        delete: external["resources/load_balancers/loadBalancers_delete.yml"];
    };
    "/v2/load_balancers/{lb_id}/droplets": {
        post: external["resources/load_balancers/loadBalancers_add_droplets.yml"];
        delete: external["resources/load_balancers/loadBalancers_remove_droplets.yml"];
    };
    "/v2/load_balancers/{lb_id}/forwarding_rules": {
        post: external["resources/load_balancers/loadBalancers_add_forwardingRules.yml"];
        delete: external["resources/load_balancers/loadBalancers_remove_forwardingRules.yml"];
    };
    "/v2/monitoring/alerts": {
        get: external["resources/monitoring/monitoring_list_alertPolicy.yml"];
        post: external["resources/monitoring/monitoring_create_alertPolicy.yml"];
    };
    "/v2/monitoring/alerts/{alert_uuid}": {
        get: external["resources/monitoring/monitoring_get_alertPolicy.yml"];
        put: external["resources/monitoring/monitoring_update_alertPolicy.yml"];
        delete: external["resources/monitoring/monitoring_delete_alertPolicy.yml"];
    };
    "/v2/monitoring/metrics/droplet/bandwidth": {
        get: external["resources/monitoring/monitoring_get_dropletBandwidthMetrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/cpu": {
        get: external["resources/monitoring/monitoring_get_DropletCpuMetrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/filesystem_free": {
        get: external["resources/monitoring/monitoring_get_dropletFilesystemFreeMetrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/filesystem_size": {
        get: external["resources/monitoring/monitoring_get_dropletFilesystemSizeMetrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/load_1": {
        get: external["resources/monitoring/monitoring_get_dropletLoad1Metrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/load_5": {
        get: external["resources/monitoring/monitoring_get_dropletLoad5Metrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/load_15": {
        get: external["resources/monitoring/monitoring_get_dropletLoad15Metrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/memory_cached": {
        get: external["resources/monitoring/monitoring_get_dropletMemoryCachedMetrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/memory_free": {
        get: external["resources/monitoring/monitoring_get_dropletMemoryFreeMetrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/memory_total": {
        get: external["resources/monitoring/monitoring_get_dropletMemoryTotalMetrics.yml"];
    };
    "/v2/monitoring/metrics/droplet/memory_available": {
        get: external["resources/monitoring/monitoring_get_dropletMemoryAvailableMetrics.yml"];
    };
    "/v2/projects": {
        get: external["resources/projects/projects_list.yml"];
        post: external["resources/projects/projects_create.yml"];
    };
    "/v2/projects/default": {
        get: external["resources/projects/projects_get_default.yml"];
        put: external["resources/projects/projects_update_default.yml"];
        patch: external["resources/projects/projects_patch_default.yml"];
    };
    "/v2/projects/{project_id}": {
        get: external["resources/projects/projects_get.yml"];
        put: external["resources/projects/projects_update.yml"];
        delete: external["resources/projects/projects_delete.yml"];
        patch: external["resources/projects/projects_patch.yml"];
    };
    "/v2/projects/{project_id}/resources": {
        get: external["resources/projects/projects_list_resources.yml"];
        post: external["resources/projects/projects_assign_resources.yml"];
    };
    "/v2/projects/default/resources": {
        get: external["resources/projects/projects_list_resources_default.yml"];
        post: external["resources/projects/projects_assign_resources_default.yml"];
    };
    "/v2/regions": {
        get: external["resources/regions/regions_list.yml"];
    };
    "/v2/registry": {
        get: external["resources/registry/registry_get.yml"];
        post: external["resources/registry/registry_create.yml"];
        delete: external["resources/registry/registry_delete.yml"];
    };
    "/v2/registry/subscription": {
        get: external["resources/registry/registry_get_subscription.yml"];
        post: external["resources/registry/registry_update_subscription.yml"];
    };
    "/v2/registry/docker-credentials": {
        get: external["resources/registry/registry_get_dockerCredentials.yml"];
    };
    "/v2/registry/validate-name": {
        post: external["resources/registry/registry_validate_name.yml"];
    };
    "/v2/registry/{registry_name}/repositories": {
        get: external["resources/registry/registry_list_repositories.yml"];
    };
    "/v2/registry/{registry_name}/repositoriesV2": {
        get: external["resources/registry/registry_list_repositoriesV2.yml"];
    };
    "/v2/registry/{registry_name}/repositories/{repository_name}/tags": {
        get: external["resources/registry/registry_list_repositoryTags.yml"];
    };
    "/v2/registry/{registry_name}/repositories/{repository_name}/tags/{repository_tag}": {
        delete: external["resources/registry/registry_delete_repositoryTag.yml"];
    };
    "/v2/registry/{registry_name}/repositories/{repository_name}/digests": {
        get: external["resources/registry/registry_list_repositoryManifests.yml"];
    };
    "/v2/registry/{registry_name}/repositories/{repository_name}/digests/{manifest_digest}": {
        delete: external["resources/registry/registry_delete_repositoryManifest.yml"];
    };
    "/v2/registry/{registry_name}/garbage-collection": {
        get: external["resources/registry/registry_get_garbageCollection.yml"];
        post: external["resources/registry/registry_run_garbageCollection.yml"];
    };
    "/v2/registry/{registry_name}/garbage-collections": {
        get: external["resources/registry/registry_list_garbageCollections.yml"];
    };
    "/v2/registry/{registry_name}/garbage-collection/{garbage_collection_uuid}": {
        put: external["resources/registry/registry_update_garbageCollection.yml"];
    };
    "/v2/registry/options": {
        get: external["resources/registry/registry_get_options.yml"];
    };
    "/v2/reports/droplet_neighbors_ids": {
        get: external["resources/droplets/droplets_list_neighborsIds.yml"];
    };
    "/v2/reserved_ips": {
        get: external["resources/reserved_ips/reservedIPs_list.yml"];
        post: external["resources/reserved_ips/reservedIPs_create.yml"];
    };
    "/v2/reserved_ips/{reserved_ip}": {
        get: external["resources/reserved_ips/reservedIPs_get.yml"];
        delete: external["resources/reserved_ips/reservedIPs_delete.yml"];
    };
    "/v2/reserved_ips/{reserved_ip}/actions": {
        get: external["resources/reserved_ips/reservedIPsActions_list.yml"];
        post: external["resources/reserved_ips/reservedIPsActions_post.yml"];
    };
    "/v2/reserved_ips/{reserved_ip}/actions/{action_id}": {
        get: external["resources/reserved_ips/reservedIPsActions_get.yml"];
    };
    "/v2/sizes": {
        get: external["resources/sizes/sizes_list.yml"];
    };
    "/v2/snapshots": {
        get: external["resources/snapshots/snapshots_list.yml"];
    };
    "/v2/snapshots/{snapshot_id}": {
        get: external["resources/snapshots/snapshots_get.yml"];
        delete: external["resources/snapshots/snapshots_delete.yml"];
    };
    "/v2/tags": {
        get: external["resources/tags/tags_list.yml"];
        post: external["resources/tags/tags_create.yml"];
    };
    "/v2/tags/{tag_id}": {
        get: external["resources/tags/tags_get.yml"];
        delete: external["resources/tags/tags_delete.yml"];
    };
    "/v2/tags/{tag_id}/resources": {
        post: external["resources/tags/tags_assign_resources.yml"];
        delete: external["resources/tags/tags_unassign_resources.yml"];
    };
    "/v2/volumes": {
        get: external["resources/volumes/volumes_list.yml"];
        post: external["resources/volumes/volumes_create.yml"];
        delete: external["resources/volumes/volumes_delete_byName.yml"];
    };
    "/v2/volumes/actions": {
        post: external["resources/volumes/volumeActions_post.yml"];
    };
    "/v2/volumes/snapshots/{snapshot_id}": {
        get: external["resources/volumes/volumeSnapshots_get_byId.yml"];
        delete: external["resources/volumes/volumeSnapshots_delete_byId.yml"];
    };
    "/v2/volumes/{volume_id}": {
        get: external["resources/volumes/volumes_get.yml"];
        delete: external["resources/volumes/volumes_delete.yml"];
    };
    "/v2/volumes/{volume_id}/actions": {
        get: external["resources/volumes/volumeActions_list.yml"];
        post: external["resources/volumes/volumeActions_post_byId.yml"];
    };
    "/v2/volumes/{volume_id}/actions/{action_id}": {
        get: external["resources/volumes/volumeActions_get.yml"];
    };
    "/v2/volumes/{volume_id}/snapshots": {
        get: external["resources/volumes/volumeSnapshots_list.yml"];
        post: external["resources/volumes/volumeSnapshots_create.yml"];
    };
    "/v2/vpcs": {
        get: external["resources/vpcs/vpcs_list.yml"];
        post: external["resources/vpcs/vpcs_create.yml"];
    };
    "/v2/vpcs/{vpc_id}": {
        get: external["resources/vpcs/vpcs_get.yml"];
        put: external["resources/vpcs/vpcs_update.yml"];
        delete: external["resources/vpcs/vpcs_delete.yml"];
        patch: external["resources/vpcs/vpcs_patch.yml"];
    };
    "/v2/vpcs/{vpc_id}/members": {
        get: external["resources/vpcs/vpcs_list_members.yml"];
    };
    "/v2/uptime/checks": {
        get: external["resources/uptime/list_checks.yml"];
        post: external["resources/uptime/create_check.yml"];
    };
    "/v2/uptime/checks/{check_id}": {
        get: external["resources/uptime/get_check.yml"];
        put: external["resources/uptime/update_check.yml"];
        delete: external["resources/uptime/delete_check.yml"];
    };
    "/v2/uptime/checks/{check_id}/state": {
        get: external["resources/uptime/get_check_state.yml"];
    };
    "/v2/uptime/checks/{check_id}/alerts": {
        get: external["resources/uptime/list_alerts.yml"];
        post: external["resources/uptime/create_alert.yml"];
    };
    "/v2/uptime/checks/{check_id}/alerts/{alert_id}": {
        get: external["resources/uptime/get_alert.yml"];
        put: external["resources/uptime/update_alert.yml"];
        delete: external["resources/uptime/delete_alert.yml"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export interface external {
    "description.yml": {
        paths: Record<string, never>;
        webhooks: Record<string, never>;
        components: Record<string, never>;
    };
    "resources/1-clicks/models/oneClicks_create.yml": {
        addon_slugs: string[];
        cluster_uuid: string;
    };
    "resources/1-clicks/models/oneClicks.yml": {
        slug: string;
        type: string;
    };
    "resources/1-clicks/oneClicks_install_kubernetes.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/1-clicks/models/oneClicks_create.yml"];
            };
        };
        responses: {
            200: external["resources/1-clicks/responses/oneClicks_create.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/1-clicks/oneClicks_list.yml": {
        parameters: {
            query?: {
                type?: external["resources/1-clicks/parameters.yml"]["oneClicks_type"];
            };
        };
        responses: {
            200: external["resources/1-clicks/responses/oneClicks_all.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/1-clicks/parameters.yml": {
        oneClicks_type?: "droplet" | "kubernetes";
    };
    "resources/1-clicks/responses/oneClicks_all.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                "1_clicks"?: external["resources/1-clicks/models/oneClicks.yml"][];
            };
        };
    };
    "resources/1-clicks/responses/oneClicks_create.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                message?: string;
            };
        };
    };
    "resources/account/account_get.yml": {
        responses: {
            200: external["resources/account/responses/account.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/account/models/account.yml": {
        droplet_limit: number;
        floating_ip_limit: number;
        email: string;
        name?: string;
        uuid: string;
        email_verified: boolean;
        status: "active" | "warning" | "locked";
        status_message: string;
        team?: {
            uuid?: string;
            name?: string;
        };
    };
    "resources/account/responses/account.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                account?: external["resources/account/models/account.yml"];
            };
        };
    };
    "resources/actions/actions_get.yml": {
        parameters: {
            path: {
                action_id: external["resources/actions/parameters.yml"]["action_id"];
            };
        };
        responses: {
            200: external["resources/actions/responses/action.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/actions/actions_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/actions/responses/actions.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/actions/models/action.yml": {
        id?: number;
        status?: "in-progress" | "completed" | "errored";
        type?: string;
        started_at?: string;
        completed_at?: string | null;
        resource_id?: number | null;
        resource_type?: string;
        region?: external["resources/regions/models/region.yml"];
        region_slug?: external["resources/regions/models/region.yml"]["slug"] & (string | null);
    };
    "resources/actions/parameters.yml": {
        action_id: number;
    };
    "resources/actions/responses/action.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                action?: external["resources/actions/models/action.yml"];
            };
        };
    };
    "resources/actions/responses/actions.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                actions?: external["resources/actions/models/action.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/apps/apps_assign_alertDestinations.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
                alert_id: external["resources/apps/parameters.yml"]["alert_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/apps_assign_app_alert_destinations_request.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/assign_alert_destinations.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_cancel_deployment.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
                deployment_id: external["resources/apps/parameters.yml"]["deployment_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/cancel_deployment.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_commit_rollback.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        responses: {
            200: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_create_deployment.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/apps_create_deployment_request.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/new_app_deployment.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_create_rollback.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/apps_rollback_app_request.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/new_app_deployment.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_create.yml": {
        parameters: {
            header?: {
                Accept?: external["resources/apps/parameters.yml"]["accept"];
                "Content-Type"?: external["resources/apps/parameters.yml"]["content-type"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/apps_create_app_request.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/new_app.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_delete.yml": {
        parameters: {
            path: {
                id: external["resources/apps/parameters.yml"]["id_app"];
            };
        };
        responses: {
            200: external["resources/apps/responses/delete_app.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_deployment.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
                deployment_id: external["resources/apps/parameters.yml"]["deployment_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_deployment.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_instanceSize.yml": {
        parameters: {
            path: {
                slug: external["resources/apps/parameters.yml"]["slug_size"];
            };
        };
        responses: {
            200: external["resources/apps/responses/get_instance.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_logs_active_deployment_aggregate.yml": {
        parameters: {
            query: {
                follow?: external["resources/apps/parameters.yml"]["live_updates"];
                type: external["resources/apps/parameters.yml"]["log_type"];
                pod_connection_timeout?: external["resources/apps/parameters.yml"]["time_wait"];
            };
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_logs.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_logs_active_deployment.yml": {
        parameters: {
            query: {
                follow?: external["resources/apps/parameters.yml"]["live_updates"];
                type: external["resources/apps/parameters.yml"]["log_type"];
                pod_connection_timeout?: external["resources/apps/parameters.yml"]["time_wait"];
            };
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
                component_name: external["resources/apps/parameters.yml"]["component"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_logs.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_logs_aggregate.yml": {
        parameters: {
            query: {
                follow?: external["resources/apps/parameters.yml"]["live_updates"];
                type: external["resources/apps/parameters.yml"]["log_type"];
                pod_connection_timeout?: external["resources/apps/parameters.yml"]["time_wait"];
            };
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
                deployment_id: external["resources/apps/parameters.yml"]["deployment_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_logs.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_logs.yml": {
        parameters: {
            query: {
                follow?: external["resources/apps/parameters.yml"]["live_updates"];
                type: external["resources/apps/parameters.yml"]["log_type"];
                pod_connection_timeout?: external["resources/apps/parameters.yml"]["time_wait"];
            };
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
                deployment_id: external["resources/apps/parameters.yml"]["deployment_id"];
                component_name: external["resources/apps/parameters.yml"]["component"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_logs.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_metrics_bandwidth_usage.yml": {
        parameters: {
            query?: {
                date?: string;
            };
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/get_metrics_bandwidth_usage.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get_tier.yml": {
        parameters: {
            path: {
                slug: external["resources/apps/parameters.yml"]["slug_tier"];
            };
        };
        responses: {
            200: external["resources/apps/responses/get_tier.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_get.yml": {
        parameters: {
            query?: {
                name?: external["resources/apps/parameters.yml"]["app_name"];
            };
            path: {
                id: external["resources/apps/parameters.yml"]["id_app"];
            };
        };
        responses: {
            200: external["resources/apps/responses/apps_get.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_list_alerts.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_alerts.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_list_deployments.yml": {
        parameters: {
            query?: {
                page?: external["shared/parameters.yml"]["page"];
                per_page?: external["shared/parameters.yml"]["per_page"];
            };
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/existing_deployments.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_list_instanceSizes.yml": {
        responses: {
            200: external["resources/apps/responses/list_instance.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_list_metrics_bandwidth_usage.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/app_metrics_bandwidth_usage_request.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_metrics_bandwidth_usage.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_list_regions.yml": {
        responses: {
            200: external["resources/apps/responses/list_regions.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_list_tiers.yml": {
        responses: {
            200: external["resources/apps/responses/all_tiers.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_list.yml": {
        parameters: {
            query?: {
                page?: external["shared/parameters.yml"]["page"];
                per_page?: external["shared/parameters.yml"]["per_page"];
                with_projects?: external["resources/apps/parameters.yml"]["with_projects"];
            };
        };
        responses: {
            200: external["resources/apps/responses/list_apps.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_revert_rollback.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        responses: {
            200: external["resources/apps/responses/new_app_deployment.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_update.yml": {
        parameters: {
            path: {
                id: external["resources/apps/parameters.yml"]["id_app"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/apps_update_app_request.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/update_app.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_validate_appSpec.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/app_propose.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/propose_app.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/apps_validate_rollback.yml": {
        parameters: {
            path: {
                app_id: external["resources/apps/parameters.yml"]["app_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/apps/models/apps_rollback_app_request.yml"];
            };
        };
        responses: {
            200: external["resources/apps/responses/apps_validate_rollback.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/apps/models/app_alert_email.yml": string;
    "resources/apps/models/app_alert_phase.yml": "UNKNOWN" | "PENDING" | "CONFIGURING" | "ACTIVE" | "ERROR";
    "resources/apps/models/app_alert_progress_step_reason.yml": {
        code?: string;
        message?: string;
    };
    "resources/apps/models/app_alert_progress_step_status.yml": "UNKNOWN" | "PENDING" | "RUNNING" | "ERROR" | "SUCCESS";
    "resources/apps/models/app_alert_progress_step.yml": {
        name?: string;
        status?: external["resources/apps/models/app_alert_progress_step_status.yml"];
        started_at?: string;
        ended_at?: string;
        reason?: external["resources/apps/models/app_alert_progress_step_reason.yml"];
    };
    "resources/apps/models/app_alert_progress.yml": {
        steps?: external["resources/apps/models/app_alert_progress_step.yml"][];
    };
    "resources/apps/models/app_alert_slack_webhook.yml": {
        url?: string;
        channel?: string;
    };
    "resources/apps/models/app_alert_spec_operator.yml": "UNSPECIFIED_OPERATOR" | "GREATER_THAN" | "LESS_THAN";
    "resources/apps/models/app_alert_spec_rule.yml": "UNSPECIFIED_RULE" | "CPU_UTILIZATION" | "MEM_UTILIZATION" | "RESTART_COUNT" | "DEPLOYMENT_FAILED" | "DEPLOYMENT_LIVE" | "DOMAIN_FAILED" | "DOMAIN_LIVE" | "FUNCTIONS_ACTIVATION_COUNT" | "FUNCTIONS_AVERAGE_DURATION_MS" | "FUNCTIONS_ERROR_RATE_PER_MINUTE" | "FUNCTIONS_AVERAGE_WAIT_TIME_MS" | "FUNCTIONS_ERROR_COUNT" | "FUNCTIONS_GB_RATE_PER_SECOND";
    "resources/apps/models/app_alert_spec_window.yml": "UNSPECIFIED_WINDOW" | "FIVE_MINUTES" | "TEN_MINUTES" | "THIRTY_MINUTES" | "ONE_HOUR";
    "resources/apps/models/app_alert_spec.yml": {
        rule?: external["resources/apps/models/app_alert_spec_rule.yml"];
        disabled?: boolean;
        operator?: external["resources/apps/models/app_alert_spec_operator.yml"];
        value?: number;
        window?: external["resources/apps/models/app_alert_spec_window.yml"];
    };
    "resources/apps/models/app_alert.yml": {
        id?: string;
        component_name?: string;
        spec?: external["resources/apps/models/app_alert_spec.yml"];
        emails?: external["resources/apps/models/app_alert_email.yml"][];
        slack_webhooks?: external["resources/apps/models/app_alert_slack_webhook.yml"][];
        phase?: external["resources/apps/models/app_alert_phase.yml"];
        progress?: external["resources/apps/models/app_alert_progress.yml"];
    };
    "resources/apps/models/app_component_base.yml": {
        name?: string;
        git?: external["resources/apps/models/apps_git_source_spec.yml"];
        github?: external["resources/apps/models/apps_github_source_spec.yml"];
        gitlab?: external["resources/apps/models/apps_gitlab_source_spec.yml"];
        image?: external["resources/apps/models/apps_image_source_spec.yml"];
        dockerfile_path?: string;
        build_command?: string;
        run_command?: string;
        source_dir?: string;
        envs?: external["resources/apps/models/app_variable_definition.yml"][];
        environment_slug?: string;
        log_destinations?: external["resources/apps/models/app_log_destination_definition.yml"];
    };
    "resources/apps/models/app_component_instance_base.yml": {
        instance_count?: number;
        instance_size_slug?: "basic-xxs" | "basic-xs" | "basic-s" | "basic-m" | "professional-xs" | "professional-s" | "professional-m" | "professional-1l" | "professional-l" | "professional-xl";
    };
    "resources/apps/models/app_database_spec.yml": {
        cluster_name?: string;
        db_name?: string;
        db_user?: string;
        engine?: "UNSET" | "MYSQL" | "PG" | "REDIS";
        name: string;
        production?: boolean;
        version?: string;
    };
    "resources/apps/models/app_domain_spec.yml": {
        domain: string;
        type?: "UNSPECIFIED" | "DEFAULT" | "PRIMARY" | "ALIAS";
        wildcard?: boolean;
        zone?: string;
        minimum_tls_version?: "1.2" | "1.3";
    };
    "resources/apps/models/app_domain_validation.yml": {
        txt_name?: string;
        txt_value?: string;
    };
    "resources/apps/models/app_functions_spec.yml": {
        cors?: external["resources/apps/models/apps_cors_policy.yml"];
        routes?: external["resources/apps/models/app_route_spec.yml"][];
        name: string;
        source_dir?: string;
        alerts?: external["resources/apps/models/app_alert_spec.yml"][];
        envs?: external["resources/apps/models/app_variable_definition.yml"][];
        git?: external["resources/apps/models/apps_git_source_spec.yml"];
        github?: external["resources/apps/models/apps_github_source_spec.yml"];
        gitlab?: external["resources/apps/models/apps_gitlab_source_spec.yml"];
        log_destinations?: external["resources/apps/models/app_log_destination_definition.yml"];
    };
    "resources/apps/models/app_ingress_spec_rule_match.yml": {
        path: external["resources/apps/models/app_ingress_spec_rule_string_match.yml"];
    };
    "resources/apps/models/app_ingress_spec_rule_routing_component.yml": {
        name: string;
        preserve_path_prefix?: string;
        rewrite?: string;
    };
    "resources/apps/models/app_ingress_spec_rule_routing_redirect.yml": {
        uri?: string;
        authority?: string;
        port?: number;
        scheme?: string;
        redirect_code?: number;
    };
    "resources/apps/models/app_ingress_spec_rule_string_match.yml": {
        prefix: string;
    };
    "resources/apps/models/app_ingress_spec_rule.yml": {
        match?: external["resources/apps/models/app_ingress_spec_rule_match.yml"];
        cors?: external["resources/apps/models/apps_cors_policy.yml"];
        component?: external["resources/apps/models/app_ingress_spec_rule_routing_component.yml"];
        redirect?: external["resources/apps/models/app_ingress_spec_rule_routing_redirect.yml"];
    };
    "resources/apps/models/app_ingress_spec.yml": {
        rules?: external["resources/apps/models/app_ingress_spec_rule.yml"][];
    };
    "resources/apps/models/app_job_spec.yml": external["resources/apps/models/app_component_base.yml"] & external["resources/apps/models/app_component_instance_base.yml"] & ({
        kind?: "UNSPECIFIED" | "PRE_DEPLOY" | "POST_DEPLOY" | "FAILED_DEPLOY";
    });
    "resources/apps/models/app_log_destination_datadog_spec.yml": {
        endpoint?: string;
        api_key: string;
    };
    "resources/apps/models/app_log_destination_definition.yml": {
        name: string;
        papertrail?: external["resources/apps/models/app_log_destination_papertrail_spec.yml"];
        datadog?: external["resources/apps/models/app_log_destination_datadog_spec.yml"];
        logtail?: external["resources/apps/models/app_log_destination_logtail_spec.yml"];
    };
    "resources/apps/models/app_log_destination_logtail_spec.yml": {
        token?: string;
    };
    "resources/apps/models/app_log_destination_papertrail_spec.yml": {
        endpoint: string;
    };
    "resources/apps/models/app_metrics_bandwidth_usage_details.yml": {
        app_id?: string;
        bandwidth_bytes?: string;
    };
    "resources/apps/models/app_metrics_bandwidth_usage_request.yml": {
        app_ids: string[];
        date?: string;
    };
    "resources/apps/models/app_metrics_bandwidth_usage.yml": {
        app_bandwidth_usage?: external["resources/apps/models/app_metrics_bandwidth_usage_details.yml"][];
        date?: string;
    };
    "resources/apps/models/app_propose_response.yml": {
        app_is_static?: boolean;
        app_name_available?: boolean;
        app_name_suggestion?: string;
        existing_static_apps?: string;
        spec?: external["resources/apps/models/app_spec.yml"];
        app_cost?: number;
        app_tier_downgrade_cost?: number;
    };
    "resources/apps/models/app_propose.yml": {
        spec: external["resources/apps/models/app_spec.yml"];
        app_id?: string;
    };
    "resources/apps/models/app_response.yml": {
        app?: external["resources/apps/models/app.yml"];
    };
    "resources/apps/models/app_rollback_validation_condition.yml": {
        code?: "incompatible_phase" | "incompatible_result" | "exceeded_revision_limit" | "app_pinned" | "database_config_conflict" | "region_conflict" | "static_site_requires_rebuild" | "image_source_missing_digest";
        message?: string;
        components?: string[];
    };
    "resources/apps/models/app_route_spec.yml": {
        path?: string;
        preserve_path_prefix?: boolean;
    };
    "resources/apps/models/app_service_spec_health_check.yml": {
        failure_threshold?: number;
        port?: number;
        http_path?: string;
        initial_delay_seconds?: number;
        period_seconds?: number;
        success_threshold?: number;
        timeout_seconds?: number;
    };
    "resources/apps/models/app_service_spec.yml": external["resources/apps/models/app_component_base.yml"] & external["resources/apps/models/app_component_instance_base.yml"] & {
        cors?: external["resources/apps/models/apps_cors_policy.yml"];
        health_check?: external["resources/apps/models/app_service_spec_health_check.yml"];
        http_port?: number;
        internal_ports?: number[];
        routes?: external["resources/apps/models/app_route_spec.yml"][];
    };
    "resources/apps/models/app_spec.yml": {
        name: string;
        region?: "ams" | "nyc" | "fra" | "sfo" | "sgp" | "blr" | "tor" | "lon" | "syd";
        domains?: external["resources/apps/models/app_domain_spec.yml"][];
        services?: external["resources/apps/models/app_service_spec.yml"][];
        static_sites?: external["resources/apps/models/app_static_site_spec.yml"][];
        jobs?: external["resources/apps/models/app_job_spec.yml"][];
        workers?: external["resources/apps/models/app_worker_spec.yml"][];
        functions?: external["resources/apps/models/app_functions_spec.yml"][];
        databases?: external["resources/apps/models/app_database_spec.yml"][];
        ingress?: external["resources/apps/models/app_ingress_spec.yml"];
    };
    "resources/apps/models/app_static_site_spec.yml": WithRequired<external["resources/apps/models/app_component_base.yml"] & {
        index_document?: string;
        error_document?: string;
        catchall_document?: string;
        output_dir?: string;
        cors?: external["resources/apps/models/apps_cors_policy.yml"];
        routes?: external["resources/apps/models/app_route_spec.yml"][];
    }, "name">;
    "resources/apps/models/app_variable_definition.yml": {
        key: string;
        scope?: "UNSET" | "RUN_TIME" | "BUILD_TIME" | "RUN_AND_BUILD_TIME";
        type?: "GENERAL" | "SECRET";
        value?: string;
    };
    "resources/apps/models/app_worker_spec.yml": WithRequired<external["resources/apps/models/app_component_base.yml"] & external["resources/apps/models/app_component_instance_base.yml"], "name">;
    "resources/apps/models/app.yml": {
        active_deployment?: external["resources/apps/models/apps_deployment.yml"];
        created_at?: string;
        default_ingress?: string;
        domains?: readonly external["resources/apps/models/apps_domain.yml"][];
        id?: string;
        in_progress_deployment?: external["resources/apps/models/apps_deployment.yml"];
        last_deployment_created_at?: string;
        live_domain?: string;
        live_url?: string;
        live_url_base?: string;
        owner_uuid?: string;
        pending_deployment?: external["resources/apps/models/apps_deployment.yml"];
        project_id?: string;
        region?: external["resources/apps/models/apps_region.yml"];
        spec: external["resources/apps/models/app_spec.yml"];
        tier_slug?: string;
        updated_at?: string;
        pinned_deployment?: external["resources/apps/models/apps_deployment.yml"];
    };
    "resources/apps/models/apps_alert_response.yml": {
        alert?: external["resources/apps/models/app_alert.yml"];
    };
    "resources/apps/models/apps_assign_app_alert_destinations_request.yml": {
        emails?: external["resources/apps/models/app_alert_email.yml"][];
        slack_webhooks?: external["resources/apps/models/app_alert_slack_webhook.yml"][];
    };
    "resources/apps/models/apps_cors_policy.yml": {
        allow_origins?: external["resources/apps/models/apps_string_match.yml"][];
        allow_methods?: string[];
        allow_headers?: string[];
        expose_headers?: string[];
        max_age?: string;
        allow_credentials?: boolean;
    };
    "resources/apps/models/apps_create_app_request.yml": {
        spec: external["resources/apps/models/app_spec.yml"];
        project_id?: string;
    };
    "resources/apps/models/apps_create_deployment_request.yml": {
        force_build?: boolean;
    };
    "resources/apps/models/apps_delete_app_response.yml": {
        id?: string;
    };
    "resources/apps/models/apps_deployment_functions.yml": {
        name?: string;
        source_commit_hash?: string;
        namespace?: string;
    };
    "resources/apps/models/apps_deployment_job.yml": {
        name?: string;
        source_commit_hash?: string;
    };
    "resources/apps/models/apps_deployment_phase.yml": "UNKNOWN" | "PENDING_BUILD" | "BUILDING" | "PENDING_DEPLOY" | "DEPLOYING" | "ACTIVE" | "SUPERSEDED" | "ERROR" | "CANCELED";
    "resources/apps/models/apps_deployment_progress_step_reason.yml": {
        code?: string;
        message?: string;
    };
    "resources/apps/models/apps_deployment_progress_step_status.yml": "UNKNOWN" | "PENDING" | "RUNNING" | "ERROR" | "SUCCESS";
    "resources/apps/models/apps_deployment_progress_step.yml": {
        component_name?: string;
        ended_at?: string;
        message_base?: string;
        name?: string;
        reason?: external["resources/apps/models/apps_deployment_progress_step_reason.yml"];
        started_at?: string;
        status?: external["resources/apps/models/apps_deployment_progress_step_status.yml"];
        steps?: Record<string, never>[];
    };
    "resources/apps/models/apps_deployment_progress.yml": {
        error_steps?: number;
        pending_steps?: number;
        running_steps?: number;
        steps?: external["resources/apps/models/apps_deployment_progress_step.yml"][];
        success_steps?: number;
        summary_steps?: external["resources/apps/models/apps_deployment_progress_step.yml"][];
        total_steps?: number;
    };
    "resources/apps/models/apps_deployment_response.yml": {
        deployment?: external["resources/apps/models/apps_deployment.yml"];
    };
    "resources/apps/models/apps_deployment_service.yml": {
        name?: string;
        source_commit_hash?: string;
    };
    "resources/apps/models/apps_deployment_static_site.yml": {
        name?: string;
        source_commit_hash?: string;
    };
    "resources/apps/models/apps_deployment_worker.yml": {
        name?: string;
        source_commit_hash?: string;
    };
    "resources/apps/models/apps_deployment.yml": {
        cause?: string;
        cloned_from?: string;
        created_at?: string;
        id?: string;
        jobs?: external["resources/apps/models/apps_deployment_job.yml"][];
        functions?: external["resources/apps/models/apps_deployment_functions.yml"][];
        phase?: external["resources/apps/models/apps_deployment_phase.yml"];
        phase_last_updated_at?: string;
        progress?: external["resources/apps/models/apps_deployment_progress.yml"];
        services?: external["resources/apps/models/apps_deployment_service.yml"][];
        spec?: external["resources/apps/models/app_spec.yml"];
        static_sites?: external["resources/apps/models/apps_deployment_static_site.yml"][];
        tier_slug?: string;
        updated_at?: string;
        workers?: external["resources/apps/models/apps_deployment_worker.yml"][];
    };
    "resources/apps/models/apps_deployments_response.yml": {
        deployments?: external["resources/apps/models/apps_deployment.yml"][];
    } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
    "resources/apps/models/apps_domain_phase.yml": "UNKNOWN" | "PENDING" | "CONFIGURING" | "ACTIVE" | "ERROR";
    "resources/apps/models/apps_domain_progress.yml": {
        steps?: Record<string, never>[];
    };
    "resources/apps/models/apps_domain.yml": {
        id?: string;
        phase?: external["resources/apps/models/apps_domain_phase.yml"];
        progress?: external["resources/apps/models/apps_domain_progress.yml"];
        spec?: external["resources/apps/models/app_domain_spec.yml"];
        validations?: external["resources/apps/models/app_domain_validation.yml"][];
        rotate_validation_records?: boolean;
        certificate_expires_at?: string;
    };
    "resources/apps/models/apps_get_instance_size_response.yml": {
        instance_size?: external["resources/apps/models/apps_instance_size.yml"];
    };
    "resources/apps/models/apps_get_logs_response.yml": {
        historic_urls?: string[];
        live_url?: string;
    };
    "resources/apps/models/apps_get_tier_response.yml": {
        tier?: external["resources/apps/models/apps_tier.yml"];
    };
    "resources/apps/models/apps_git_source_spec.yml": {
        branch?: string;
        repo_clone_url?: string;
    };
    "resources/apps/models/apps_github_source_spec.yml": {
        branch?: string;
        deploy_on_push?: boolean;
        repo?: string;
    };
    "resources/apps/models/apps_gitlab_source_spec.yml": {
        branch?: string;
        deploy_on_push?: boolean;
        repo?: string;
    };
    "resources/apps/models/apps_image_source_spec.yml": {
        registry?: string;
        registry_type?: "DOCKER_HUB" | "DOCR";
        repository?: string;
        tag?: string;
    };
    "resources/apps/models/apps_instance_size.yml": {
        cpu_type?: external["resources/apps/models/instance_size_cpu_type.yml"];
        cpus?: string;
        memory_bytes?: string;
        name?: string;
        slug?: string;
        tier_downgrade_to?: string;
        tier_slug?: string;
        tier_upgrade_to?: string;
        usd_per_month?: string;
        usd_per_second?: string;
    };
    "resources/apps/models/apps_list_alerts_response.yml": {
        alerts?: external["resources/apps/models/app_alert.yml"][];
    };
    "resources/apps/models/apps_list_instance_sizes_response.yml": {
        discount_percent?: number;
        instance_sizes?: external["resources/apps/models/apps_instance_size.yml"][];
    };
    "resources/apps/models/apps_list_regions_response.yml": {
        regions?: external["resources/apps/models/apps_region.yml"][];
    };
    "resources/apps/models/apps_list_tiers_response.yml": {
        tiers?: external["resources/apps/models/apps_tier.yml"][];
    };
    "resources/apps/models/apps_region.yml": {
        continent?: string;
        data_centers?: readonly string[];
        default?: boolean;
        disabled?: boolean;
        flag?: string;
        label?: string;
        reason?: string;
        slug?: string;
    };
    "resources/apps/models/apps_response.yml": {
        apps?: external["resources/apps/models/app.yml"][];
    } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
    "resources/apps/models/apps_rollback_app_request.yml": {
        deployment_id?: string;
        skip_pin?: boolean;
    };
    "resources/apps/models/apps_string_match.yml": {
        exact?: string;
        prefix?: string;
        regex?: string;
    };
    "resources/apps/models/apps_tier.yml": {
        build_seconds?: string;
        egress_bandwidth_bytes?: string;
        name?: string;
        slug?: string;
        storage_bytes?: string;
    };
    "resources/apps/models/apps_update_app_request.yml": {
        spec: external["resources/apps/models/app_spec.yml"];
    };
    "resources/apps/models/instance_size_cpu_type.yml": "UNSPECIFIED" | "SHARED" | "DEDICATED";
    "resources/apps/parameters.yml": {
        accept?: "application/json" | "application/yaml";
        "content-type"?: "application/json" | "application/yaml";
        app_id: string;
        deployment_id: string;
        app_name?: string;
        id_app: string;
        slug_size: string;
        component: string;
        live_updates?: boolean;
        with_projects?: boolean;
        log_type: "UNSPECIFIED" | "BUILD" | "DEPLOY" | "RUN";
        time_wait?: string;
        slug_tier: string;
        alert_id: string;
    };
    "resources/apps/responses/all_tiers.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_list_tiers_response.yml"];
        };
    };
    "resources/apps/responses/apps_get.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/app_response.yml"];
        };
    };
    "resources/apps/responses/apps_validate_rollback.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                valid?: boolean;
                error?: external["resources/apps/models/app_rollback_validation_condition.yml"];
                warnings?: external["resources/apps/models/app_rollback_validation_condition.yml"][];
            };
        };
    };
    "resources/apps/responses/assign_alert_destinations.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_alert_response.yml"];
        };
    };
    "resources/apps/responses/cancel_deployment.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_deployment_response.yml"];
        };
    };
    "resources/apps/responses/delete_app.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_delete_app_response.yml"];
        };
    };
    "resources/apps/responses/examples.yml": unknown;
    "resources/apps/responses/existing_deployments.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_deployments_response.yml"];
        };
    };
    "resources/apps/responses/get_instance.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_get_instance_size_response.yml"];
        };
    };
    "resources/apps/responses/get_metrics_bandwidth_usage.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/app_metrics_bandwidth_usage.yml"];
        };
    };
    "resources/apps/responses/get_tier.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_get_tier_response.yml"];
        };
    };
    "resources/apps/responses/list_alerts.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_list_alerts_response.yml"];
        };
    };
    "resources/apps/responses/list_apps.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_response.yml"];
        };
    };
    "resources/apps/responses/list_deployment.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_deployment_response.yml"];
        };
    };
    "resources/apps/responses/list_instance.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_list_instance_sizes_response.yml"];
        };
    };
    "resources/apps/responses/list_logs.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_get_logs_response.yml"];
        };
    };
    "resources/apps/responses/list_metrics_bandwidth_usage.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/app_metrics_bandwidth_usage.yml"];
        };
    };
    "resources/apps/responses/list_regions.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_list_regions_response.yml"];
        };
    };
    "resources/apps/responses/new_app_deployment.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/apps_deployment_response.yml"];
        };
    };
    "resources/apps/responses/new_app.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/app_response.yml"];
        };
    };
    "resources/apps/responses/propose_app.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/app_propose_response.yml"];
        };
    };
    "resources/apps/responses/update_app.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/apps/models/app_response.yml"];
        };
    };
    "resources/billing/balance_get.yml": {
        responses: {
            200: external["resources/billing/responses/balance.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/billing/billingHistory_list.yml": {
        responses: {
            200: external["resources/billing/responses/billing_history.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/billing/invoices_get_byUUID.yml": {
        parameters: {
            path: {
                invoice_uuid: external["resources/billing/parameters.yml"]["invoice_uuid"];
            };
        };
        responses: {
            200: external["resources/billing/responses/invoice.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/billing/invoices_get_csvByUUID.yml": {
        parameters: {
            path: {
                invoice_uuid: external["resources/billing/parameters.yml"]["invoice_uuid"];
            };
        };
        responses: {
            200: external["resources/billing/responses/invoice_csv.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/billing/invoices_get_pdfByUUID.yml": {
        parameters: {
            path: {
                invoice_uuid: external["resources/billing/parameters.yml"]["invoice_uuid"];
            };
        };
        responses: {
            200: external["resources/billing/responses/invoice_pdf.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/billing/invoices_get_summaryByUUID.yml": {
        parameters: {
            path: {
                invoice_uuid: external["resources/billing/parameters.yml"]["invoice_uuid"];
            };
        };
        responses: {
            200: external["resources/billing/responses/invoice_summary.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/billing/invoices_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/billing/responses/invoices.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/billing/models/balance.yml": {
        month_to_date_balance?: string;
        account_balance?: string;
        month_to_date_usage?: string;
        generated_at?: string;
    };
    "resources/billing/models/billing_address.yml": {
        address_line1?: string;
        address_line2?: string;
        city?: string;
        region?: string;
        postal_code?: string;
        country_iso2_code?: string;
        created_at?: string;
        updated_at?: string;
    };
    "resources/billing/models/billing_history.yml": {
        description?: string;
        amount?: string;
        invoice_id?: string;
        invoice_uuid?: string;
        date?: string;
        type?: "ACHFailure" | "Adjustment" | "AttemptFailed" | "Chargeback" | "Credit" | "CreditExpiration" | "Invoice" | "Payment" | "Refund" | "Reversal";
    };
    "resources/billing/models/invoice_item.yml": {
        product?: string;
        resource_uuid?: string;
        resource_id?: string;
        group_description?: string;
        description?: string;
        amount?: string;
        duration?: string;
        duration_unit?: string;
        start_time?: string;
        end_time?: string;
        project_name?: string;
    };
    "resources/billing/models/invoice_preview.yml": {
        invoice_uuid?: string;
        amount?: string;
        invoice_period?: string;
        updated_at?: string;
    };
    "resources/billing/models/invoice_summary.yml": {
        invoice_uuid?: string;
        billing_period?: string;
        amount?: string;
        user_name?: string;
        user_billing_address?: external["resources/billing/models/billing_address.yml"];
        user_company?: string;
        user_email?: string;
        product_charges?: external["resources/billing/models/product_usage_charges.yml"];
        overages?: external["resources/billing/models/simple_charge.yml"];
        taxes?: external["resources/billing/models/simple_charge.yml"];
        credits_and_adjustments?: external["resources/billing/models/simple_charge.yml"];
    };
    "resources/billing/models/product_charge_item.yml": {
        amount?: string;
        name?: string;
        count?: string;
    };
    "resources/billing/models/product_usage_charges.yml": {
        name?: string;
        amount?: string;
        items?: external["resources/billing/models/product_charge_item.yml"][];
    };
    "resources/billing/models/simple_charge.yml": {
        name?: string;
        amount?: string;
    };
    "resources/billing/parameters.yml": {
        invoice_uuid: string;
    };
    "resources/billing/responses/balance.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/billing/models/balance.yml"];
        };
    };
    "resources/billing/responses/billing_history.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                billing_history?: external["resources/billing/models/billing_history.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta_optional_total.yml"];
        };
    };
    "resources/billing/responses/invoice_csv.yml": {
        headers: {
            "content-disposition": external["shared/headers.yml"]["content-disposition"];
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "text/csv": string;
        };
    };
    "resources/billing/responses/invoice_pdf.yml": {
        headers: {
            "content-disposition": external["shared/headers.yml"]["content-disposition"];
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/pdf": string;
        };
    };
    "resources/billing/responses/invoice_summary.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/billing/models/invoice_summary.yml"];
        };
    };
    "resources/billing/responses/invoice.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                invoice_items?: external["resources/billing/models/invoice_item.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/billing/responses/invoices.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                invoices?: external["resources/billing/models/invoice_preview.yml"][];
                invoice_preview?: external["resources/billing/models/invoice_preview.yml"];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/cdn/cdn_create_endpoint.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/cdn/models/cdn_endpoint.yml"];
            };
        };
        responses: {
            201: external["resources/cdn/responses/existing_endpoint.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/cdn/cdn_delete_endpoint.yml": {
        parameters: {
            path: {
                cdn_id: external["resources/cdn/parameters.yml"]["cdn_endpoint_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/cdn/cdn_get_endpoint.yml": {
        parameters: {
            path: {
                cdn_id: external["resources/cdn/parameters.yml"]["cdn_endpoint_id"];
            };
        };
        responses: {
            200: external["resources/cdn/responses/existing_endpoint.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/cdn/cdn_list_endpoints.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/cdn/responses/all_cdn_endpoints.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/cdn/cdn_purge_cache.yml": {
        parameters: {
            path: {
                cdn_id: external["resources/cdn/parameters.yml"]["cdn_endpoint_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/cdn/models/purge_cache.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/cdn/cdn_update_endpoint.yml": {
        parameters: {
            path: {
                cdn_id: external["resources/cdn/parameters.yml"]["cdn_endpoint_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/cdn/models/update_endpoint.yml"];
            };
        };
        responses: {
            200: external["resources/cdn/responses/existing_endpoint.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/cdn/models/cdn_endpoint.yml": {
        id?: string;
        origin: string;
        endpoint?: string;
        ttl?: 60 | 600 | 3600 | 86400 | 604800;
        certificate_id?: string;
        custom_domain?: string;
        created_at?: string;
    };
    "resources/cdn/models/purge_cache.yml": {
        files: string[];
    };
    "resources/cdn/models/update_endpoint.yml": {
        ttl?: 60 | 600 | 3600 | 86400 | 604800;
        certificate_id?: string;
        custom_domain?: string;
    };
    "resources/cdn/parameters.yml": {
        cdn_endpoint_id: string;
    };
    "resources/cdn/responses/all_cdn_endpoints.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                endpoints?: external["resources/cdn/models/cdn_endpoint.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/cdn/responses/existing_endpoint.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                endpoint?: external["resources/cdn/models/cdn_endpoint.yml"];
            };
        };
    };
    "resources/certificates/certificates_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/certificates/models/certificate_create.yml"]["certificate_request_lets_encrypt"] | external["resources/certificates/models/certificate_create.yml"]["certificate_request_custom"];
            };
        };
        responses: {
            201: external["resources/certificates/responses/new_certificate.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/certificates/certificates_delete.yml": {
        parameters: {
            path: {
                certificate_id: external["resources/certificates/parameters.yml"]["certificate_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/certificates/certificates_get.yml": {
        parameters: {
            path: {
                certificate_id: external["resources/certificates/parameters.yml"]["certificate_id"];
            };
        };
        responses: {
            200: external["resources/certificates/responses/existing_certificate.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/certificates/certificates_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/certificates/responses/all_certificates.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/certificates/models/certificate_create.yml": {
        certificate_create_base: {
            name: string;
            type?: "custom" | "lets_encrypt";
        };
        certificate_request_custom: external["resources/certificates/models/certificate_create.yml"]["certificate_create_base"] & {
            private_key: string;
            leaf_certificate: string;
            certificate_chain?: string;
        };
        certificate_request_lets_encrypt: external["resources/certificates/models/certificate_create.yml"]["certificate_create_base"] & {
            dns_names: string[];
        };
    };
    "resources/certificates/models/certificate.yml": {
        id?: string;
        name?: string;
        not_after?: string;
        sha1_fingerprint?: string;
        created_at?: string;
        dns_names?: string[];
        state?: "pending" | "verified" | "error";
        type?: "custom" | "lets_encrypt";
    };
    "resources/certificates/parameters.yml": {
        certificate_id: string;
    };
    "resources/certificates/responses/all_certificates.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                certificates?: external["resources/certificates/models/certificate.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/certificates/responses/examples.yml": unknown;
    "resources/certificates/responses/existing_certificate.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                certificate?: external["resources/certificates/models/certificate.yml"];
            };
        };
    };
    "resources/certificates/responses/new_certificate.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                certificate?: external["resources/certificates/models/certificate.yml"];
            };
        };
    };
    "resources/databases/databases_add_connectionPool.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/connection_pool.yml"];
            };
        };
        responses: {
            201: external["resources/databases/responses/connection_pool.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_add_user.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/database_user.yml"] & {
                    readonly?: boolean;
                };
            };
        };
        responses: {
            201: external["resources/databases/responses/user.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_add.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/database.yml"];
            };
        };
        responses: {
            201: external["resources/databases/responses/database.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_create_cluster.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/database_cluster.yml"] & {
                    backup_restore?: external["resources/databases/models/database_backup.yml"];
                };
            };
        };
        responses: {
            201: external["resources/databases/responses/database_cluster.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_create_replica.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody?: {
            content: {
                "application/json": WithRequired<external["resources/databases/models/database_replica.yml"], "name" | "size">;
            };
        };
        responses: {
            201: external["resources/databases/responses/database_replica.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_delete_connectionPool.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                pool_name: external["resources/databases/parameters.yml"]["pool_name"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_delete_onlineMigration.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                migration_id: external["resources/databases/parameters.yml"]["migration_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_delete_user.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                username: external["resources/databases/parameters.yml"]["username"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_delete.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                database_name: external["resources/databases/parameters.yml"]["database_name"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_destroy_cluster.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_destroy_replica.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                replica_name: external["resources/databases/parameters.yml"]["replica_name"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_ca.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/ca.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_cluster.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/database_cluster.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_config.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/database_config.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_connectionPool.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                pool_name: external["resources/databases/parameters.yml"]["pool_name"];
            };
        };
        responses: {
            200: external["resources/databases/responses/connection_pool.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_evictionPolicy.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/eviction_policy_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_migrationStatus.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/online_migration.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_replica.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                replica_name: external["resources/databases/parameters.yml"]["replica_name"];
            };
        };
        responses: {
            200: external["resources/databases/responses/database_replica.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_sql_mode.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/sql_mode.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get_user.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                username: external["resources/databases/parameters.yml"]["username"];
            };
        };
        responses: {
            200: external["resources/databases/responses/user.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_get.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                database_name: external["resources/databases/parameters.yml"]["database_name"];
            };
        };
        responses: {
            200: external["resources/databases/responses/database.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list_backups.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/database_backups.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list_clusters.yml": {
        parameters: {
            query?: {
                tag_name?: external["resources/databases/parameters.yml"]["tag_name"];
            };
        };
        responses: {
            200: external["resources/databases/responses/database_clusters.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list_connectionPools.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/connection_pools.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list_firewall_rules.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/firewall_rules.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list_options.yml": {
        responses: {
            200: external["resources/databases/responses/options.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list_replicas.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/database_replicas.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list_users.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/users.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_list.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        responses: {
            200: external["resources/databases/responses/databases.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_patch_config.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/database_config.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_promote_replica.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                replica_name: external["resources/databases/parameters.yml"]["replica_name"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_reset_auth.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                username: external["resources/databases/parameters.yml"]["username"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    mysql_settings?: external["resources/databases/models/mysql_settings.yml"];
                };
            };
        };
        responses: {
            200: external["resources/databases/responses/user.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_clusterSize.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/database_cluster_resize.yml"];
            };
        };
        responses: {
            202: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_connectionPool.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
                pool_name: external["resources/databases/parameters.yml"]["pool_name"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/connection_pool_update.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_evictionPolicy.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    eviction_policy: external["resources/databases/models/eviction_policy_model.yml"];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_firewall_rules.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    rules?: external["resources/databases/models/firewall_rule.yml"][];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_maintenanceWindow.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/database_maintenance_window.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_onlineMigration.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/source_database.yml"];
            };
        };
        responses: {
            200: external["resources/databases/responses/online_migration.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_region.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    region: string;
                };
            };
        };
        responses: {
            202: external["shared/responses/accepted.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_update_sql_mode.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/sql_mode.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/databases_upgrade_major_version.yml": {
        parameters: {
            path: {
                database_cluster_uuid: external["resources/databases/parameters.yml"]["database_cluster_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/databases/models/version.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/databases/models/backup.yml": {
        created_at: string;
        size_gigabytes: number;
    };
    "resources/databases/models/ca.yml": {
        certificate: string;
    };
    "resources/databases/models/connection_pool_update.yml": {
        mode: string;
        size: number;
        db: string;
        user?: string;
    };
    "resources/databases/models/connection_pool.yml": {
        name: string;
        mode: string;
        size: number;
        db: string;
        user?: string;
        connection?: external["resources/databases/models/database_connection.yml"];
        private_connection?: external["resources/databases/models/database_connection.yml"];
    };
    "resources/databases/models/connection_pools.yml": {
        pools?: readonly external["resources/databases/models/connection_pool.yml"][];
    };
    "resources/databases/models/database_backup.yml": {
        database_name: string;
        backup_created_at?: string;
    };
    "resources/databases/models/database_cluster_resize.yml": {
        size: string;
        num_nodes: number;
    };
    "resources/databases/models/database_cluster.yml": {
        id?: string;
        name: string;
        engine: "pg" | "mysql" | "redis" | "mongodb";
        version?: string;
        semantic_version?: string;
        num_nodes: number;
        size: string;
        region: string;
        status?: "creating" | "online" | "resizing" | "migrating" | "forking";
        created_at?: string;
        private_network_uuid?: string;
        tags?: string[] | null;
        db_names?: readonly string[] | null;
        connection?: external["resources/databases/models/database_connection.yml"];
        private_connection?: external["resources/databases/models/database_connection.yml"];
        users?: readonly external["resources/databases/models/database_user.yml"][] | null;
        maintenance_window?: external["resources/databases/models/database_maintenance_window.yml"];
        project_id?: string;
        rules?: external["resources/databases/models/firewall_rule.yml"][];
        version_end_of_life?: string;
        version_end_of_availability?: string;
    };
    "resources/databases/models/database_config.yml": {
        config?: external["resources/databases/models/mysql.yml"] | external["resources/databases/models/postgres.yml"] | external["resources/databases/models/redis.yml"];
    };
    "resources/databases/models/database_connection.yml": {
        uri?: string;
        database?: string;
        host?: string;
        port?: number;
        user?: string;
        password?: string;
        ssl?: boolean;
    };
    "resources/databases/models/database_layout_option.yml": {
        num_nodes?: number;
        sizes?: readonly string[];
    };
    "resources/databases/models/database_layout_options.yml": {
        layouts?: readonly external["resources/databases/models/database_layout_option.yml"][];
    };
    "resources/databases/models/database_maintenance_window.yml": {
        day: string;
        hour: string;
        pending?: boolean;
        description?: readonly string[];
    } | null;
    "resources/databases/models/database_region_options.yml": {
        regions?: readonly string[];
    };
    "resources/databases/models/database_replica.yml": {
        id?: string;
        name: string;
        region?: string;
        size?: string;
        status?: "creating" | "online" | "resizing" | "migrating" | "forking";
        tags?: string[];
        created_at?: string;
        private_network_uuid?: string;
        connection?: external["resources/databases/models/database_connection.yml"];
        private_connection?: external["resources/databases/models/database_connection.yml"];
    };
    "resources/databases/models/database_user.yml": {
        name: string;
        role?: "primary" | "normal";
        password?: string;
        mysql_settings?: external["resources/databases/models/mysql_settings.yml"];
    };
    "resources/databases/models/database_version_availabilities.yml": external["resources/databases/models/database_version_availability.yml"][];
    "resources/databases/models/database_version_availability.yml": {
        end_of_life?: string;
        end_of_availability?: string;
        version?: string;
    };
    "resources/databases/models/database_version_options.yml": {
        versions?: readonly string[];
    };
    "resources/databases/models/database.yml": {
        name: string;
    };
    "resources/databases/models/eviction_policy_model.yml": "noeviction" | "allkeys_lru" | "allkeys_random" | "volatile_lru" | "volatile_random" | "volatile_ttl";
    "resources/databases/models/firewall_rule.yml": {
        uuid?: string;
        cluster_uuid?: string;
        type: "droplet" | "k8s" | "ip_addr" | "tag" | "app";
        value: string;
        created_at?: string;
    };
    "resources/databases/models/mysql_settings.yml": {
        auth_plugin: "mysql_native_password" | "caching_sha2_password";
    };
    "resources/databases/models/mysql.yml": {
        backup_hour?: number;
        backup_minute?: number;
        sql_mode?: string;
        connect_timeout?: number;
        default_time_zone?: string;
        group_concat_max_len?: number;
        information_schema_stats_expiry?: number;
        innodb_ft_min_token_size?: number;
        innodb_ft_server_stopword_table?: string;
        innodb_lock_wait_timeout?: number;
        innodb_log_buffer_size?: number;
        innodb_online_alter_log_max_size?: number;
        innodb_print_all_deadlocks?: boolean;
        innodb_rollback_on_timeout?: boolean;
        interactive_timeout?: number;
        internal_tmp_mem_storage_engine?: "TempTable" | "MEMORY";
        net_read_timeout?: number;
        net_write_timeout?: number;
        sql_require_primary_key?: boolean;
        wait_timeout?: number;
        max_allowed_packet?: number;
        max_heap_table_size?: number;
        sort_buffer_size?: number;
        tmp_table_size?: number;
        slow_query_log?: boolean;
        long_query_time?: number;
        binlog_retention_period?: number;
    };
    "resources/databases/models/online_migration.yml": {
        id?: string;
        status?: "running" | "canceled" | "error" | "done";
        created_at?: string;
    };
    "resources/databases/models/options.yml": {
        options?: {
            mongodb?: external["resources/databases/models/database_region_options.yml"] & external["resources/databases/models/database_version_options.yml"] & external["resources/databases/models/database_layout_options.yml"];
            pg?: external["resources/databases/models/database_region_options.yml"] & external["resources/databases/models/database_version_options.yml"] & external["resources/databases/models/database_layout_options.yml"];
            mysql?: external["resources/databases/models/database_region_options.yml"] & external["resources/databases/models/database_version_options.yml"] & external["resources/databases/models/database_layout_options.yml"];
            redis?: external["resources/databases/models/database_region_options.yml"] & external["resources/databases/models/database_version_options.yml"] & external["resources/databases/models/database_layout_options.yml"];
        };
        version_availability?: {
            pg?: external["resources/databases/models/database_version_availabilities.yml"];
            mysql?: external["resources/databases/models/database_version_availabilities.yml"];
            redis?: external["resources/databases/models/database_version_availabilities.yml"];
            mongodb?: external["resources/databases/models/database_version_availabilities.yml"];
        };
    };
    "resources/databases/models/pgbouncer.yml": {
        server_reset_query_always?: boolean;
        ignore_startup_parameters?: ("extra_float_digits" | "search_path")[];
        min_pool_size?: number;
        server_lifetime?: number;
        server_idle_timeout?: number;
        autodb_pool_size?: number;
        autodb_pool_mode?: "session" | "transaction" | "statement";
        autodb_max_db_connections?: number;
        autodb_idle_timeout?: number;
    };
    "resources/databases/models/postgres.yml": {
        autovacuum_freeze_max_age?: number;
        autovacuum_max_workers?: number;
        autovacuum_naptime?: number;
        autovacuum_vacuum_threshold?: number;
        autovacuum_analyze_threshold?: number;
        autovacuum_vacuum_scale_factor?: number;
        autovacuum_analyze_scale_factor?: number;
        autovacuum_vacuum_cost_delay?: number;
        autovacuum_vacuum_cost_limit?: number;
        backup_hour?: number;
        backup_minute?: number;
        bgwriter_delay?: number;
        bgwriter_flush_after?: number;
        bgwriter_lru_maxpages?: number;
        bgwriter_lru_multiplier?: number;
        deadlock_timeout?: number;
        default_toast_compression?: "lz4" | "pglz";
        idle_in_transaction_session_timeout?: number;
        jit?: boolean;
        log_autovacuum_min_duration?: number;
        log_error_verbosity?: "TERSE" | "DEFAULT" | "VERBOSE";
        log_line_prefix?: "pid=%p,user=%u,db=%d,app=%a,client=%h" | "%m [%p] %q[user=%u,db=%d,app=%a]" | "%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h";
        log_min_duration_statement?: number;
        max_files_per_process?: number;
        max_prepared_transactions?: number;
        max_pred_locks_per_transaction?: number;
        max_locks_per_transaction?: number;
        max_stack_depth?: number;
        max_standby_archive_delay?: number;
        max_standby_streaming_delay?: number;
        max_replication_slots?: number;
        max_logical_replication_workers?: number;
        max_parallel_workers?: number;
        max_parallel_workers_per_gather?: number;
        max_worker_processes?: number;
        "pg_partman_bgw.role"?: string;
        "pg_partman_bgw.interval"?: number;
        "pg_stat_statements.track"?: "all" | "top" | "none";
        temp_file_limit?: number;
        timezone?: string;
        track_activity_query_size?: number;
        track_commit_timestamp?: "off" | "on";
        track_functions?: "all" | "pl" | "none";
        track_io_timing?: "off" | "on";
        max_wal_senders?: number;
        wal_sender_timeout?: number;
        wal_writer_delay?: number;
        shared_buffers_percentage?: number;
        pgbouncer?: external["resources/databases/models/pgbouncer.yml"];
        work_mem?: number;
        timescaledb?: external["resources/databases/models/timescaledb.yml"];
        synchronous_replication?: "off" | "quorum";
        stat_monitor_enable?: boolean;
    };
    "resources/databases/models/redis.yml": {
        redis_maxmemory_policy?: external["resources/databases/models/eviction_policy_model.yml"];
        redis_pubsub_client_output_buffer_limit?: number;
        redis_number_of_databases?: number;
        redis_io_threads?: number;
        redis_lfu_log_factor?: number;
        redis_lfu_decay_time?: number;
        redis_ssl?: boolean;
        redis_timeout?: number;
        redis_notify_keyspace_events?: string;
        redis_persistence?: "off" | "rdb";
        redis_acl_channels_default?: "allchannels" | "resetchannels";
    };
    "resources/databases/models/source_database.yml": {
        source?: {
            host?: string;
            port?: number;
            dbname?: string;
            username?: string;
            password?: string;
        };
        disable_ssl?: boolean;
    };
    "resources/databases/models/sql_mode.yml": {
        sql_mode: string;
    };
    "resources/databases/models/timescaledb.yml": {
        max_background_workers?: number;
    };
    "resources/databases/models/version.yml": {
        version?: external["resources/databases/models/database_cluster.yml"]["version"];
    };
    "resources/databases/parameters.yml": {
        database_cluster_uuid: string;
        database_name: string;
        replica_name: string;
        username: string;
        tag_name?: string;
        pool_name: string;
        migration_id: string;
    };
    "resources/databases/responses/ca.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                ca: external["resources/databases/models/ca.yml"];
            };
        };
    };
    "resources/databases/responses/connection_pool.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                pool: external["resources/databases/models/connection_pool.yml"];
            };
        };
    };
    "resources/databases/responses/connection_pools.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/databases/models/connection_pools.yml"];
        };
    };
    "resources/databases/responses/database_backups.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                backups: external["resources/databases/models/backup.yml"][];
            };
        };
    };
    "resources/databases/responses/database_cluster.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                database: external["resources/databases/models/database_cluster.yml"];
            };
        };
    };
    "resources/databases/responses/database_clusters.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                databases?: external["resources/databases/models/database_cluster.yml"][];
            };
        };
    };
    "resources/databases/responses/database_config.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                config: external["resources/databases/models/mysql.yml"] | external["resources/databases/models/postgres.yml"] | external["resources/databases/models/redis.yml"];
            };
        };
    };
    "resources/databases/responses/database_replica.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                replica?: external["resources/databases/models/database_replica.yml"];
            };
        };
    };
    "resources/databases/responses/database_replicas.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                replicas?: external["resources/databases/models/database_replica.yml"][];
            };
        };
    };
    "resources/databases/responses/database.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                db: external["resources/databases/models/database.yml"];
            };
        };
    };
    "resources/databases/responses/databases.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                dbs?: external["resources/databases/models/database.yml"][];
            };
        };
    };
    "resources/databases/responses/eviction_policy_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                eviction_policy: external["resources/databases/models/eviction_policy_model.yml"];
            };
        };
    };
    "resources/databases/responses/firewall_rules.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                rules?: external["resources/databases/models/firewall_rule.yml"][];
            };
        };
    };
    "resources/databases/responses/online_migration.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/databases/models/online_migration.yml"];
        };
    };
    "resources/databases/responses/options.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/databases/models/options.yml"];
        };
    };
    "resources/databases/responses/sql_mode.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/databases/models/sql_mode.yml"];
        };
    };
    "resources/databases/responses/user.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                user: external["resources/databases/models/database_user.yml"];
            };
        };
    };
    "resources/databases/responses/users.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                users?: external["resources/databases/models/database_user.yml"][];
            };
        };
    };
    "resources/domains/domains_create_record.yml": {
        parameters: {
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/domains/models/domain_record_types.yml"]["domain_record_a"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_aaaa"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_caa"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_cname"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_mx"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_ns"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_soa"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_srv"] | external["resources/domains/models/domain_record_types.yml"]["domain_record_txt"];
            };
        };
        responses: {
            201: external["resources/domains/responses/created_domain_record.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_create.yml": {
        requestBody?: {
            content: {
                "application/json": external["resources/domains/models/domain.yml"];
            };
        };
        responses: {
            201: external["resources/domains/responses/create_domain_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_delete_record.yml": {
        parameters: {
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
                domain_record_id: external["resources/domains/parameters.yml"]["domain_record_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_delete.yml": {
        parameters: {
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_get_record.yml": {
        parameters: {
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
                domain_record_id: external["resources/domains/parameters.yml"]["domain_record_id"];
            };
        };
        responses: {
            200: external["resources/domains/responses/domain_record.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_get.yml": {
        parameters: {
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
            };
        };
        responses: {
            200: external["resources/domains/responses/existing_domain.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_list_records.yml": {
        parameters: {
            query?: {
                name?: external["resources/domains/parameters.yml"]["domain_name_query"];
                type?: external["resources/domains/parameters.yml"]["domain_type_query"];
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
            };
        };
        responses: {
            200: external["resources/domains/responses/all_domain_records_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/domains/responses/all_domains_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_patch_record.yml": {
        parameters: {
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
                domain_record_id: external["resources/domains/parameters.yml"]["domain_record_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/domains/models/domain_record.yml"];
            };
        };
        responses: {
            200: external["resources/domains/responses/domain_record.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/domains_update_record.yml": {
        parameters: {
            path: {
                domain_name: external["resources/domains/parameters.yml"]["domain_name"];
                domain_record_id: external["resources/domains/parameters.yml"]["domain_record_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/domains/models/domain_record.yml"];
            };
        };
        responses: {
            200: external["resources/domains/responses/domain_record.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/domains/examples.yml": unknown;
    "resources/domains/models/domain_record_types.yml": {
        domain_record_a: external["resources/domains/models/domain_record.yml"];
        domain_record_aaaa: external["resources/domains/models/domain_record.yml"];
        domain_record_caa: external["resources/domains/models/domain_record.yml"];
        domain_record_cname: external["resources/domains/models/domain_record.yml"];
        domain_record_mx: external["resources/domains/models/domain_record.yml"];
        domain_record_ns: external["resources/domains/models/domain_record.yml"];
        domain_record_soa: external["resources/domains/models/domain_record.yml"];
        domain_record_srv: external["resources/domains/models/domain_record.yml"];
        domain_record_txt: external["resources/domains/models/domain_record.yml"];
    };
    "resources/domains/models/domain_record.yml": {
        id?: number;
        type: string;
        name?: string;
        data?: string;
        priority?: number | null;
        port?: number | null;
        ttl?: number;
        weight?: number | null;
        flags?: number | null;
        tag?: string | null;
    };
    "resources/domains/models/domain.yml": {
        name?: string;
        ip_address?: string;
        ttl?: number | null;
        zone_file?: string | null;
    };
    "resources/domains/parameters.yml": {
        domain_name: string;
        domain_record_id: number;
        domain_name_query?: string;
        domain_type_query?: "A" | "AAAA" | "CAA" | "CNAME" | "MX" | "NS" | "SOA" | "SRV" | "TXT";
    };
    "resources/domains/responses/all_domain_records_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                domain_records?: external["resources/domains/models/domain_record.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/domains/responses/all_domains_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                domains: external["resources/domains/models/domain.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/domains/responses/create_domain_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                domain?: external["resources/domains/models/domain.yml"];
            };
        };
    };
    "resources/domains/responses/created_domain_record.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                domain_record?: external["resources/domains/models/domain_record.yml"];
            };
        };
    };
    "resources/domains/responses/domain_record.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                domain_record?: external["resources/domains/models/domain_record.yml"];
            };
        };
    };
    "resources/domains/responses/existing_domain.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                domain?: external["resources/domains/models/domain.yml"];
            };
        };
    };
    "resources/droplets/dropletActions_get.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
                action_id: external["resources/actions/parameters.yml"]["action_id"];
            };
        };
        responses: {
            200: external["resources/actions/responses/action.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/dropletActions_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/all_droplet_actions.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/dropletActions_post_byTag.yml": {
        parameters: {
            query?: {
                tag_name?: external["resources/droplets/parameters.yml"]["droplet_tag_name"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] | external["resources/droplets/models/droplet_actions.yml"]["droplet_action_snapshot"];
            };
        };
        responses: {
            201: external["resources/droplets/responses/droplet_actions_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/dropletActions_post.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] | external["resources/droplets/models/droplet_actions.yml"]["droplet_action_restore"] | external["resources/droplets/models/droplet_actions.yml"]["droplet_action_resize"] | external["resources/droplets/models/droplet_actions.yml"]["droplet_action_rebuild"] | external["resources/droplets/models/droplet_actions.yml"]["droplet_action_rename"] | external["resources/droplets/models/droplet_actions.yml"]["droplet_action_change_kernel"] | external["resources/droplets/models/droplet_actions.yml"]["droplet_action_snapshot"];
            };
        };
        responses: {
            201: external["resources/droplets/responses/droplet_action.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_create.yml": {
        requestBody?: {
            content: {
                "application/json": external["resources/droplets/models/droplet_single_create.yml"] | external["resources/droplets/models/droplet_multi_create.yml"];
            };
        };
        responses: {
            202: external["resources/droplets/responses/droplet_create.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_destroy_byTag.yml": {
        parameters: {
            query: {
                tag_name: external["resources/droplets/parameters.yml"]["droplet_delete_tag_name"];
            };
        };
        responses: {
            204: external["shared/responses/no_content_with_content_type.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_destroy_retryWithAssociatedResources.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            202: external["shared/responses/accepted.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            409: external["shared/responses/conflict.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_destroy_withAssociatedResourcesDangerous.yml": {
        parameters: {
            header: {
                "X-Dangerous": external["resources/droplets/parameters.yml"]["x_dangerous"];
            };
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            202: external["shared/responses/accepted.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_destroy_withAssociatedResourcesSelective.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/droplets/models/selective_destroy_associated_resource.yml"];
            };
        };
        responses: {
            202: external["shared/responses/accepted.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_destroy.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content_with_content_type.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_get_destroyAssociatedResourcesStatus.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/associated_resources_status.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_get.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/existing_droplet.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list_associatedResources.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/associated_resources_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list_backups.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/all_droplet_backups.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list_firewalls.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/all_firewalls.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list_kernels.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/all_kernels.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list_neighbors.yml": {
        parameters: {
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/neighbor_droplets.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list_neighborsIds.yml": {
        responses: {
            200: external["resources/droplets/responses/droplet_neighbors_ids.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list_snapshots.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                droplet_id: external["resources/droplets/parameters.yml"]["droplet_id"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/all_droplet_snapshots.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/droplets_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
                tag_name?: external["resources/droplets/parameters.yml"]["droplet_tag_name"];
                name?: external["resources/droplets/parameters.yml"]["droplet_name"];
            };
        };
        responses: {
            200: external["resources/droplets/responses/all_droplets.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/droplets/examples.yml": unknown;
    "resources/droplets/models/associated_resource_status.yml": {
        droplet?: external["resources/droplets/models/destroyed_associated_resource.yml"];
        resources?: {
            reserved_ips?: external["resources/droplets/models/destroyed_associated_resource.yml"][];
            floating_ips?: external["resources/droplets/models/destroyed_associated_resource.yml"][];
            snapshots?: external["resources/droplets/models/destroyed_associated_resource.yml"][];
            volumes?: external["resources/droplets/models/destroyed_associated_resource.yml"][];
            volume_snapshots?: external["resources/droplets/models/destroyed_associated_resource.yml"][];
        };
        completed_at?: string;
        failures?: number;
    };
    "resources/droplets/models/associated_resource.yml": {
        id?: string;
        name?: string;
        cost?: string;
    };
    "resources/droplets/models/destroyed_associated_resource.yml": {
        id?: string;
        name?: string;
        destroyed_at?: string;
        error_message?: string;
    };
    "resources/droplets/models/droplet_actions.yml": {
        droplet_action: {
            type: "enable_backups" | "disable_backups" | "reboot" | "power_cycle" | "shutdown" | "power_off" | "power_on" | "restore" | "password_reset" | "resize" | "rebuild" | "rename" | "change_kernel" | "enable_ipv6" | "snapshot";
        };
        droplet_action_restore: external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] & {
            image?: number;
        };
        droplet_action_resize: external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] & {
            disk?: boolean;
            size?: string;
        };
        droplet_action_rebuild: external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] & ({
            image?: string | number;
        });
        droplet_action_rename: external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] & {
            name?: string;
        };
        droplet_action_change_kernel: external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] & {
            kernel?: number;
        };
        droplet_action_snapshot: external["resources/droplets/models/droplet_actions.yml"]["droplet_action"] & {
            name?: string;
        };
    };
    "resources/droplets/models/droplet_create.yml": {
        region?: string;
        size: string;
        image: string | number;
        ssh_keys?: (string | number)[];
        backups?: boolean;
        ipv6?: boolean;
        monitoring?: boolean;
        tags?: string[] | null;
        user_data?: string;
        private_networking?: boolean;
        volumes?: string[];
        vpc_uuid?: string;
        with_droplet_agent?: boolean;
    };
    "resources/droplets/models/droplet_multi_create.yml": {
        names: string[];
    } & external["resources/droplets/models/droplet_create.yml"];
    "resources/droplets/models/droplet_single_create.yml": {
        name: string;
    } & external["resources/droplets/models/droplet_create.yml"];
    "resources/droplets/models/droplet_snapshot.yml": {
        id: number;
    } & external["resources/snapshots/models/snapshots_base.yml"] & ({
        type: "snapshot" | "backup";
    });
    "resources/droplets/models/droplet.yml": {
        id: number;
        name: string;
        memory: number;
        vcpus: number;
        disk: number;
        locked: boolean;
        status: "new" | "active" | "off" | "archive";
        kernel?: external["resources/droplets/models/kernel.yml"];
        created_at: string;
        features: string[];
        backup_ids: number[];
        next_backup_window: {
            start?: string;
            end?: string;
        } | null;
        snapshot_ids: number[];
        image: external["resources/images/models/image.yml"];
        volume_ids: string[];
        size: external["resources/sizes/models/size.yml"];
        size_slug: string;
        networks: {
            v4?: external["resources/droplets/models/network_v4.yml"][];
            v6?: external["resources/droplets/models/network_v6.yml"][];
        };
        region: external["resources/regions/models/region.yml"];
        tags: string[];
        vpc_uuid?: string;
    };
    "resources/droplets/models/kernel.yml": {
        id?: number;
        name?: string;
        version?: string;
    } | null;
    "resources/droplets/models/neighbor_ids.yml": {
        neighbor_ids?: number[][];
    };
    "resources/droplets/models/network_v4.yml": {
        ip_address?: string;
        netmask?: string;
        gateway?: string;
        type?: "public" | "private";
    };
    "resources/droplets/models/network_v6.yml": {
        ip_address?: string;
        netmask?: number;
        gateway?: string;
        type?: "public";
    };
    "resources/droplets/models/selective_destroy_associated_resource.yml": {
        floating_ips?: string[];
        reserved_ips?: string[];
        snapshots?: string[];
        volumes?: string[];
        volume_snapshots?: string[];
    };
    "resources/droplets/parameters.yml": {
        droplet_id: number;
        droplet_tag_name?: string;
        droplet_delete_tag_name: string;
        droplet_name?: string;
        x_dangerous: boolean;
    };
    "resources/droplets/responses/all_droplet_actions.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                actions?: external["resources/actions/models/action.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/droplets/responses/all_droplet_backups.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                backups?: external["resources/droplets/models/droplet_snapshot.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/droplets/responses/all_droplet_snapshots.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                snapshots?: external["resources/droplets/models/droplet_snapshot.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/droplets/responses/all_droplets.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                droplets?: external["resources/droplets/models/droplet.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/droplets/responses/all_firewalls.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                firewalls?: external["resources/firewalls/models/firewall.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/droplets/responses/all_kernels.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                kernels?: external["resources/droplets/models/kernel.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/droplets/responses/associated_resources_list.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                reserved_ips?: external["resources/droplets/models/associated_resource.yml"][];
                floating_ips?: external["resources/droplets/models/associated_resource.yml"][];
                snapshots?: external["resources/droplets/models/associated_resource.yml"][];
                volumes?: external["resources/droplets/models/associated_resource.yml"][];
                volume_snapshots?: external["resources/droplets/models/associated_resource.yml"][];
            };
        };
    };
    "resources/droplets/responses/associated_resources_status.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/droplets/models/associated_resource_status.yml"];
        };
    };
    "resources/droplets/responses/droplet_action.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                action?: external["resources/actions/models/action.yml"];
            };
        };
    };
    "resources/droplets/responses/droplet_actions_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                actions?: external["resources/actions/models/action.yml"][];
            };
        };
    };
    "resources/droplets/responses/droplet_create.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": OneOf<[
                {
                    droplet: external["resources/droplets/models/droplet.yml"];
                    links: {
                        actions?: external["shared/models/action_link.yml"][];
                    };
                },
                {
                    droplets: external["resources/droplets/models/droplet.yml"][];
                    links: {
                        actions?: external["shared/models/action_link.yml"][];
                    };
                }
            ]>;
        };
    };
    "resources/droplets/responses/droplet_neighbors_ids.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/droplets/models/neighbor_ids.yml"];
        };
    };
    "resources/droplets/responses/examples.yml": unknown;
    "resources/droplets/responses/existing_droplet.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                droplet?: external["resources/droplets/models/droplet.yml"];
            };
        };
    };
    "resources/droplets/responses/neighbor_droplets.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                droplets?: external["resources/droplets/models/droplet.yml"][];
            };
        };
    };
    "resources/firewalls/firewalls_add_rules.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/firewalls/models/firewall_rule.yml"]["firewall_rules"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_add_tags.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    tags: external["shared/attributes/tags_array.yml"];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_assign_droplets.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    droplet_ids: number[];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_create.yml": {
        requestBody?: {
            content: {
                "application/json": external["resources/firewalls/models/firewall.yml"];
            };
        };
        responses: {
            202: external["resources/firewalls/responses/create_firewall_response.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_delete_droplets.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    droplet_ids: number[];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_delete_rules.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/firewalls/models/firewall_rule.yml"]["firewall_rules"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_delete_tags.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    tags: external["shared/attributes/tags_array.yml"];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_delete.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_get.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        responses: {
            200: external["resources/firewalls/responses/get_firewall_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/firewalls/responses/list_firewalls_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/firewalls_update.yml": {
        parameters: {
            path: {
                firewall_id: external["resources/firewalls/parameters.yml"]["firewall_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": WithRequired<external["resources/firewalls/models/firewall.yml"], "name">;
            };
        };
        responses: {
            200: external["resources/firewalls/responses/put_firewall_response.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/firewalls/models/firewall_rule.yml": unknown;
    "resources/firewalls/models/firewall.yml": ({
        id?: string;
        status?: "waiting" | "succeeded" | "failed";
        created_at?: string;
        pending_changes?: readonly {
            droplet_id?: number;
            removing?: boolean;
            status?: string;
        }[];
        name?: string;
        droplet_ids?: number[] | null;
        tags?: external["shared/attributes/tags_array.yml"];
    }) & external["resources/firewalls/models/firewall_rule.yml"]["firewall_rules"];
    "resources/firewalls/parameters.yml": {
        firewall_id: string;
    };
    "resources/firewalls/responses/create_firewall_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                firewall?: external["resources/firewalls/models/firewall.yml"];
            };
        };
    };
    "resources/firewalls/responses/get_firewall_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                firewall?: external["resources/firewalls/models/firewall.yml"];
            };
        };
    };
    "resources/firewalls/responses/list_firewalls_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                firewalls?: external["resources/firewalls/models/firewall.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/firewalls/responses/put_firewall_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                firewall?: external["resources/firewalls/models/firewall.yml"];
            };
        };
    };
    "resources/floating_ips/floatingIPs_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/floating_ips/models/floating_ip_create.yml"];
            };
        };
        responses: {
            202: external["resources/floating_ips/responses/floating_ip_created.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/floating_ips/floatingIPs_delete.yml": {
        parameters: {
            path: {
                floating_ip: external["resources/floating_ips/parameters.yml"]["floating_ip"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/floating_ips/floatingIPs_get.yml": {
        parameters: {
            path: {
                floating_ip: external["resources/floating_ips/parameters.yml"]["floating_ip"];
            };
        };
        responses: {
            200: external["resources/floating_ips/responses/floating_ip.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/floating_ips/floatingIPs_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/floating_ips/responses/floating_ip_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/floating_ips/floatingIPsAction_get.yml": {
        parameters: {
            path: {
                floating_ip: external["resources/floating_ips/parameters.yml"]["floating_ip"];
                action_id: external["resources/actions/parameters.yml"]["action_id"];
            };
        };
        responses: {
            200: external["resources/floating_ips/responses/floating_ip_action.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/floating_ips/floatingIPsAction_list.yml": {
        parameters: {
            path: {
                floating_ip: external["resources/floating_ips/parameters.yml"]["floating_ip"];
            };
        };
        responses: {
            200: external["resources/floating_ips/responses/floating_ip_actions.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/floating_ips/floatingIPsAction_post.yml": {
        parameters: {
            path: {
                floating_ip: external["resources/floating_ips/parameters.yml"]["floating_ip"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/floating_ips/models/floating_ip_actions.yml"]["floating_ip_action_unassign"] | external["resources/floating_ips/models/floating_ip_actions.yml"]["floating_ip_action_assign"];
            };
        };
        responses: {
            201: external["resources/floating_ips/responses/floating_ip_action.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/floating_ips/models/floating_ip_actions.yml": {
        floatingIPsAction: {
            type: "assign" | "unassign";
        };
        floating_ip_action_unassign: {
            type: undefined;
        } & Omit<external["resources/floating_ips/models/floating_ip_actions.yml"]["floatingIPsAction"], "type"> & Record<string, never>;
        floating_ip_action_assign: {
            type: undefined;
        } & Omit<external["resources/floating_ips/models/floating_ip_actions.yml"]["floatingIPsAction"], "type"> & {
            droplet_id: number;
        };
    };
    "resources/floating_ips/models/floating_ip_create.yml": OneOf<[
        {
            droplet_id: number;
        },
        {
            region: string;
            project_id?: string;
        }
    ]>;
    "resources/floating_ips/models/floating_ip.yml": {
        ip?: string;
        region?: external["resources/regions/models/region.yml"] & Record<string, never>;
        droplet?: (Record<string, unknown> | null) | external["resources/droplets/models/droplet.yml"];
        locked?: boolean;
        project_id?: string;
    };
    "resources/floating_ips/parameters.yml": {
        floating_ip: string;
    };
    "resources/floating_ips/responses/examples.yml": unknown;
    "resources/floating_ips/responses/floating_ip_action.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                action?: external["resources/actions/models/action.yml"] & {
                    project_id?: string;
                };
            };
        };
    };
    "resources/floating_ips/responses/floating_ip_actions.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                actions?: external["resources/actions/models/action.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/floating_ips/responses/floating_ip_created.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                floating_ip?: external["resources/floating_ips/models/floating_ip.yml"];
                links?: {
                    droplets?: external["shared/models/action_link.yml"][];
                    actions?: external["shared/models/action_link.yml"][];
                };
            };
        };
    };
    "resources/floating_ips/responses/floating_ip_list.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                floating_ips?: external["resources/floating_ips/models/floating_ip.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/floating_ips/responses/floating_ip.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                floating_ip?: external["resources/floating_ips/models/floating_ip.yml"];
            };
        };
    };
    "resources/functions/functions_create_namespace.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/functions/models/create_namespace.yml"];
            };
        };
        responses: {
            200: external["resources/functions/responses/namespace_created.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["resources/functions/responses/namespace_bad_request.yml"];
            422: external["resources/functions/responses/namespace_limit_reached.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_create_trigger.yml": {
        parameters: {
            path: {
                namespace_id: external["resources/functions/parameters.yml"]["namespace_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/functions/models/create_trigger.yml"];
            };
        };
        responses: {
            200: external["resources/functions/responses/trigger_response.yml"];
            400: external["resources/functions/responses/trigger_bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["resources/functions/responses/namespace_not_found.yml"];
            422: external["resources/functions/responses/trigger_limit_reached.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_delete_namespace.yml": {
        parameters: {
            path: {
                namespace_id: external["resources/functions/parameters.yml"]["namespace_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["resources/functions/responses/namespace_not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_delete_trigger.yml": {
        parameters: {
            path: {
                namespace_id: external["resources/functions/parameters.yml"]["namespace_id"];
                trigger_name: external["resources/functions/parameters.yml"]["trigger_name"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["resources/functions/responses/trigger_not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_get_namespace.yml": {
        parameters: {
            path: {
                namespace_id: external["resources/functions/parameters.yml"]["namespace_id"];
            };
        };
        responses: {
            200: external["resources/functions/responses/namespace_created.yml"];
            401: external["shared/responses/unauthorized.yml"];
            403: external["resources/functions/responses/namespace_not_allowed.yml"];
            404: external["resources/functions/responses/namespace_not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_get_trigger.yml": {
        parameters: {
            path: {
                namespace_id: external["resources/functions/parameters.yml"]["namespace_id"];
                trigger_name: external["resources/functions/parameters.yml"]["trigger_name"];
            };
        };
        responses: {
            200: external["resources/functions/responses/trigger_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["resources/functions/responses/trigger_not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_list_namespaces.yml": {
        responses: {
            200: external["resources/functions/responses/list_namespaces.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_list_triggers.yml": {
        parameters: {
            path: {
                namespace_id: external["resources/functions/parameters.yml"]["namespace_id"];
            };
        };
        responses: {
            200: external["resources/functions/responses/list_triggers.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["resources/functions/responses/namespace_not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/functions_update_trigger.yml": {
        parameters: {
            path: {
                namespace_id: external["resources/functions/parameters.yml"]["namespace_id"];
                trigger_name: external["resources/functions/parameters.yml"]["trigger_name"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/functions/models/update_trigger.yml"];
            };
        };
        responses: {
            200: external["resources/functions/responses/trigger_response.yml"];
            400: external["resources/functions/responses/trigger_bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["resources/functions/responses/trigger_not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/functions/models/create_namespace.yml": {
        region: string;
        label: string;
    };
    "resources/functions/models/create_trigger.yml": {
        name: string;
        function: string;
        type: string;
        is_enabled: boolean;
        scheduled_details: external["resources/functions/models/scheduled_details.yml"];
    };
    "resources/functions/models/namespace_info.yml": {
        api_host?: string;
        namespace?: string;
        created_at?: string;
        updated_at?: string;
        label?: string;
        region?: string;
        uuid?: string;
        key?: string;
    };
    "resources/functions/models/scheduled_details.yml": {
        cron: string;
        body?: {
            name?: string;
        } | null;
    };
    "resources/functions/models/trigger_info.yml": {
        namespace?: string;
        name?: string;
        function?: string;
        type?: string;
        is_enabled?: boolean;
        created_at?: string;
        updated_at?: string;
        scheduled_details?: external["resources/functions/models/scheduled_details.yml"];
        scheduled_runs?: {
            last_run_at?: string | null;
            next_run_at?: string | null;
        };
    };
    "resources/functions/models/update_trigger.yml": {
        is_enabled?: boolean;
        scheduled_details?: external["resources/functions/models/scheduled_details.yml"];
    };
    "resources/functions/parameters.yml": {
        namespace_id: string;
        trigger_name: string;
    };
    "resources/functions/responses/list_namespaces.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                namespaces?: external["resources/functions/models/namespace_info.yml"][];
            };
        };
    };
    "resources/functions/responses/list_triggers.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                triggers?: external["resources/functions/models/trigger_info.yml"][];
            };
        };
    };
    "resources/functions/responses/namespace_bad_request.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/functions/responses/namespace_created.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                namespace?: external["resources/functions/models/namespace_info.yml"];
            };
        };
    };
    "resources/functions/responses/namespace_limit_reached.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/functions/responses/namespace_not_allowed.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/functions/responses/namespace_not_found.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/functions/responses/trigger_bad_request.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/functions/responses/trigger_limit_reached.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/functions/responses/trigger_not_found.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/functions/responses/trigger_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                trigger?: external["resources/functions/models/trigger_info.yml"];
            };
        };
    };
    "resources/images/attributes.yml": unknown;
    "resources/images/imageActions_get.yml": {
        parameters: {
            path: {
                image_id: external["resources/images/parameters.yml"]["image_id"];
                action_id: external["resources/actions/parameters.yml"]["action_id"];
            };
        };
        responses: {
            200: external["resources/images/responses/get_image_action_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/imageActions_list.yml": {
        parameters: {
            path: {
                image_id: external["resources/images/parameters.yml"]["image_id"];
            };
        };
        responses: {
            200: external["resources/images/responses/get_image_actions_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/imageActions_post.yml": {
        parameters: {
            path: {
                image_id: external["resources/images/parameters.yml"]["image_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/images/models/image_action.yml"]["image_action_base"] | external["resources/images/models/image_action.yml"]["image_action_transfer"];
            };
        };
        responses: {
            201: external["resources/images/responses/post_image_action_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/images_create_custom.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/images/models/image_new_custom.yml"];
            };
        };
        responses: {
            202: external["resources/images/responses/new_custom_image.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/images_delete.yml": {
        parameters: {
            path: {
                image_id: external["resources/images/parameters.yml"]["image_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/images_get.yml": {
        parameters: {
            path: {
                image_id: number | string;
            };
        };
        responses: {
            200: external["resources/images/responses/existing_image.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/images_list.yml": {
        parameters: {
            query?: {
                type?: external["resources/images/parameters.yml"]["type"];
                private?: external["resources/images/parameters.yml"]["private"];
                tag_name?: external["resources/images/parameters.yml"]["tag"];
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/images/responses/all_images.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/images_update.yml": {
        parameters: {
            path: {
                image_id: external["resources/images/parameters.yml"]["image_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/images/models/image_update.yml"];
            };
        };
        responses: {
            200: external["resources/images/responses/updated_image.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/images/models/image_action.yml": {
        image_action_base: {
            type: "convert" | "transfer";
        };
        image_action_transfer: external["resources/images/models/image_action.yml"]["image_action_base"] & {
            region: external["shared/attributes/region_slug.yml"];
        };
    };
    "resources/images/models/image_new_custom.yml": WithRequired<external["resources/images/models/image_update.yml"] & {
        url?: string;
        region?: external["shared/attributes/region_slug.yml"];
        tags?: external["shared/attributes/tags_array.yml"];
    }, "name" | "url" | "region">;
    "resources/images/models/image_update.yml": {
        name?: external["resources/images/attributes.yml"]["image_name"];
        distribution?: external["shared/attributes/distribution.yml"];
        description?: external["resources/images/attributes.yml"]["image_description"];
    };
    "resources/images/models/image.yml": {
        id?: number;
        name?: external["resources/images/attributes.yml"]["image_name"];
        type?: "base" | "snapshot" | "backup" | "custom" | "admin";
        distribution?: external["shared/attributes/distribution.yml"];
        slug?: string | null;
        public?: boolean;
        regions?: external["shared/attributes/regions_array.yml"];
        created_at?: string;
        min_disk_size?: number | null;
        size_gigabytes?: number | null;
        description?: external["resources/images/attributes.yml"]["image_description"];
        tags?: external["shared/attributes/tags_array.yml"];
        status?: "NEW" | "available" | "pending" | "deleted" | "retired";
        error_message?: string;
    };
    "resources/images/parameters.yml": Record<string, never>;
    "resources/images/responses/all_images.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                images: external["resources/images/models/image.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/images/responses/examples.yml": unknown;
    "resources/images/responses/existing_image.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                image: external["resources/images/models/image.yml"];
            };
        };
    };
    "resources/images/responses/get_image_action_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/actions/models/action.yml"];
        };
    };
    "resources/images/responses/get_image_actions_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                actions?: external["resources/actions/models/action.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/images/responses/new_custom_image.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                image?: external["resources/images/models/image.yml"];
            };
        };
    };
    "resources/images/responses/post_image_action_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/actions/models/action.yml"];
        };
    };
    "resources/images/responses/updated_image.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                image: external["resources/images/models/image.yml"];
            };
        };
    };
    "resources/kubernetes/examples.yml": unknown;
    "resources/kubernetes/kubernetes_add_nodePool.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/kubernetes/models/node_pool.yml"]["kubernetes_node_pool"];
            };
        };
        responses: {
            201: external["resources/kubernetes/responses/node_pool_create.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_add_registry.yml": {
        requestBody?: {
            content: {
                "application/json": external["resources/kubernetes/models/cluster_registries.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_create_cluster.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/kubernetes/models/cluster.yml"];
            };
        };
        responses: {
            201: external["resources/kubernetes/responses/cluster_create.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_delete_cluster.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_delete_node.yml": {
        parameters: {
            query?: {
                skip_drain?: external["resources/kubernetes/parameters.yml"]["kubernetes_node_skip_drain"];
                replace?: external["resources/kubernetes/parameters.yml"]["kubernetes_node_replace"];
            };
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
                node_pool_id: external["resources/kubernetes/parameters.yml"]["kubernetes_node_pool_id"];
                node_id: external["resources/kubernetes/parameters.yml"]["kubernetes_node_id"];
            };
        };
        responses: {
            202: external["shared/responses/accepted.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_delete_nodePool.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
                node_pool_id: external["resources/kubernetes/parameters.yml"]["kubernetes_node_pool_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_destroy_associatedResourcesDangerous.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_destroy_associatedResourcesSelective.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/kubernetes/models/associated_kubernetes_resources.yml"]["destroy_associated_kubernetes_resources"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_get_availableUpgrades.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/available_upgrades.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_get_cluster.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/existing_cluster.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_get_clusterLintResults.yml": {
        parameters: {
            query?: {
                run_id?: external["resources/kubernetes/parameters.yml"]["clusterlint_run_id"];
            };
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/clusterlint_results.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_get_clusterUser.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/cluster_user.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_get_credentials.yml": {
        parameters: {
            query?: {
                expiry_seconds?: external["resources/kubernetes/parameters.yml"]["kubernetes_expiry_seconds"];
            };
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/credentials.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_get_kubeconfig.yml": {
        parameters: {
            query?: {
                expiry_seconds?: external["resources/kubernetes/parameters.yml"]["kubernetes_expiry_seconds"];
            };
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/kubeconfig.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_get_nodePool.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
                node_pool_id: external["resources/kubernetes/parameters.yml"]["kubernetes_node_pool_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/existing_node_pool.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_list_associatedResources.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/associated_kubernetes_resources_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_list_clusters.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/all_clusters.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_list_nodePools.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        responses: {
            200: external["resources/kubernetes/responses/all_node_pools.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_list_options.yml": {
        responses: {
            200: external["resources/kubernetes/responses/all_options.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_recycle_nodePool.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
                node_pool_id: external["resources/kubernetes/parameters.yml"]["kubernetes_node_pool_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    nodes?: string[];
                };
            };
        };
        responses: {
            202: external["shared/responses/accepted.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_remove_registry.yml": {
        requestBody?: {
            content: {
                "application/json": external["resources/kubernetes/models/cluster_registries.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_run_clusterLint.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/kubernetes/models/clusterlint_request.yml"];
            };
        };
        responses: {
            202: external["resources/kubernetes/responses/clusterlint_run.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_update_cluster.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/kubernetes/models/cluster_update.yml"];
            };
        };
        responses: {
            202: external["resources/kubernetes/responses/updated_cluster.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_update_nodePool.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
                node_pool_id: external["resources/kubernetes/parameters.yml"]["kubernetes_node_pool_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/kubernetes/models/node_pool.yml"]["kubernetes_node_pool_update"];
            };
        };
        responses: {
            202: external["resources/kubernetes/responses/node_pool_update.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/kubernetes_upgrade_cluster.yml": {
        parameters: {
            path: {
                cluster_id: external["resources/kubernetes/parameters.yml"]["kubernetes_cluster_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    version?: string;
                };
            };
        };
        responses: {
            202: external["shared/responses/accepted.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/kubernetes/models/associated_kubernetes_resources.yml": {
        associated_kubernetes_resources: {
            load_balancers?: external["resources/kubernetes/models/associated_kubernetes_resources.yml"]["associated_kubernetes_resource"][];
            volumes?: external["resources/kubernetes/models/associated_kubernetes_resources.yml"]["associated_kubernetes_resource"][];
            volume_snapshots?: external["resources/kubernetes/models/associated_kubernetes_resources.yml"]["associated_kubernetes_resource"][];
        };
        associated_kubernetes_resource: {
            id?: string;
            name?: string;
        };
        destroy_associated_kubernetes_resources: {
            load_balancers?: string[];
            volumes?: string[];
            volume_snapshots?: string[];
        };
    };
    "resources/kubernetes/models/cluster_registries.yml": {
        cluster_uuids?: string[];
    };
    "resources/kubernetes/models/cluster_update.yml": {
        name: string;
        tags?: string[];
        maintenance_policy?: external["resources/kubernetes/models/maintenance_policy.yml"];
        auto_upgrade?: boolean;
        surge_upgrade?: boolean;
        ha?: boolean;
    };
    "resources/kubernetes/models/cluster.yml": {
        id?: string;
        name: string;
        region: string;
        version: string;
        cluster_subnet?: string;
        service_subnet?: string;
        vpc_uuid?: string;
        ipv4?: string;
        endpoint?: string;
        tags?: string[];
        node_pools: external["resources/kubernetes/models/node_pool.yml"]["kubernetes_node_pool"][];
        maintenance_policy?: external["resources/kubernetes/models/maintenance_policy.yml"];
        auto_upgrade?: boolean;
        status?: {
            readonly state?: "running" | "provisioning" | "degraded" | "error" | "deleted" | "upgrading" | "deleting";
            readonly message?: string;
        };
        created_at?: string;
        updated_at?: string;
        surge_upgrade?: boolean;
        ha?: boolean;
        registry_enabled?: boolean;
    };
    "resources/kubernetes/models/clusterlint_request.yml": {
        include_groups?: string[];
        include_checks?: string[];
        exclude_groups?: string[];
        exclude_checks?: string[];
    };
    "resources/kubernetes/models/clusterlint_results.yml": {
        run_id?: string;
        requested_at?: string;
        completed_at?: string;
        diagnostics?: {
            check_name?: string;
            severity?: string;
            message?: string;
            object?: {
                name?: string;
                kind?: string;
                namespace?: string;
            };
        }[];
    };
    "resources/kubernetes/models/credentials.yml": {
        server?: string;
        certificate_authority_data?: string;
        client_certificate_data?: string | null;
        client_key_data?: string | null;
        token?: string;
        expires_at?: string;
    };
    "resources/kubernetes/models/maintenance_policy.yml": ({
        start_time?: string;
        duration?: string;
        day?: "any" | "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
    }) | null;
    "resources/kubernetes/models/node_pool.yml": unknown;
    "resources/kubernetes/models/node.yml": {
        id?: string;
        name?: string;
        status?: {
            state?: "provisioning" | "running" | "draining" | "deleting";
        };
        droplet_id?: string;
        created_at?: string;
        updated_at?: string;
    };
    "resources/kubernetes/models/options.yml": unknown;
    "resources/kubernetes/models/user.yml": {
        kubernetes_cluster_user?: {
            username?: string;
            groups?: string[];
        };
    };
    "resources/kubernetes/parameters.yml": {
        kubernetes_cluster_id: string;
        kubernetes_node_pool_id: string;
        kubernetes_node_id: string;
        kubernetes_expiry_seconds?: number;
        clusterlint_run_id?: string;
        kubernetes_node_skip_drain?: number;
        kubernetes_node_replace?: number;
    };
    "resources/kubernetes/responses/all_clusters.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                kubernetes_clusters?: external["resources/kubernetes/models/cluster.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/kubernetes/responses/all_node_pools.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                node_pools?: external["resources/kubernetes/models/node_pool.yml"]["kubernetes_node_pool"][];
            };
        };
    };
    "resources/kubernetes/responses/all_options.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/kubernetes/models/options.yml"]["kubernetes_options"];
        };
    };
    "resources/kubernetes/responses/associated_kubernetes_resources_list.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/kubernetes/models/associated_kubernetes_resources.yml"]["associated_kubernetes_resources"];
        };
    };
    "resources/kubernetes/responses/available_upgrades.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                available_upgrade_versions?: external["resources/kubernetes/models/options.yml"]["kubernetes_version"][] | null;
            };
        };
    };
    "resources/kubernetes/responses/cluster_create.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                kubernetes_cluster?: external["resources/kubernetes/models/cluster.yml"];
            };
        };
    };
    "resources/kubernetes/responses/cluster_user.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/kubernetes/models/user.yml"];
        };
    };
    "resources/kubernetes/responses/clusterlint_results.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/kubernetes/models/clusterlint_results.yml"];
        };
    };
    "resources/kubernetes/responses/clusterlint_run.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                run_id?: string;
            };
        };
    };
    "resources/kubernetes/responses/credentials.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/kubernetes/models/credentials.yml"];
        };
    };
    "resources/kubernetes/responses/examples.yml": unknown;
    "resources/kubernetes/responses/existing_cluster.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                kubernetes_cluster?: external["resources/kubernetes/models/cluster.yml"];
            };
        };
    };
    "resources/kubernetes/responses/existing_node_pool.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                node_pool?: external["resources/kubernetes/models/node_pool.yml"]["kubernetes_node_pool"];
            };
        };
    };
    "resources/kubernetes/responses/kubeconfig.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/yaml": unknown;
        };
    };
    "resources/kubernetes/responses/node_pool_create.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                node_pool?: external["resources/kubernetes/models/node_pool.yml"]["kubernetes_node_pool"];
            };
        };
    };
    "resources/kubernetes/responses/node_pool_update.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                node_pool?: external["resources/kubernetes/models/node_pool.yml"]["kubernetes_node_pool"];
            };
        };
    };
    "resources/kubernetes/responses/updated_cluster.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                kubernetes_cluster?: external["resources/kubernetes/models/cluster.yml"];
            };
        };
    };
    "resources/load_balancers/examples.yml": unknown;
    "resources/load_balancers/loadBalancers_add_droplets.yml": {
        parameters: {
            path: {
                lb_id: external["resources/load_balancers/parameters.yml"]["load_balancer_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    $ref?: external["resources/load_balancers/models/attributes.yml"]["load_balancer_droplet_ids"];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_add_forwardingRules.yml": {
        parameters: {
            path: {
                lb_id: external["resources/load_balancers/parameters.yml"]["load_balancer_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    forwarding_rules: external["resources/load_balancers/models/forwarding_rule.yml"][];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/load_balancers/models/load_balancer_create.yml"];
            };
        };
        responses: {
            202: external["resources/load_balancers/responses/load_balancer_create.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_delete.yml": {
        parameters: {
            path: {
                lb_id: external["resources/load_balancers/parameters.yml"]["load_balancer_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_get.yml": {
        parameters: {
            path: {
                lb_id: external["resources/load_balancers/parameters.yml"]["load_balancer_id"];
            };
        };
        responses: {
            200: external["resources/load_balancers/responses/existing_load_balancer.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/load_balancers/responses/all_load_balancers.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_remove_droplets.yml": {
        parameters: {
            path: {
                lb_id: external["resources/load_balancers/parameters.yml"]["load_balancer_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    $ref?: external["resources/load_balancers/models/attributes.yml"]["load_balancer_droplet_ids"];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_remove_forwardingRules.yml": {
        parameters: {
            path: {
                lb_id: external["resources/load_balancers/parameters.yml"]["load_balancer_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    forwarding_rules: external["resources/load_balancers/models/forwarding_rule.yml"][];
                };
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/loadBalancers_update.yml": {
        parameters: {
            path: {
                lb_id: external["resources/load_balancers/parameters.yml"]["load_balancer_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/load_balancers/models/load_balancer_create.yml"];
            };
        };
        responses: {
            200: external["resources/load_balancers/responses/updated_load_balancer.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/load_balancers/models/attributes.yml": unknown;
    "resources/load_balancers/models/forwarding_rule.yml": {
        entry_protocol: "http" | "https" | "http2" | "http3" | "tcp" | "udp";
        entry_port: number;
        target_protocol: "http" | "https" | "http2" | "tcp" | "udp";
        target_port: number;
        certificate_id?: string;
        tls_passthrough?: boolean;
    };
    "resources/load_balancers/models/health_check.yml": {
        protocol?: "http" | "https" | "tcp";
        port?: number;
        path?: string;
        check_interval_seconds?: number;
        response_timeout_seconds?: number;
        unhealthy_threshold?: number;
        healthy_threshold?: number;
    };
    "resources/load_balancers/models/lb_firewall.yml": {
        deny?: string[];
        allow?: string[];
    };
    "resources/load_balancers/models/load_balancer_base.yml": {
        id?: string;
        name?: string;
        project_id?: string;
        ip?: string;
        size_unit?: number;
        size?: "lb-small" | "lb-medium" | "lb-large";
        algorithm?: "round_robin" | "least_connections";
        status?: "new" | "active" | "errored";
        created_at?: string;
        forwarding_rules: external["resources/load_balancers/models/forwarding_rule.yml"][];
        health_check?: external["resources/load_balancers/models/health_check.yml"];
        sticky_sessions?: external["resources/load_balancers/models/sticky_sessions.yml"];
        redirect_http_to_https?: boolean;
        enable_proxy_protocol?: boolean;
        enable_backend_keepalive?: boolean;
        http_idle_timeout_seconds?: number;
        vpc_uuid?: string;
        disable_lets_encrypt_dns_records?: boolean;
        firewall?: external["resources/load_balancers/models/lb_firewall.yml"];
    };
    "resources/load_balancers/models/load_balancer_create.yml": OneOf<[
        WithRequired<{
            $ref?: external["resources/load_balancers/models/attributes.yml"]["load_balancer_droplet_ids"];
        } & {
            region?: external["shared/attributes/region_slug.yml"];
        } & external["resources/load_balancers/models/load_balancer_base.yml"], "droplet_ids" | "region">,
        WithRequired<{
            $ref?: external["resources/load_balancers/models/attributes.yml"]["load_balancer_droplet_tag"];
        } & {
            region?: external["shared/attributes/region_slug.yml"];
        } & external["resources/load_balancers/models/load_balancer_base.yml"], "tag" | "region">
    ]>;
    "resources/load_balancers/models/load_balancer.yml": external["resources/load_balancers/models/load_balancer_base.yml"] & {
        region?: external["resources/regions/models/region.yml"];
    } & {
        $ref?: external["resources/load_balancers/models/attributes.yml"]["load_balancer_droplet_ids"];
    } & {
        $ref?: external["resources/load_balancers/models/attributes.yml"]["load_balancer_droplet_tag"];
    };
    "resources/load_balancers/models/sticky_sessions.yml": {
        type?: "cookies" | "none";
        cookie_name?: string;
        cookie_ttl_seconds?: number;
    };
    "resources/load_balancers/parameters.yml": {
        load_balancer_id: string;
    };
    "resources/load_balancers/responses/all_load_balancers.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                load_balancers?: external["resources/load_balancers/models/load_balancer.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/load_balancers/responses/examples.yml": unknown;
    "resources/load_balancers/responses/existing_load_balancer.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                load_balancer?: external["resources/load_balancers/models/load_balancer.yml"];
            };
        };
    };
    "resources/load_balancers/responses/load_balancer_create.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                load_balancer?: external["resources/load_balancers/models/load_balancer.yml"];
            };
        };
    };
    "resources/load_balancers/responses/updated_load_balancer.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                load_balancer?: external["resources/load_balancers/models/load_balancer.yml"];
            };
        };
    };
    "resources/monitoring/models/alert_policy_request.yml": {
        alerts: external["resources/monitoring/models/alerts.yml"];
        compare: "GreaterThan" | "LessThan";
        description: string;
        enabled: boolean;
        entities: string[];
        tags: string[];
        type: "v1/insights/droplet/load_1" | "v1/insights/droplet/load_5" | "v1/insights/droplet/load_15" | "v1/insights/droplet/memory_utilization_percent" | "v1/insights/droplet/disk_utilization_percent" | "v1/insights/droplet/cpu" | "v1/insights/droplet/disk_read" | "v1/insights/droplet/disk_write" | "v1/insights/droplet/public_outbound_bandwidth" | "v1/insights/droplet/public_inbound_bandwidth" | "v1/insights/droplet/private_outbound_bandwidth" | "v1/insights/droplet/private_inbound_bandwidth" | "v1/insights/lbaas/avg_cpu_utilization_percent" | "v1/insights/lbaas/connection_utilization_percent" | "v1/insights/lbaas/droplet_health" | "v1/insights/lbaas/tls_connections_per_second_utilization_percent" | "v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx" | "v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx" | "v1/insights/lbaas/increase_in_http_error_rate_count_5xx" | "v1/insights/lbaas/increase_in_http_error_rate_count_4xx" | "v1/insights/lbaas/high_http_request_response_time" | "v1/insights/lbaas/high_http_request_response_time_50p" | "v1/insights/lbaas/high_http_request_response_time_95p" | "v1/insights/lbaas/high_http_request_response_time_99p" | "v1/dbaas/alerts/load_15_alerts" | "v1/dbaas/alerts/memory_utilization_alerts" | "v1/dbaas/alerts/disk_utilization_alerts" | "v1/dbaas/alerts/cpu_alerts";
        value: number;
        window: "5m" | "10m" | "30m" | "1h";
    };
    "resources/monitoring/models/alert_policy.yml": {
        alerts: external["resources/monitoring/models/alerts.yml"];
        compare: "GreaterThan" | "LessThan";
        description: string;
        enabled: boolean;
        entities: string[];
        tags: string[];
        type: "v1/insights/droplet/load_1" | "v1/insights/droplet/load_5" | "v1/insights/droplet/load_15" | "v1/insights/droplet/memory_utilization_percent" | "v1/insights/droplet/disk_utilization_percent" | "v1/insights/droplet/cpu" | "v1/insights/droplet/disk_read" | "v1/insights/droplet/disk_write" | "v1/insights/droplet/public_outbound_bandwidth" | "v1/insights/droplet/public_inbound_bandwidth" | "v1/insights/droplet/private_outbound_bandwidth" | "v1/insights/droplet/private_inbound_bandwidth" | "v1/insights/lbaas/avg_cpu_utilization_percent" | "v1/insights/lbaas/connection_utilization_percent" | "v1/insights/lbaas/droplet_health" | "v1/insights/lbaas/tls_connections_per_second_utilization_percent" | "v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx" | "v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx" | "v1/insights/lbaas/increase_in_http_error_rate_count_5xx" | "v1/insights/lbaas/increase_in_http_error_rate_count_4xx" | "v1/insights/lbaas/high_http_request_response_time" | "v1/insights/lbaas/high_http_request_response_time_50p" | "v1/insights/lbaas/high_http_request_response_time_95p" | "v1/insights/lbaas/high_http_request_response_time_99p" | "v1/dbaas/alerts/load_15_alerts" | "v1/dbaas/alerts/memory_utilization_alerts" | "v1/dbaas/alerts/disk_utilization_alerts" | "v1/dbaas/alerts/cpu_alerts";
        uuid: string;
        value: number;
        window: "5m" | "10m" | "30m" | "1h";
    };
    "resources/monitoring/models/alerts.yml": {
        email: string[];
        slack: external["resources/monitoring/models/slack_details.yml"][];
    };
    "resources/monitoring/models/list_alert_policy.yml": {
        policies: external["resources/monitoring/models/alert_policy.yml"][];
    };
    "resources/monitoring/models/metrics_data.yml": {
        result: external["resources/monitoring/models/metrics_result.yml"][];
        resultType: "matrix";
    };
    "resources/monitoring/models/metrics_result.yml": {
        metric: {
            [key: string]: string;
        };
        values: ((number | string)[])[];
    };
    "resources/monitoring/models/metrics.yml": {
        data: external["resources/monitoring/models/metrics_data.yml"];
        status: "success" | "error";
    };
    "resources/monitoring/models/slack_details.yml": {
        channel: string;
        url: string;
    };
    "resources/monitoring/monitoring_create_alertPolicy.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/monitoring/models/alert_policy_request.yml"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/alert_policy_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_delete_alertPolicy.yml": {
        parameters: {
            path: {
                alert_uuid: external["resources/monitoring/parameters.yml"]["alert_uuid"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_alertPolicy.yml": {
        parameters: {
            path: {
                alert_uuid: external["resources/monitoring/parameters.yml"]["alert_uuid"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/alert_policy_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletBandwidthMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                interface: external["resources/monitoring/parameters.yml"]["network_interface"];
                direction: external["resources/monitoring/parameters.yml"]["network_direction"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/droplet_bandwidth_metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_DropletCpuMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/droplet_cpu_metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletFilesystemFreeMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/droplet_filesystem_metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletFilesystemSizeMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/droplet_filesystem_metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletLoad1Metrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletLoad5Metrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletLoad15Metrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletMemoryAvailableMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletMemoryCachedMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletMemoryFreeMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_get_dropletMemoryTotalMetrics.yml": {
        parameters: {
            query: {
                host_id: external["resources/monitoring/parameters.yml"]["droplet_id"];
                start: external["resources/monitoring/parameters.yml"]["metric_timestamp_start"];
                end: external["resources/monitoring/parameters.yml"]["metric_timestamp_end"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/metric_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_list_alertPolicy.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/list_alert_policy_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/monitoring_update_alertPolicy.yml": {
        parameters: {
            path: {
                alert_uuid: external["resources/monitoring/parameters.yml"]["alert_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/monitoring/models/alert_policy_request.yml"];
            };
        };
        responses: {
            200: external["resources/monitoring/responses/alert_policy_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/monitoring/parameters.yml": {
        droplet_id: string;
        network_interface: "private" | "public";
        network_direction: "inbound" | "outbound";
        metric_timestamp_start: string;
        metric_timestamp_end: string;
        alert_uuid: string;
    };
    "resources/monitoring/responses/alert_policy_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                policy?: external["resources/monitoring/models/alert_policy.yml"];
            };
        };
    };
    "resources/monitoring/responses/droplet_bandwidth_metric_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/monitoring/models/metrics.yml"];
        };
    };
    "resources/monitoring/responses/droplet_cpu_metric_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/monitoring/models/metrics.yml"];
        };
    };
    "resources/monitoring/responses/droplet_filesystem_metric_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/monitoring/models/metrics.yml"];
        };
    };
    "resources/monitoring/responses/examples.yml": unknown;
    "resources/monitoring/responses/list_alert_policy_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/monitoring/models/list_alert_policy.yml"] & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/monitoring/responses/metric_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/monitoring/models/metrics.yml"];
        };
    };
    "resources/projects/models/project_assignment.yml": {
        resources?: external["shared/attributes/urn.yml"][];
    };
    "resources/projects/models/project.yml": unknown;
    "resources/projects/models/resource.yml": {
        urn?: external["shared/attributes/urn.yml"];
        assigned_at?: string;
        links?: {
            self?: string;
        };
        status?: "ok" | "not_found" | "assigned" | "already_assigned" | "service_down";
    };
    "resources/projects/parameters.yml": {
        project_id: string;
    };
    "resources/projects/projects_assign_resources_default.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/projects/models/project_assignment.yml"];
            };
        };
        responses: {
            200: external["resources/projects/responses/assigned_resources_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_assign_resources.yml": {
        parameters: {
            path: {
                project_id: external["resources/projects/parameters.yml"]["project_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/projects/models/project_assignment.yml"];
            };
        };
        responses: {
            200: external["resources/projects/responses/assigned_resources_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_create.yml": {
        requestBody: {
            content: {
                "application/json": WithRequired<external["resources/projects/models/project.yml"]["project_base"], "name" | "purpose">;
            };
        };
        responses: {
            201: external["resources/projects/responses/existing_project.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_delete.yml": {
        parameters: {
            path: {
                project_id: external["resources/projects/parameters.yml"]["project_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            412: external["resources/projects/responses/precondition_failed.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_get_default.yml": {
        responses: {
            200: external["resources/projects/responses/default_project.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_get.yml": {
        parameters: {
            path: {
                project_id: external["resources/projects/parameters.yml"]["project_id"];
            };
        };
        responses: {
            200: external["resources/projects/responses/existing_project.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_list_resources_default.yml": {
        responses: {
            200: external["resources/projects/responses/resources_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_list_resources.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                project_id: external["resources/projects/parameters.yml"]["project_id"];
            };
        };
        responses: {
            200: external["resources/projects/responses/resources_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/projects/responses/projects_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_patch_default.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/projects/models/project.yml"]["project"];
            };
        };
        responses: {
            200: external["resources/projects/responses/existing_project.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_patch.yml": {
        parameters: {
            path: {
                project_id: external["resources/projects/parameters.yml"]["project_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/projects/models/project.yml"]["project"];
            };
        };
        responses: {
            200: external["resources/projects/responses/existing_project.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_update_default.yml": {
        requestBody: {
            content: {
                "application/json": WithRequired<external["resources/projects/models/project.yml"]["project"], "name" | "description" | "purpose" | "environment" | "is_default">;
            };
        };
        responses: {
            200: external["resources/projects/responses/existing_project.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/projects_update.yml": {
        parameters: {
            path: {
                project_id: external["resources/projects/parameters.yml"]["project_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": WithRequired<external["resources/projects/models/project.yml"]["project"], "name" | "description" | "purpose" | "environment" | "is_default">;
            };
        };
        responses: {
            200: external["resources/projects/responses/existing_project.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/projects/responses/assigned_resources_list.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                resources?: external["resources/projects/models/resource.yml"][];
            };
        };
    };
    "resources/projects/responses/default_project.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                project?: external["resources/projects/models/project.yml"]["project"];
            };
        };
    };
    "resources/projects/responses/existing_project.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                project?: external["resources/projects/models/project.yml"]["project"];
            };
        };
    };
    "resources/projects/responses/precondition_failed.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "resources/projects/responses/projects_list.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                projects?: external["resources/projects/models/project.yml"]["project"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/projects/responses/resources_list.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                resources?: external["resources/projects/models/resource.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/regions/models/region.yml": {
        name: string;
        slug: string;
        features: unknown;
        available: boolean;
        sizes: unknown;
    };
    "resources/regions/regions_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/regions/responses/all_regions.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/regions/responses/all_regions.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                regions: external["resources/regions/models/region.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/registry/models/docker_credentials.yml": {
        auths?: {
            "registry.digitalocean.com"?: {
                auth?: string;
            };
        };
    };
    "resources/registry/models/garbage_collection.yml": {
        uuid?: string;
        registry_name?: string;
        status?: "requested" | "waiting for write JWTs to expire" | "scanning manifests" | "deleting unreferenced blobs" | "cancelling" | "failed" | "succeeded" | "cancelled";
        created_at?: string;
        updated_at?: string;
        blobs_deleted?: number;
        freed_bytes?: number;
    };
    "resources/registry/models/registry_create.yml": {
        name: string;
        subscription_tier_slug: "starter" | "basic" | "professional";
        region?: "nyc3" | "sfo3" | "ams3" | "sgp1" | "fra1";
    };
    "resources/registry/models/registry.yml": {
        name?: string;
        created_at?: string;
        region?: string;
        storage_usage_bytes?: number;
        storage_usage_bytes_updated_at?: string;
        subscription?: external["resources/registry/models/subscription.yml"];
    };
    "resources/registry/models/repository_blob.yml": {
        digest?: string;
        compressed_size_bytes?: number;
    };
    "resources/registry/models/repository_manifest.yml": {
        registry_name?: string;
        repository?: string;
        digest?: string;
        compressed_size_bytes?: number;
        size_bytes?: number;
        updated_at?: string;
        tags?: string[];
        blobs?: external["resources/registry/models/repository_blob.yml"][];
    };
    "resources/registry/models/repository_tag.yml": {
        registry_name?: string;
        repository?: string;
        tag?: string;
        manifest_digest?: string;
        compressed_size_bytes?: number;
        size_bytes?: number;
        updated_at?: string;
    };
    "resources/registry/models/repository_v2.yml": {
        registry_name?: string;
        name?: string;
        latest_manifest?: external["resources/registry/models/repository_manifest.yml"];
        tag_count?: number;
        manifest_count?: number;
    };
    "resources/registry/models/repository.yml": {
        registry_name?: string;
        name?: string;
        latest_tag?: external["resources/registry/models/repository_tag.yml"];
        tag_count?: number;
    };
    "resources/registry/models/subscription_tier.yml": unknown;
    "resources/registry/models/subscription.yml": {
        tier?: external["resources/registry/models/subscription_tier.yml"]["subscription_tier_base"];
        created_at?: string;
        updated_at?: string;
    };
    "resources/registry/models/update_registry.yml": {
        cancel?: boolean;
    };
    "resources/registry/models/validate_registry.yml": {
        name: string;
    };
    "resources/registry/parameters.yml": {
        registry_expiry_seconds?: number;
        registry_read_write?: boolean;
        registry_name: string;
        registry_repository_name: string;
        registry_repository_tag: string;
        registry_manifest_digest: string;
        garbage_collection_uuid: string;
        token_pagination_page?: number;
        token_pagination_page_token?: string;
    };
    "resources/registry/registry_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/registry/models/registry_create.yml"];
            };
        };
        responses: {
            201: external["resources/registry/responses/registry_info.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_delete_repositoryManifest.yml": {
        parameters: {
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
                repository_name: external["resources/registry/parameters.yml"]["registry_repository_name"];
                manifest_digest: external["resources/registry/parameters.yml"]["registry_manifest_digest"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_delete_repositoryTag.yml": {
        parameters: {
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
                repository_name: external["resources/registry/parameters.yml"]["registry_repository_name"];
                repository_tag: external["resources/registry/parameters.yml"]["registry_repository_tag"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_delete.yml": {
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_get_dockerCredentials.yml": {
        parameters: {
            query?: {
                expiry_seconds?: external["resources/registry/parameters.yml"]["registry_expiry_seconds"];
                read_write?: external["resources/registry/parameters.yml"]["registry_read_write"];
            };
        };
        responses: {
            200: external["resources/registry/responses/docker_credentials.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_get_garbageCollection.yml": {
        parameters: {
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
            };
        };
        responses: {
            200: external["resources/registry/responses/garbage_collection.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_get_options.yml": {
        responses: {
            200: external["resources/registry/responses/registry_options_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_get_subscription.yml": {
        responses: {
            200: external["resources/registry/responses/subscription_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_get.yml": {
        responses: {
            200: external["resources/registry/responses/registry_info.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_list_garbageCollections.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
            };
        };
        responses: {
            200: external["resources/registry/responses/garbage_collections.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_list_repositories.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
            };
        };
        responses: {
            200: external["resources/registry/responses/all_repositories.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_list_repositoriesV2.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["resources/registry/parameters.yml"]["token_pagination_page"];
                page_token?: external["resources/registry/parameters.yml"]["token_pagination_page_token"];
            };
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
            };
        };
        responses: {
            200: external["resources/registry/responses/all_repositories_v2.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_list_repositoryManifests.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
                repository_name: external["resources/registry/parameters.yml"]["registry_repository_name"];
            };
        };
        responses: {
            200: external["resources/registry/responses/repository_manifests.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_list_repositoryTags.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
                repository_name: external["resources/registry/parameters.yml"]["registry_repository_name"];
            };
        };
        responses: {
            200: external["resources/registry/responses/repository_tags.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_run_garbageCollection.yml": {
        parameters: {
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
            };
        };
        responses: {
            201: external["resources/registry/responses/garbage_collection.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_update_garbageCollection.yml": {
        parameters: {
            path: {
                registry_name: external["resources/registry/parameters.yml"]["registry_name"];
                garbage_collection_uuid: external["resources/registry/parameters.yml"]["garbage_collection_uuid"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/registry/models/update_registry.yml"];
            };
        };
        responses: {
            200: external["resources/registry/responses/garbage_collection.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_update_subscription.yml": {
        requestBody?: {
            content: {
                "application/json": {
                    tier_slug?: "starter" | "basic" | "professional";
                };
            };
        };
        responses: {
            200: external["resources/registry/responses/subscription_response.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/registry_validate_name.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/registry/models/validate_registry.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            409: external["shared/responses/conflict.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/registry/responses/all_repositories_v2.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                repositories?: external["resources/registry/models/repository_v2.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/registry/responses/all_repositories.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                repositories?: external["resources/registry/models/repository.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/registry/responses/docker_credentials.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["resources/registry/models/docker_credentials.yml"];
        };
    };
    "resources/registry/responses/garbage_collection.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                garbage_collection?: external["resources/registry/models/garbage_collection.yml"];
            };
        };
    };
    "resources/registry/responses/garbage_collections.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                garbage_collections?: external["resources/registry/models/garbage_collection.yml"][];
            };
        };
    };
    "resources/registry/responses/registry_info.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                registry?: external["resources/registry/models/registry.yml"];
            };
        };
    };
    "resources/registry/responses/registry_options_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                options?: {
                    available_regions?: string[];
                    subscription_tiers?: (external["resources/registry/models/subscription_tier.yml"]["subscription_tier_base"] & external["resources/registry/models/subscription_tier.yml"]["subscription_tier_extended"])[];
                };
            };
        };
    };
    "resources/registry/responses/repository_manifests.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                manifests?: external["resources/registry/models/repository_manifest.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/registry/responses/repository_tags.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                tags?: external["resources/registry/models/repository_tag.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/registry/responses/subscription_response.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                subscription?: external["resources/registry/models/subscription.yml"];
            };
        };
    };
    "resources/reserved_ips/models/reserved_ip_actions.yml": {
        reserved_ip_action_type: {
            type: "assign" | "unassign";
        };
        reserved_ip_action_unassign: {
            type: undefined;
        } & Omit<external["resources/reserved_ips/models/reserved_ip_actions.yml"]["reserved_ip_action_type"], "type"> & Record<string, never>;
        reserved_ip_action_assign: {
            type: undefined;
        } & Omit<external["resources/reserved_ips/models/reserved_ip_actions.yml"]["reserved_ip_action_type"], "type"> & {
            droplet_id: number;
        };
    };
    "resources/reserved_ips/models/reserved_ip_create.yml": OneOf<[
        {
            droplet_id: number;
        },
        {
            region: string;
            project_id?: string;
        }
    ]>;
    "resources/reserved_ips/models/reserved_ip.yml": {
        ip?: string;
        region?: external["resources/regions/models/region.yml"] & Record<string, never>;
        droplet?: (Record<string, unknown> | null) | external["resources/droplets/models/droplet.yml"];
        locked?: boolean;
        project_id?: string;
    };
    "resources/reserved_ips/parameters.yml": {
        reserved_ip: string;
    };
    "resources/reserved_ips/reservedIPs_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/reserved_ips/models/reserved_ip_create.yml"];
            };
        };
        responses: {
            202: external["resources/reserved_ips/responses/reserved_ip_created.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/reserved_ips/reservedIPs_delete.yml": {
        parameters: {
            path: {
                reserved_ip: external["resources/reserved_ips/parameters.yml"]["reserved_ip"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/reserved_ips/reservedIPs_get.yml": {
        parameters: {
            path: {
                reserved_ip: external["resources/reserved_ips/parameters.yml"]["reserved_ip"];
            };
        };
        responses: {
            200: external["resources/reserved_ips/responses/reserved_ip.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/reserved_ips/reservedIPs_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/reserved_ips/responses/reserved_ip_list.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/reserved_ips/reservedIPsActions_get.yml": {
        parameters: {
            path: {
                reserved_ip: external["resources/reserved_ips/parameters.yml"]["reserved_ip"];
                action_id: external["resources/actions/parameters.yml"]["action_id"];
            };
        };
        responses: {
            200: external["resources/reserved_ips/responses/reserved_ip_action.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/reserved_ips/reservedIPsActions_list.yml": {
        parameters: {
            path: {
                reserved_ip: external["resources/reserved_ips/parameters.yml"]["reserved_ip"];
            };
        };
        responses: {
            200: external["resources/reserved_ips/responses/reserved_ip_actions.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/reserved_ips/reservedIPsActions_post.yml": {
        parameters: {
            path: {
                reserved_ip: external["resources/reserved_ips/parameters.yml"]["reserved_ip"];
            };
        };
        requestBody?: {
            content: {
                "application/json": external["resources/reserved_ips/models/reserved_ip_actions.yml"]["reserved_ip_action_unassign"] | external["resources/reserved_ips/models/reserved_ip_actions.yml"]["reserved_ip_action_assign"];
            };
        };
        responses: {
            201: external["resources/reserved_ips/responses/reserved_ip_action.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/reserved_ips/responses/examples.yml": unknown;
    "resources/reserved_ips/responses/reserved_ip_action.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                action?: external["resources/actions/models/action.yml"] & {
                    project_id?: string;
                };
            };
        };
    };
    "resources/reserved_ips/responses/reserved_ip_actions.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                actions?: external["resources/actions/models/action.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/reserved_ips/responses/reserved_ip_created.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                reserved_ip?: external["resources/reserved_ips/models/reserved_ip.yml"];
                links?: {
                    droplets?: external["shared/models/action_link.yml"][];
                    actions?: external["shared/models/action_link.yml"][];
                };
            };
        };
    };
    "resources/reserved_ips/responses/reserved_ip_list.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                reserved_ips?: external["resources/reserved_ips/models/reserved_ip.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/reserved_ips/responses/reserved_ip.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                reserved_ip?: external["resources/reserved_ips/models/reserved_ip.yml"];
            };
        };
    };
    "resources/sizes/models/size.yml": {
        slug: string;
        memory: number;
        vcpus: number;
        disk: number;
        transfer: number;
        price_monthly: number;
        price_hourly: number;
        regions: string[];
        available: boolean;
        description: string;
    };
    "resources/sizes/responses/all_sizes.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                sizes: external["resources/sizes/models/size.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/sizes/sizes_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/sizes/responses/all_sizes.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/snapshots/models/snapshots_base.yml": {
        name: string;
        created_at: string;
        regions: string[];
        min_disk_size: number;
        size_gigabytes: number;
    };
    "resources/snapshots/models/snapshots.yml": {
        id: string;
    } & external["resources/snapshots/models/snapshots_base.yml"] & ({
        resource_id: string;
        resource_type: "droplet" | "volume";
        tags: string[] | null;
    });
    "resources/snapshots/parameters.yml": {
        snapshot_resource_type?: "droplet" | "volume";
        snapshot_id: number | string;
    };
    "resources/snapshots/responses/examples.yml": unknown;
    "resources/snapshots/responses/snapshots_existing.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                snapshot?: external["resources/snapshots/models/snapshots.yml"];
            };
        };
    };
    "resources/snapshots/responses/snapshots.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                snapshots?: external["resources/snapshots/models/snapshots.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/snapshots/snapshots_delete.yml": {
        parameters: {
            path: {
                snapshot_id: external["resources/snapshots/parameters.yml"]["snapshot_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/snapshots/snapshots_get.yml": {
        parameters: {
            path: {
                snapshot_id: external["resources/snapshots/parameters.yml"]["snapshot_id"];
            };
        };
        responses: {
            200: external["resources/snapshots/responses/snapshots_existing.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/snapshots/snapshots_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
                resource_type?: external["resources/snapshots/parameters.yml"]["snapshot_resource_type"];
            };
        };
        responses: {
            200: external["resources/snapshots/responses/snapshots.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/ssh_keys/attributes/ssh_key_fingerprint.yml": string;
    "resources/ssh_keys/attributes/ssh_key_id.yml": number;
    "resources/ssh_keys/attributes/ssh_key_name.yml": string;
    "resources/ssh_keys/links/sshKeys_delete_by_fingerprint.yml": {
        content: never;
    };
    "resources/ssh_keys/links/sshKeys_delete_by_id.yml": {
        content: never;
    };
    "resources/ssh_keys/links/sshKeys_get_by_fingerprint.yml": {
        content: never;
    };
    "resources/ssh_keys/links/sshKeys_get_by_id.yml": {
        content: never;
    };
    "resources/ssh_keys/models/sshKeys.yml": {
        id?: external["resources/ssh_keys/attributes/ssh_key_id.yml"];
        fingerprint?: external["resources/ssh_keys/attributes/ssh_key_fingerprint.yml"];
        public_key: string;
        name: external["resources/ssh_keys/attributes/ssh_key_name.yml"];
    };
    "resources/ssh_keys/parameters/ssh_key_identifier.yml": unknown;
    "resources/ssh_keys/responses/sshKeys_all.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                ssh_keys?: external["resources/ssh_keys/models/sshKeys.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/ssh_keys/responses/sshKeys_existing.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                ssh_key?: external["resources/ssh_keys/models/sshKeys.yml"];
            };
        };
    };
    "resources/ssh_keys/responses/sshKeys_new.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                ssh_key?: external["resources/ssh_keys/models/sshKeys.yml"];
            };
        };
    };
    "resources/ssh_keys/sshKeys_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/ssh_keys/models/sshKeys.yml"];
            };
        };
        responses: {
            201: external["resources/ssh_keys/responses/sshKeys_new.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/ssh_keys/sshKeys_delete.yml": {
        parameters: {
            path: {
                ssh_key_identifier: external["resources/ssh_keys/parameters/ssh_key_identifier.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/ssh_keys/sshKeys_get.yml": {
        parameters: {
            path: {
                ssh_key_identifier: external["resources/ssh_keys/parameters/ssh_key_identifier.yml"];
            };
        };
        responses: {
            200: external["resources/ssh_keys/responses/sshKeys_existing.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/ssh_keys/sshKeys_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/ssh_keys/responses/sshKeys_all.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/ssh_keys/sshKeys_update.yml": {
        parameters: {
            path: {
                ssh_key_identifier: external["resources/ssh_keys/parameters/ssh_key_identifier.yml"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name?: external["resources/ssh_keys/attributes/ssh_key_name.yml"];
                };
            };
        };
        responses: {
            200: external["resources/ssh_keys/responses/sshKeys_existing.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/tags/models/tags_metadata.yml": {
        count?: number;
        last_tagged_uri?: string;
    };
    "resources/tags/models/tags_resource.yml": {
        resources: ({
            resource_id?: string;
            resource_type?: "droplet" | "image" | "volume" | "volume_snapshot";
        })[];
    };
    "resources/tags/models/tags.yml": {
        name?: string;
        resources?: external["resources/tags/models/tags_metadata.yml"] & {
            droplets?: external["resources/tags/models/tags_metadata.yml"];
            imgages?: external["resources/tags/models/tags_metadata.yml"];
            volumes?: external["resources/tags/models/tags_metadata.yml"];
            volume_snapshots?: external["resources/tags/models/tags_metadata.yml"];
            databases?: external["resources/tags/models/tags_metadata.yml"];
        };
    };
    "resources/tags/parameters.yml": {
        tag_id: string;
    };
    "resources/tags/responses/tags_all.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                tags?: external["resources/tags/models/tags.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/tags/responses/tags_bad_request.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
            "x-request-id"?: unknown;
        };
        content: {
            "application/json": external["shared/models/error_with_root_causes.yml"];
        };
    };
    "resources/tags/responses/tags_existing.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                tag?: external["resources/tags/models/tags.yml"];
            };
        };
    };
    "resources/tags/responses/tags_new.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                tag?: external["resources/tags/models/tags.yml"];
            };
        };
    };
    "resources/tags/tags_assign_resources.yml": {
        parameters: {
            path: {
                tag_id: external["resources/tags/parameters.yml"]["tag_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/tags/models/tags_resource.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/tags/tags_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/tags/models/tags.yml"];
            };
        };
        responses: {
            201: external["resources/tags/responses/tags_new.yml"];
            400: external["resources/tags/responses/tags_bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/tags/tags_delete.yml": {
        parameters: {
            path: {
                tag_id: external["resources/tags/parameters.yml"]["tag_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/tags/tags_get.yml": {
        parameters: {
            path: {
                tag_id: external["resources/tags/parameters.yml"]["tag_id"];
            };
        };
        responses: {
            200: external["resources/tags/responses/tags_existing.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/tags/tags_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/tags/responses/tags_all.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/tags/tags_unassign_resources.yml": {
        parameters: {
            path: {
                tag_id: external["resources/tags/parameters.yml"]["tag_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/tags/models/tags_resource.yml"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/create_alert.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": WithRequired<external["resources/uptime/models/alert.yml"]["alert"], "name" | "type" | "notifications">;
            };
        };
        responses: {
            201: external["resources/uptime/responses/existing_alert.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/create_check.yml": {
        requestBody: {
            content: {
                "application/json": WithRequired<external["resources/uptime/models/check.yml"]["check_updatable"], "name" | "method" | "target" | "regions" | "type" | "enabled">;
            };
        };
        responses: {
            201: external["resources/uptime/responses/existing_check.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/delete_alert.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
                alert_id: external["resources/uptime/parameters.yml"]["alert_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/delete_check.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/get_alert.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
                alert_id: external["resources/uptime/parameters.yml"]["alert_id"];
            };
        };
        responses: {
            200: external["resources/uptime/responses/existing_alert.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/get_check_state.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
            };
        };
        responses: {
            200: external["resources/uptime/responses/existing_check_state.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/get_check.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
            };
        };
        responses: {
            200: external["resources/uptime/responses/existing_check.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/list_alerts.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
            };
        };
        responses: {
            200: external["resources/uptime/responses/all_alerts.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/list_checks.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/uptime/responses/all_checks.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/models/alert.yml": unknown;
    "resources/uptime/models/check.yml": unknown;
    "resources/uptime/models/notification.yml": {
        email: string[];
        slack: {
            channel: string;
            url: string;
        }[];
    };
    "resources/uptime/models/state.yml": unknown;
    "resources/uptime/parameters.yml": {
        check_id: string;
        alert_id: string;
    };
    "resources/uptime/responses/all_alerts.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                alerts?: external["resources/uptime/models/alert.yml"]["alert"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/uptime/responses/all_checks.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                checks?: external["resources/uptime/models/check.yml"]["check"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/uptime/responses/existing_alert.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                alert?: external["resources/uptime/models/alert.yml"]["alert"];
            };
        };
    };
    "resources/uptime/responses/existing_check_state.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                state?: external["resources/uptime/models/state.yml"]["state"];
            };
        };
    };
    "resources/uptime/responses/existing_check.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                check?: external["resources/uptime/models/check.yml"]["check"];
            };
        };
    };
    "resources/uptime/update_alert.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
                alert_id: external["resources/uptime/parameters.yml"]["alert_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/uptime/models/alert.yml"]["alert_updatable"];
            };
        };
        responses: {
            200: external["resources/uptime/responses/existing_alert.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/uptime/update_check.yml": {
        parameters: {
            path: {
                check_id: external["resources/uptime/parameters.yml"]["check_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/uptime/models/check.yml"]["check_updatable"];
            };
        };
        responses: {
            200: external["resources/uptime/responses/existing_check.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/examples.yml": unknown;
    "resources/volumes/models/attributes.yml": unknown;
    "resources/volumes/models/volume_action_post_attach.yml": external["resources/volumes/models/volume_action_post_base.yml"] & {
        droplet_id: external["resources/volumes/models/attributes.yml"]["volume_action_droplet_id"];
        tags?: external["shared/attributes/tags_array.yml"];
    };
    "resources/volumes/models/volume_action_post_base.yml": {
        type: "attach" | "detach" | "resize";
        region?: external["shared/attributes/region_slug.yml"];
    };
    "resources/volumes/models/volume_action_post_detach.yml": external["resources/volumes/models/volume_action_post_base.yml"] & {
        droplet_id: external["resources/volumes/models/attributes.yml"]["volume_action_droplet_id"];
    };
    "resources/volumes/models/volume_action_post_resize.yml": external["resources/volumes/models/volume_action_post_base.yml"] & {
        size_gigabytes: number;
    };
    "resources/volumes/models/volume_base.yml": {
        id?: string;
        droplet_ids?: readonly number[] | null;
        name?: string;
        description?: string;
        size_gigabytes?: number;
        created_at?: string;
        tags?: external["shared/attributes/tags_array.yml"];
    };
    "resources/volumes/models/volume_full.yml": external["resources/volumes/models/volume_base.yml"] & {
        region?: external["resources/regions/models/region.yml"];
        filesystem_type?: string;
        filesystem_label?: string;
    };
    "resources/volumes/models/volumeAction.yml": ({
        type?: string;
        resource_id?: number | null;
    }) & external["resources/actions/models/action.yml"];
    "resources/volumes/models/volumes_ext4.yml": external["resources/volumes/models/volume_base.yml"] & external["resources/volumes/models/attributes.yml"]["volume_snapshot_id"] & external["resources/volumes/models/attributes.yml"]["volume_write_file_system_type"] & {
        region: external["shared/attributes/region_slug.yml"];
        filesystem_label?: external["resources/volumes/models/attributes.yml"]["volume_write_file_system_label"];
    };
    "resources/volumes/models/volumes_xfs.yml": external["resources/volumes/models/volume_base.yml"] & external["resources/volumes/models/attributes.yml"]["volume_snapshot_id"] & external["resources/volumes/models/attributes.yml"]["volume_write_file_system_type"] & {
        region: external["shared/attributes/region_slug.yml"];
        filesystem_label?: external["resources/volumes/models/attributes.yml"]["volume_write_file_system_label"];
    };
    "resources/volumes/parameters.yml": {
        volume_id: string;
        volume_name?: string;
        volume_snapshot_id: string;
    };
    "resources/volumes/responses/volume.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                volume?: external["resources/volumes/models/volume_full.yml"];
            };
        };
    };
    "resources/volumes/responses/volumeAction.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                action?: external["resources/volumes/models/volumeAction.yml"];
            };
        };
    };
    "resources/volumes/responses/volumeActions.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                actions?: external["resources/volumes/models/volumeAction.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/volumes/responses/volumes.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                volumes: external["resources/volumes/models/volume_full.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/volumes/responses/volumeSnapshot.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                snapshot?: external["resources/snapshots/models/snapshots.yml"];
            };
        };
    };
    "resources/volumes/responses/volumeSnapshots.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                snapshots?: external["resources/snapshots/models/snapshots.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/volumes/volumeActions_get.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                volume_id: external["resources/volumes/parameters.yml"]["volume_id"];
                action_id: external["resources/actions/parameters.yml"]["action_id"];
            };
        };
        responses: {
            200: external["resources/volumes/responses/volumeAction.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumeActions_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                volume_id: external["resources/volumes/parameters.yml"]["volume_id"];
            };
        };
        responses: {
            200: external["resources/volumes/responses/volumeActions.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumeActions_post_byId.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                volume_id: external["resources/volumes/parameters.yml"]["volume_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/volumes/models/volume_action_post_attach.yml"] | external["resources/volumes/models/volume_action_post_detach.yml"] | external["resources/volumes/models/volume_action_post_resize.yml"];
            };
        };
        responses: {
            202: external["resources/volumes/responses/volumeAction.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumeActions_post.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/volumes/models/volume_action_post_attach.yml"] | external["resources/volumes/models/volume_action_post_detach.yml"];
            };
        };
        responses: {
            202: external["resources/volumes/responses/volumeAction.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumes_create.yml": {
        requestBody: {
            content: {
                "application/json": external["resources/volumes/models/volumes_ext4.yml"] | external["resources/volumes/models/volumes_xfs.yml"];
            };
        };
        responses: {
            201: external["resources/volumes/responses/volume.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumes_delete_byName.yml": {
        parameters: {
            query?: {
                name?: external["resources/volumes/parameters.yml"]["volume_name"];
                region?: external["shared/parameters.yml"]["region"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumes_delete.yml": {
        parameters: {
            path: {
                volume_id: external["resources/volumes/parameters.yml"]["volume_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumes_get.yml": {
        parameters: {
            path: {
                volume_id: external["resources/volumes/parameters.yml"]["volume_id"];
            };
        };
        responses: {
            200: external["resources/volumes/responses/volume.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumes_list.yml": {
        parameters: {
            query?: {
                name?: external["resources/volumes/parameters.yml"]["volume_name"];
                region?: external["shared/parameters.yml"]["region"];
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/volumes/responses/volumes.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumeSnapshots_create.yml": {
        parameters: {
            path: {
                volume_id: external["resources/volumes/parameters.yml"]["volume_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                    tags?: external["shared/attributes/tags_array.yml"];
                };
            };
        };
        responses: {
            201: external["resources/volumes/responses/volumeSnapshot.yml"];
            400: external["shared/responses/bad_request.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumeSnapshots_delete_byId.yml": {
        parameters: {
            path: {
                snapshot_id: external["resources/snapshots/parameters.yml"]["snapshot_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumeSnapshots_get_byId.yml": {
        parameters: {
            path: {
                snapshot_id: external["resources/snapshots/parameters.yml"]["snapshot_id"];
            };
        };
        responses: {
            200: external["resources/volumes/responses/volumeSnapshot.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/volumes/volumeSnapshots_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                volume_id: external["resources/volumes/parameters.yml"]["volume_id"];
            };
        };
        responses: {
            200: external["resources/volumes/responses/volumeSnapshots.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/vpcs/models/vpc_member.yml": {
        name?: string;
        urn?: external["shared/attributes/urn.yml"];
        created_at?: string;
    };
    "resources/vpcs/models/vpc.yml": unknown;
    "resources/vpcs/parameters.yml": {
        vpc_id: string;
        vpc_resource_type?: string;
    };
    "resources/vpcs/responses/all_vpcs.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                vpcs?: external["resources/vpcs/models/vpc.yml"]["vpc"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/vpcs/responses/existing_vpc.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                vpc?: external["resources/vpcs/models/vpc.yml"]["vpc"];
            };
        };
    };
    "resources/vpcs/responses/vpc_members.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": {
                members?: external["resources/vpcs/models/vpc_member.yml"][];
            } & external["shared/pages.yml"]["pagination"] & external["shared/meta.yml"];
        };
    };
    "resources/vpcs/vpcs_create.yml": {
        requestBody: {
            content: {
                "application/json": WithRequired<external["resources/vpcs/models/vpc.yml"]["vpc_updatable"] & external["resources/vpcs/models/vpc.yml"]["vpc_create"], "name" | "region">;
            };
        };
        responses: {
            201: external["resources/vpcs/responses/existing_vpc.yml"];
            401: external["shared/responses/unauthorized.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/vpcs/vpcs_delete.yml": {
        parameters: {
            path: {
                vpc_id: external["resources/vpcs/parameters.yml"]["vpc_id"];
            };
        };
        responses: {
            204: external["shared/responses/no_content.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/vpcs/vpcs_get.yml": {
        parameters: {
            path: {
                vpc_id: external["resources/vpcs/parameters.yml"]["vpc_id"];
            };
        };
        responses: {
            200: external["resources/vpcs/responses/existing_vpc.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/vpcs/vpcs_list_members.yml": {
        parameters: {
            query?: {
                resource_type?: external["resources/vpcs/parameters.yml"]["vpc_resource_type"];
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
            path: {
                vpc_id: external["resources/vpcs/parameters.yml"]["vpc_id"];
            };
        };
        responses: {
            200: external["resources/vpcs/responses/vpc_members.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/vpcs/vpcs_list.yml": {
        parameters: {
            query?: {
                per_page?: external["shared/parameters.yml"]["per_page"];
                page?: external["shared/parameters.yml"]["page"];
            };
        };
        responses: {
            200: external["resources/vpcs/responses/all_vpcs.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/vpcs/vpcs_patch.yml": {
        parameters: {
            path: {
                vpc_id: external["resources/vpcs/parameters.yml"]["vpc_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": external["resources/vpcs/models/vpc.yml"]["vpc_updatable"] & external["resources/vpcs/models/vpc.yml"]["vpc_default"];
            };
        };
        responses: {
            200: external["resources/vpcs/responses/existing_vpc.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "resources/vpcs/vpcs_update.yml": {
        parameters: {
            path: {
                vpc_id: external["resources/vpcs/parameters.yml"]["vpc_id"];
            };
        };
        requestBody: {
            content: {
                "application/json": WithRequired<external["resources/vpcs/models/vpc.yml"]["vpc_updatable"] & external["resources/vpcs/models/vpc.yml"]["vpc_default"], "name">;
            };
        };
        responses: {
            200: external["resources/vpcs/responses/existing_vpc.yml"];
            401: external["shared/responses/unauthorized.yml"];
            404: external["shared/responses/not_found.yml"];
            429: external["shared/responses/too_many_requests.yml"];
            500: external["shared/responses/server_error.yml"];
            default: external["shared/responses/unexpected_error.yml"];
        };
    };
    "shared/attributes/distribution.yml": "Arch Linux" | "CentOS" | "CoreOS" | "Debian" | "Fedora" | "Fedora Atomic" | "FreeBSD" | "Gentoo" | "openSUSE" | "RancherOS" | "Rocky Linux" | "Ubuntu" | "Unknown";
    "shared/attributes/region_slug.yml": "ams1" | "ams2" | "ams3" | "blr1" | "fra1" | "lon1" | "nyc1" | "nyc2" | "nyc3" | "sfo1" | "sfo2" | "sfo3" | "sgp1" | "tor1";
    "shared/attributes/regions_array.yml": external["shared/attributes/region_slug.yml"][];
    "shared/attributes/tags_array.yml": string[] | null;
    "shared/attributes/urn.yml": string;
    "shared/headers.yml": {
        "content-disposition": unknown;
        "ratelimit-limit": unknown;
        "ratelimit-remaining": unknown;
        "ratelimit-reset": unknown;
        "x-request-id": unknown;
        "content-type": unknown;
    };
    "shared/meta_optional_total.yml": {
        meta: external["shared/models/meta_properties.yml"];
    };
    "shared/meta.yml": {
        meta: external["shared/models/meta_properties.yml"];
    };
    "shared/models/action_link.yml": {
        id?: number;
        rel?: string;
        href?: string;
    };
    "shared/models/error_with_root_causes.yml": {
        error: string;
        messages?: string[] | null;
        root_causes: string[];
    };
    "shared/models/error.yml": {
        id: string;
        message: string;
        request_id?: string;
    };
    "shared/models/meta_properties.yml": {
        total?: number;
    };
    "shared/pages.yml": {
        pagination: {
            links?: external["shared/pages.yml"]["page_links"];
        };
        page_links: {
            pages?: unknown;
        };
        backward_links: external["shared/pages.yml"]["link_to_first_page"] & external["shared/pages.yml"]["link_to_prev_page"];
        forward_links: external["shared/pages.yml"]["link_to_last_page"] & external["shared/pages.yml"]["link_to_next_page"];
        link_to_first_page: {
            first?: string;
        };
        link_to_prev_page: {
            prev?: string;
        };
        link_to_next_page: {
            next?: string;
        };
        link_to_last_page: {
            last?: string;
        };
    };
    "shared/parameters.yml": {
        per_page?: number;
        page?: number;
        region?: external["shared/attributes/region_slug.yml"];
    };
    "shared/responses/accepted.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: never;
    };
    "shared/responses/bad_request.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "shared/responses/conflict.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "shared/responses/no_content_with_content_type.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
            "content-type": external["shared/headers.yml"]["content-type"];
        };
        content: never;
    };
    "shared/responses/no_content.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: never;
    };
    "shared/responses/not_found.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "shared/responses/server_error.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "shared/responses/too_many_requests.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "shared/responses/unauthorized.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
    "shared/responses/unexpected_error.yml": {
        headers: {
            "ratelimit-limit": external["shared/headers.yml"]["ratelimit-limit"];
            "ratelimit-remaining": external["shared/headers.yml"]["ratelimit-remaining"];
            "ratelimit-reset": external["shared/headers.yml"]["ratelimit-reset"];
        };
        content: {
            "application/json": external["shared/models/error.yml"];
        };
    };
}
export type operations = Record<string, never>;
export {};
